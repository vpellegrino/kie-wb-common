{"version":3,"sources":["boxed_expression_editor/index.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/Resizer/Resizer.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpressionCell.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfo.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfoCell.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/index.ts"],"names":["DataType","LogicType","TableOperation","PopoverMenu","children","arrowPlacement","body","title","appendTo","Popover","data-ouia-component-id","className","position","distance","id","reference","headerContent","bodyContent","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","selectedDataType","Undefined","selectedExpressionName","onExpressionUpdate","i18n","useBoxedExpressionEditorI18n","editExpression","name","dataType","useState","dataTypeSelectOpen","setDataTypeSelectOpen","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","useCallback","event","target","value","type","onDataTypeSelect","selection","getDataTypes","_","Object","values","key","SelectOption","onDataTypeFilter","e","input","RegExp","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","onChange","onBlur","placeholder","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","choose","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","Resizer","height","minHeight","minWidth","onHorizontalResizeStop","width","resizerHandler","useMemo","onResizeStop","data","size","minConstraints","axis","handle","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","setLiteralExpressionContent","literalExpressionWidth","setLiteralExpressionWidth","expressionDefinition","logicType","window","beeApi","broadcastLiteralExpressionDefinition","onContentChange","updatedContent","getEditExpressionMenuArrowPlacement","document","querySelector","renderElementWithResizeHandler","element","renderLiteralExpressionHeader","getBodyContent","TextArea","defaultValue","aria-label","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","map","groupOperation","MenuGroup","group","label","items","operation","MenuList","MenuItem","isDisabled","NO_TABLE_CONTEXT_MENU_CLASS","Table","tableId","columnPrefix","editColumnLabel","onColumnsUpdate","onRowsUpdate","onSingleRowUpdate","onRowAdding","defaultCell","rows","columns","headerHasMultipleLevels","tableRef","useRef","accessor","disableResizing","isCountColumn","hideFilter","tableColumns","setTableColumns","tableRows","setTableRows","showTableHandler","setShowTableHandler","tableHandlerTarget","setTableHandlerTarget","parseInt","toString","tableHandlerAllowedOperations","setTableHandlerAllowedOperations","lastSelectedColumnIndex","setLastSelectedColumnIndex","lastSelectedRowIndex","setLastSelectedRowIndex","insertBefore","elements","index","slice","insertAfter","deleteAt","updateColumnNameInRows","prevColumnName","newColumnName","prevTableCells","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","prevTableColumns","updatedTableColumns","onCellUpdate","rowIndex","columnId","updatedTableCells","onRowUpdate","updatedRow","updatedRows","generateNextAvailableColumnName","lastIndex","candidateName","generateNextAvailableColumn","length","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowInsertAbove","prevTableRows","RowInsertBelow","RowDelete","defaultColumn","Cell","cellRef","column","initialValue","row","React","setValue","EditableCell","contextMenuIsAvailable","targetIsContainedInCurrentTable","closest","current","contextMenuAvailableForTarget","classList","contains","tableInstance","useTable","getThProps","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","preventDefault","getTdProps","useBlockLayout","useResizeColumns","buildTableHandler","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","resizeNestedColumns","updatedWidth","updatedColumn","splice","finishedResizing","state","columnResizing","isResizingColumn","columnWidths","updatedColumnWidth","renderCountColumn","Th","getHeaderProps","data-ouia-component-type","renderResizableHeaderCell","canResize","getResizerProps","renderResizableColumn","renderColumn","renderAdditiveRow","Tr","Td","role","childIndex","style","allColumns","renderHeaderGroups","headerGroups","headerGroup","getHeaderGroupProps","headers","renderLastLevelInHeaderGroups","TableComposable","getTableProps","ref","Thead","noWrap","Tbody","getTableBodyProps","prepareRow","getRowProps","cells","cell","cellIndex","getCellProps","render","RelationExpression","relationProps","columnOperations","insertLeft","insertRight","delete","rowOperations","insertAbove","insertBelow","undefined","broadcastRelationExpressionDefinition","convertColumnsForTheTable","onSavingColumns","columnInstance","convertRowsForTheTable","tableRow","onSavingRows","push","editRelation","ContextEntryExpression","expression","expressionContainerRef","entryExpression","setEntryExpression","expressionChangedExternally","getLogicTypeSelectorRef","onLogicTypeUpdating","previousSelectedExpression","updatedExpression","onLogicTypeResetting","selectedExpression","getPlacementRef","ContextEntryExpressionCell","contextEntry","ContextEntryInfo","onContextEntryUpdate","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","editContextEntry","ContextEntryInfoCell","entryInfo","setEntryInfo","useDragEvents","resizerElement","mouseDownEvent","mouseUpEvent","MouseEvent","bubbles","cancelable","setResizerElement","clientX","getBoundingClientRect","left","clientY","top","initMouseDownEvent","dragItHorizontally","x","dispatchEvent","moveHorizontallyBy","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","ContextExpression","uid","contextEntries","result","entryInfoWidth","entryExpressionWidth","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setExpressionWidth","expressionMinWidth","setExpressionMinWidth","setColumns","setRows","expressionColumn","prevExpressionColumn","generateNextAvailableEntryName","checkForOverflowingCell","Array","from","querySelectorAll","reduce","acc","td","clientWidth","scrollWidth","isOverflow","contentWidth","Math","max","checkForSpareSpace","spareSpace","isSpareSpace","updateValueColumnWidth","updatedDefinition","Context","broadcastContextExpressionDefinition","LogicTypeSelector","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","addEventListener","removeEventListener","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","nextId","DecisionTable","Function","Invocation","List","getLogicTypesWithoutUndefined","renderLogicTypeItems","SimpleListItem","getLogicSelectionArrowPlacement","onLogicTypeSelect","currentItem","currentItemProps","selectedLogicType","buildLogicSelectorMenu","selectLogicType","SimpleList","executeClearAction","buildContextMenu","Button","isSmall","ButtonVariant","primary","onClick","clear","selectExpression","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","resetExpressionDefinition","BoxedExpressionEditor","defaults","boxedExpressionEditorI18nDefaults","dictionaries","boxedExpressionEditorDictionaries","initialLocale","navigator","language","ctx","BoxedExpressionEditorI18nContext","en","en_common","context","decisionTable","function","invocation","list","literalExpression","relation","locale","dictionary","Map","useContext","App","setUpdatedExpression","definition","JSON","stringify","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b522865a.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./components\";\nexport * from \"./api\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className=\"popover-menu-selector\"\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      setDataType(selection);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: selection,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <Select\n              ouiaId=\"edit-expression-data-type\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={i18n.choose}\n              onToggle={onDataTypeSelectToggle}\n              onSelect={onDataTypeSelect}\n              onFilter={onDataTypeFilter}\n              isOpen={dataTypeSelectOpen}\n              selections={dataType}\n              hasInlineFilter\n              inlineFilterPlaceholderText={i18n.choose}\n            >\n              {getDataTypes()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\n\nexport interface ResizerProps {\n  width: number;\n  height: number;\n  minWidth: number;\n  minHeight: number;\n  onHorizontalResizeStop: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height,\n  minHeight,\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  const resizerHandler = useMemo(\n    () => (\n      <div className=\"pf-c-drawer\">\n        <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n          <div className=\"pf-c-drawer__splitter-handle\" />\n        </div>\n      </div>\n    ),\n    []\n  );\n\n  const onResizeStop = useCallback((e, data) => onHorizontalResizeStop(data.size.width), [onHorizontalResizeStop]);\n\n  return (\n    <ResizableBox\n      width={width}\n      height={height}\n      minConstraints={[minWidth, minHeight]}\n      axis=\"x\"\n      onResizeStop={onResizeStop}\n      handle={resizerHandler}\n    >\n      {children}\n    </ResizableBox>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  content,\n  dataType,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n  const HEADER_HEIGHT = 40;\n\n  const [expressionName, setExpressionName] = useState(name);\n  const [expressionDataType, setExpressionDataType] = useState(dataType);\n  const [literalExpressionContent, setLiteralExpressionContent] = useState(content);\n  const [literalExpressionWidth, setLiteralExpressionWidth] = useState(width || HEADER_WIDTH);\n\n  useEffect(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent,\n      ...(!isHeadless && literalExpressionWidth !== HEADER_WIDTH ? { width: literalExpressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [\n    expressionName,\n    expressionDataType,\n    literalExpressionContent,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    literalExpressionWidth,\n  ]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      onUpdatingNameAndDataType?.(name, dataType);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onContentChange = useCallback((event) => {\n    const updatedContent = event.target.value;\n    setLiteralExpressionContent(updatedContent);\n  }, []);\n\n  const getEditExpressionMenuArrowPlacement = useCallback(\n    () => document.querySelector(\".literal-expression-header\")! as HTMLElement,\n    []\n  );\n\n  const onHorizontalResizeStop = useCallback((width) => setLiteralExpressionWidth(width), []);\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth}\n        height={HEADER_HEIGHT}\n        minWidth={HEADER_WIDTH}\n        minHeight={HEADER_HEIGHT}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [literalExpressionWidth, onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <div className=\"expression-info\">\n            <p className=\"expression-name pf-u-text-truncate\">{expressionName}</p>\n            <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType})</p>\n          </div>\n        )}\n      </div>\n    );\n  }, [expressionDataType, expressionName, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <TextArea\n        defaultValue={literalExpressionContent}\n        onBlur={onContentChange}\n        aria-label=\"literal-expression-content\"\n      />\n    ),\n    [literalExpressionContent, onContentChange]\n  );\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n      <EditExpressionMenu\n        arrowPlacement={getEditExpressionMenuArrowPlacement}\n        selectedExpressionName={expressionName}\n        selectedDataType={expressionDataType}\n        onExpressionUpdate={onExpressionUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Cell,\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  HeaderGroup,\n  Row,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { CellProps, DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\n\nexport interface TableProps {\n  /** Table identifier, useful for nested structures */\n  tableId?: string;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** The prefix to be used for the column name */\n  columnPrefix?: string;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: Column[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate?: (rows: DataRecord[]) => void;\n  /** Function to be executed when a single row gets modified */\n  onSingleRowUpdate?: (rowIndex: number, row: DataRecord) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** True to have no header for this table */\n  isHeadless?: boolean;\n  /** True to support multiple levels in the header */\n  headerHasMultipleLevels?: boolean;\n}\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  tableId,\n  children,\n  columnPrefix = \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onSingleRowUpdate,\n  onRowAdding = () => ({}),\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  isHeadless = false,\n  headerHasMultipleLevels = false,\n}: TableProps) => {\n  const NUMBER_OF_ROWS_COLUMN = \"#\";\n  const NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const [tableColumns, setTableColumns] = useState([\n    {\n      label: NUMBER_OF_ROWS_COLUMN,\n      accessor: NUMBER_OF_ROWS_COLUMN,\n      width: 60,\n      disableResizing: true,\n      isCountColumn: true,\n      hideFilter: true,\n      ...(headerHasMultipleLevels\n        ? {\n            columns: [\n              {\n                label: NUMBER_OF_ROWS_SUBCOLUMN,\n                accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n                width: 60,\n                disableResizing: true,\n                isCountColumn: true,\n                hideFilter: true,\n              },\n            ],\n          }\n        : {}),\n    },\n    ...columns,\n  ]);\n  const [tableRows, setTableRows] = useState(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      setTableRows((prevTableCells) => {\n        return _.map(prevTableCells, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        });\n      }),\n    []\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns[columnIndex] as ColumnInstance).accessor as string;\n        setTableColumns((prevTableColumns: ColumnInstance[]) => {\n          const updatedTableColumns = [...prevTableColumns];\n          updatedTableColumns[columnIndex].label = name;\n          updatedTableColumns[columnIndex].accessor = name;\n          updatedTableColumns[columnIndex].dataType = dataType;\n          return updatedTableColumns;\n        });\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [tableColumns, updateColumnNameInRows]\n  );\n\n  const onCellUpdate = useCallback((rowIndex: number, columnId: string, value: string) => {\n    setTableRows((prevTableCells) => {\n      const updatedTableCells = [...prevTableCells];\n      updatedTableCells[rowIndex][columnId] = value;\n      return updatedTableCells;\n    });\n  }, []);\n\n  const onRowUpdate = useCallback(\n    (rowIndex: number, updatedRow: DataRecord) => {\n      onSingleRowUpdate?.(rowIndex, updatedRow);\n      setTableRows((prevTableCells) => {\n        const updatedRows = [...prevTableCells];\n        updatedRows[rowIndex] = updatedRow;\n        return updatedRows;\n      });\n    },\n    [onSingleRowUpdate]\n  );\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      };\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          setTableColumns((prevTableColumns) =>\n            insertBefore(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          setTableColumns((prevTableColumns) =>\n            insertAfter(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          setTableColumns((prevTableColumns) => deleteAt(prevTableColumns, lastSelectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          setTableRows((prevTableRows) => insertBefore(prevTableRows, lastSelectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          setTableRows((prevTableRows) => insertAfter(prevTableRows, lastSelectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          setTableRows((prevTableRows) => deleteAt(prevTableRows, lastSelectedRowIndex));\n          break;\n      }\n      setShowTableHandler(false);\n    },\n    [generateNextAvailableColumn, lastSelectedColumnIndex, lastSelectedRowIndex, onRowAdding]\n  );\n\n  const defaultColumn = {\n    minWidth: 38,\n    width: 150,\n    Cell: useCallback(\n      (cellRef) => {\n        const column = cellRef.column as ColumnInstance;\n        if (column.isCountColumn) {\n          return cellRef.value;\n        } else {\n          return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n        }\n      },\n      [defaultCell]\n    ),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const getThProps = (column: ColumnInstance, columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n        ]);\n        setTableHandlerTarget(target);\n        setShowTableHandler(true);\n        setLastSelectedColumnIndex(columnIndex);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.length > 1 ? [TableOperation.RowDelete] : []),\n        ]);\n        setTableHandlerTarget(target);\n        setShowTableHandler(true);\n        setLastSelectedColumnIndex(columnIndex);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns,\n      data: tableRows,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  const buildTableHandler = useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [showTableHandler, handlerConfiguration, tableHandlerAllowedOperations, handlingOperation, tableHandlerTarget]\n  );\n\n  useEffect(() => {\n    onColumnsUpdate(tableColumns.slice(1)); //Removing \"# of rows\" column\n  }, [onColumnsUpdate, tableColumns]);\n\n  useEffect(() => {\n    onRowsUpdate?.(tableRows);\n  }, [onRowsUpdate, tableRows]);\n\n  const resizeNestedColumns = (columns: ColumnInstance[], accessor: string, updatedWidth: number) => {\n    const columnIndex = _.findIndex(columns, { accessor });\n    if (columnIndex >= 0) {\n      const updatedColumn = { ...columns[columnIndex] };\n      updatedColumn.width = updatedWidth;\n      columns.splice(columnIndex, 1, updatedColumn);\n    } else {\n      _.forEach(columns, (column) => resizeNestedColumns(column.columns, accessor, updatedWidth));\n    }\n  };\n\n  const finishedResizing =\n    tableInstance.state.columnResizing.isResizingColumn === null &&\n    !_.isEmpty(tableInstance.state.columnResizing.columnWidths);\n  useEffect(() => {\n    setTableColumns((prevTableColumns) => {\n      _.forEach(tableInstance.state.columnResizing.columnWidths, (updatedColumnWidth, accessor) =>\n        resizeNestedColumns(prevTableColumns as ColumnInstance[], accessor, updatedColumnWidth)\n      );\n      return [...prevTableColumns];\n    });\n    // Need to consider a change only when resizing is finished (no other dependencies to consider for this useEffect)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finishedResizing]);\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th {...column.getHeaderProps()} className=\"fixed-column no-clickable-cell\" key={columnIndex}>\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    []\n  );\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => (\n      <Th\n        {...column.getHeaderProps()}\n        {...tableInstance.getThProps(column, columnIndex)}\n        className={`resizable-column ${!column.dataType ? \"no-clickable-cell\" : null}`}\n        key={columnIndex}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          <div>\n            <p className=\"pf-u-text-truncate\">{column.label}</p>\n            {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n          </div>\n          <div\n            className={`pf-c-drawer ${!column.canResize ? \"resizer-disabled\" : \"\"}`}\n            {...(column.canResize ? column.getResizerProps() : {})}\n          >\n            <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n              <div className=\"pf-c-drawer__splitter-handle\" />\n            </div>\n          </div>\n        </div>\n      </Th>\n    ),\n    [tableInstance]\n  );\n\n  const renderResizableColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.dataType ? (\n        <EditExpressionMenu\n          title={editColumnLabel}\n          selectedExpressionName={column.label}\n          selectedDataType={column.dataType}\n          onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n          key={columnIndex}\n        >\n          {renderResizableHeaderCell(column, columnIndex)}\n        </EditExpressionMenu>\n      ) : (\n        renderResizableHeaderCell(column, columnIndex)\n      ),\n    [editColumnLabel, onColumnNameOrDataTypeUpdate, renderResizableHeaderCell]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableColumn(column, columnIndex),\n    [renderCountColumn, renderResizableColumn]\n  );\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td\n              role=\"cell\"\n              key={childIndex}\n              className=\"row-remainder-content\"\n              style={{\n                width: tableInstance.allColumns[childIndex + 1].width,\n                minWidth: tableInstance.allColumns[childIndex + 1].minWidth,\n              }}\n            >\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children, tableInstance.allColumns]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      tableInstance.headerGroups.map((headerGroup: HeaderGroup) => (\n        <Tr key={headerGroup.accessor} {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n        </Tr>\n      )),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  const renderLastLevelInHeaderGroups = useMemo(\n    () => (\n      <Tr>\n        {_.last(\n          tableInstance.headerGroups as HeaderGroup[]\n        )!.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  return (\n    <div className={`table-component ${tableId}`}>\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <Thead noWrap>{isHeadless ? renderLastLevelInHeaderGroups : renderHeaderGroups}</Thead>\n\n        <Tbody {...tableInstance.getTableBodyProps()}>\n          {tableInstance.rows.map((row: Row, rowIndex: number) => {\n            tableInstance.prepareRow(row);\n            return (\n              <Tr className=\"table-row\" {...row.getRowProps()} key={rowIndex} ouiaId={\"expression-row-\" + rowIndex}>\n                {row.cells.map((cell: Cell, cellIndex: number) => (\n                  <Td\n                    {...(cellIndex === 0 ? {} : cell.getCellProps())}\n                    {...tableInstance.getTdProps(cellIndex, rowIndex)}\n                    key={cellIndex}\n                    data-ouia-component-id={\"expression-column-\" + cellIndex}\n                    className={cellIndex === 0 ? \"counter-cell\" : \"data-cell\"}\n                  >\n                    {cellIndex === 0 ? rowIndex + 1 : cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n          {children ? renderAdditiveRow : null}\n        </Tbody>\n      </TableComposable>\n      {showTableHandler ? buildTableHandler : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { DataType, RelationProps, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [tableColumns, setTableColumns] = useState(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const [tableRows, setTableRows] = useState(relationProps.rows === undefined ? [[]] : relationProps.rows);\n\n  useEffect(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns,\n      rows: tableRows,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps, tableColumns, tableRows]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns,\n        (column) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    [tableColumns]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) =>\n      setTableColumns(\n        _.map(columns, (columnInstance: ColumnInstance) => ({\n          name: columnInstance.accessor,\n          dataType: columnInstance.dataType,\n          width: columnInstance.width,\n        }))\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows, (row) =>\n        _.reduce(\n          tableColumns,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    [tableColumns, tableRows]\n  );\n\n  const onSavingRows = useCallback(\n    (rows) =>\n      setTableRows(\n        _.map(rows, (tableRow: DataRecord) =>\n          _.reduce(\n            tableColumns,\n            (row: string[], column) => {\n              row.push((tableRow[column.name]! as string) || \"\");\n              return row;\n            },\n            []\n          )\n        )\n      ),\n    [tableColumns]\n  );\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [entryExpression, setEntryExpression] = useState(expression);\n\n  const expressionChangedExternally = expression.logicType === undefined;\n  useEffect(() => {\n    setEntryExpression(_.omit(expression, \"isHeadless\"));\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onUpdatingRecursiveExpression(_.omit(entryExpression, \"isHeadless\"));\n  }, [onUpdatingRecursiveExpression, entryExpression]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        ...previousSelectedExpression,\n        logicType: logicType,\n      };\n      return _.omit(updatedExpression, \"isHeadless\");\n    });\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => ({\n      name: previousSelectedExpression.name,\n      dataType: previousSelectedExpression.dataType,\n      logicType: LogicType.Undefined,\n    }));\n  }, []);\n\n  return (\n    <div className=\"entry-expression\" ref={expressionContainerRef}>\n      <LogicTypeSelector\n        isHeadless={true}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        selectedExpression={entryExpression}\n        onLogicTypeUpdating={onLogicTypeUpdating}\n        onLogicTypeResetting={onLogicTypeResetting}\n        getPlacementRef={getLogicTypeSelectorRef}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { CellProps, ContextEntries, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryExpression, setEntryExpression] = useState(contextEntry.entryExpression);\n\n  const expressionChangedExternally = contextEntry.entryExpression.logicType === undefined;\n  useEffect(() => {\n    setEntryExpression(contextEntry.entryExpression);\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onRowUpdate(index, { ...contextEntry, entryExpression });\n    // Purpose is to update the row every time the expression wrapped in the entry changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entryExpression]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    setEntryExpression(expression);\n  }, []);\n\n  return (\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType } from \"../../api\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  return (\n    <div className=\"entry-info\">\n      <EditExpressionMenu\n        title={i18n.editContextEntry}\n        selectedExpressionName={entryName}\n        selectedDataType={entryDataType}\n        onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n      >\n        <div className=\"entry-definition\">\n          <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n            {entryName}\n          </p>\n          <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n            ({entryDataType})\n          </p>\n        </div>\n      </EditExpressionMenu>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryInfo, setEntryInfo] = useState(contextEntry.entryInfo);\n\n  useEffect(() => {\n    setEntryInfo(contextEntry.entryInfo);\n  }, [contextEntry.entryInfo]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      onRowUpdate(index, { ...contextEntry, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.name}\n        dataType={entryInfo.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useDragEvents(): {\n  setResizerElement: (element: HTMLDivElement) => void;\n  dragItHorizontally: (x: number) => void;\n} {\n  let resizerElement: HTMLDivElement;\n  let mouseDownEvent: MouseEvent;\n\n  const initMouseDownEvent = (element: HTMLDivElement) => {\n    mouseDownEvent = new MouseEvent(\"mousedown\", {\n      clientX: element.getBoundingClientRect().left,\n      clientY: element.getBoundingClientRect().top,\n      bubbles: true,\n      cancelable: true,\n    });\n  };\n\n  const moveHorizontallyBy = (x: number) => {\n    resizerElement.dispatchEvent(\n      new MouseEvent(\"mousemove\", {\n        clientX: resizerElement.getBoundingClientRect().left + x,\n        clientY: resizerElement.getBoundingClientRect().top,\n        bubbles: true,\n        cancelable: true,\n      })\n    );\n  };\n\n  const mouseUpEvent = new MouseEvent(\"mouseup\", {\n    bubbles: true,\n    cancelable: true,\n  });\n\n  const setResizerElement = (element: HTMLDivElement) => {\n    resizerElement = element;\n    initMouseDownEvent(resizerElement);\n  };\n\n  const dragItHorizontally = (x: number) => {\n    resizerElement.dispatchEvent(mouseDownEvent);\n    moveHorizontallyBy(x);\n    resizerElement.dispatchEvent(mouseUpEvent);\n  };\n\n  return {\n    setResizerElement,\n    dragItHorizontally,\n  };\n}\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextProps,\n  DataType,\n  ExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\nimport { useDragEvents } from \"../../hooks\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\nconst DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nconst DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  uid,\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  onUpdatingNameAndDataType,\n  contextEntries,\n  result = {} as ExpressionProps,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  const { setResizerElement, dragItHorizontally } = useDragEvents();\n\n  const handlerConfiguration: TableHandlerConfiguration = [\n    {\n      group: i18n.contextEntry,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n  const [expressionMinWidth, setExpressionMinWidth] = useState(DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH);\n\n  const [columns, setColumns] = useState([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          label: \"Name\",\n          accessor: \"entryInfo\",\n          disableHandlerOnHeader: true,\n          width: infoWidth,\n          minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n        },\n        {\n          label: \"Value\",\n          accessor: \"entryExpression\",\n          disableHandlerOnHeader: true,\n          width: expressionWidth,\n          minWidth: expressionMinWidth,\n        },\n      ],\n    },\n  ]);\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {},\n      } as DataRecord,\n    ]\n  );\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label, expressionColumn.dataType);\n      setExpressionWidth(_.find(expressionColumn.columns, { accessor: \"entryExpression\" })?.width as number);\n      setInfoWidth(_.find(expressionColumn.columns, { accessor: \"entryInfo\" })?.width as number);\n      setColumns(([prevExpressionColumn]) => [\n        {\n          ...prevExpressionColumn,\n          label: expressionColumn.label,\n          accessor: expressionColumn.accessor,\n          dataType: expressionColumn.dataType,\n        },\n      ]);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const generateNextAvailableEntryName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `ContextEntry-${lastIndex}`;\n      const entryWithCandidateName = _.find(rows, { entryInfo: { name: candidateName } });\n      return entryWithCandidateName ? generateNextAvailableEntryName(lastIndex + 1) : candidateName;\n    },\n    [rows]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(rows.length),\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {},\n    }),\n    [generateNextAvailableEntryName, rows.length]\n  );\n\n  const checkForOverflowingCell = useCallback(\n    () =>\n      Array.from(\n        document.querySelectorAll(\n          `.context-expression.${uid} > .table-component > table > tbody > tr > td:last-of-type`\n        )\n      ).reduce(\n        (acc, td: HTMLElement) => {\n          const { clientWidth, scrollWidth } = td;\n          return {\n            isOverflow: acc.isOverflow || scrollWidth > clientWidth,\n            contentWidth: Math.max(acc.contentWidth, scrollWidth - clientWidth),\n          };\n        },\n        { isOverflow: false, contentWidth: 0 }\n      ),\n    [uid]\n  );\n\n  const checkForSpareSpace = useCallback(() => {\n    const tableWidth = (document.querySelector(\n      `.context-expression.${uid} > .table-component > table`\n    ) as HTMLTableElement).getBoundingClientRect().width;\n    const tableHeaderWidth = (document.querySelector(\n      `.context-expression.${uid} > .table-component > table > thead`\n    ) as HTMLTableElement).getBoundingClientRect().width;\n    const spareSpace = tableWidth - tableHeaderWidth;\n    if (spareSpace > 0) {\n      return {\n        isSpareSpace: true,\n        spareSpace,\n      };\n    }\n    return {\n      isSpareSpace: false,\n      spareSpace: 0,\n    };\n  }, [uid]);\n\n  const updateValueColumnWidth = useCallback(\n    (width: number) => {\n      setResizerElement(\n        document.querySelector(\n          `.table-component.${uid} > table > thead > tr:last-of-type > th:last-of-type div.pf-c-drawer`\n        )! as HTMLDivElement\n      );\n      dragItHorizontally(width);\n      setExpressionWidth(width);\n      setExpressionMinWidth(width);\n    },\n    [dragItHorizontally, setResizerElement, uid]\n  );\n\n  const onSingleRowUpdate = useCallback(() => {\n    const { isOverflow, contentWidth } = checkForOverflowingCell();\n    const { isSpareSpace, spareSpace } = checkForSpareSpace();\n    if (isOverflow) {\n      const contentWidthPlusPadding = contentWidth + 7;\n      updateValueColumnWidth(contentWidthPlusPadding);\n    } else if (isSpareSpace) {\n      updateValueColumnWidth(spareSpace);\n    }\n  }, [checkForOverflowingCell, checkForSpareSpace, updateValueColumnWidth]);\n\n  useEffect(() => {\n    onSingleRowUpdate();\n  }, [onSingleRowUpdate]);\n\n  useEffect(() => {\n    const [expressionColumn] = columns;\n    const updatedDefinition: ContextProps = {\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      ...(infoWidth > DEFAULT_ENTRY_INFO_MIN_WIDTH ? { entryInfoWidth: infoWidth } : {}),\n      ...(expressionWidth > DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH ? { entryExpressionWidth: expressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]))\n      : window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n  }, [columns, isHeadless, onUpdatingRecursiveExpression, rows, resultExpression, infoWidth, expressionWidth]);\n\n  return (\n    <div className={`context-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerHasMultipleLevels={true}\n        isHeadless={isHeadless}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        onSingleRowUpdate={onSingleRowUpdate}\n        handlerConfiguration={handlerConfiguration}\n      >\n        <div className=\"context-result\">{`<result>`}</div>\n        <ContextEntryExpression expression={resultExpression} onUpdatingRecursiveExpression={setResultExpression} />\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ContextProps, DataType, ExpressionProps, LiteralExpressionProps, LogicType, RelationProps } from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, SimpleList, SimpleListItem, SimpleListItemProps } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\nimport nextId from \"react-id-generator\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const expression = _.extend(selectedExpression, {\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} uid={nextId()} />;\n      case LogicType.DecisionTable:\n      case LogicType.Function:\n      case LogicType.Invocation:\n      case LogicType.List:\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypesWithoutUndefined = useCallback(\n    () => Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () => _.map(getLogicTypesWithoutUndefined(), (key) => <SimpleListItem key={key}>{key}</SimpleListItem>),\n    [getLogicTypesWithoutUndefined]\n  );\n\n  const getLogicSelectionArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (currentItem: React.RefObject<HTMLButtonElement>, currentItemProps: SimpleListItemProps) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = currentItemProps.children as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getLogicSelectionArrowPlacement}\n        body={<SimpleList onSelect={onLogicTypeSelect}>{renderLogicTypeItems()}</SimpleList>}\n      />\n    ),\n    [i18n.selectLogicType, getLogicSelectionArrowPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <span className=\"expression-title\">{selectedExpression.name}</span>\n      <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n\n      <div className=\"expression-container-box\" ref={expressionContainerRef}>\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { RecoilRoot } from \"recoil\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => (\n  <RecoilRoot>\n    <I18nDictionariesProvider\n      defaults={boxedExpressionEditorI18nDefaults}\n      dictionaries={boxedExpressionEditorDictionaries}\n      initialLocale={navigator.language}\n      ctx={BoxedExpressionEditorI18nContext}\n    >\n      <ExpressionContainer {...props.expressionDefinition} />\n    </I18nDictionariesProvider>\n  </RecoilRoot>\n);\n\nexport { BoxedExpressionEditor };\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  choose: \"Choose...\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editRelation: \"Edit Relation\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  name: \"Name\",\n  relation: \"Relation\",\n  rowOperations: {\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression, relation and context logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./DataType\";\nexport * from \"./ExpressionProps\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n"],"sourceRoot":""}
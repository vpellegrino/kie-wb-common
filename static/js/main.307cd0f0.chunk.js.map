{"version":3,"sources":["boxed_expression_editor/index.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/Resizer/Resizer.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpressionCell.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfo.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfoCell.tsx","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/index.ts"],"names":["DataType","LogicType","TableOperation","PopoverMenu","children","arrowPlacement","body","title","appendTo","Popover","data-ouia-component-id","className","position","distance","id","reference","headerContent","bodyContent","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","selectedDataType","Undefined","selectedExpressionName","onExpressionUpdate","i18n","useBoxedExpressionEditorI18n","editExpression","name","dataType","useState","dataTypeSelectOpen","setDataTypeSelectOpen","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","useCallback","event","target","value","type","onDataTypeSelect","selection","getDataTypes","_","Object","values","key","SelectOption","onDataTypeFilter","e","input","RegExp","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","onChange","onBlur","placeholder","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","choose","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","Resizer","height","minHeight","minWidth","onHorizontalResizeStop","width","resizerHandler","useMemo","onResizeStop","data","size","minConstraints","axis","handle","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","setLiteralExpressionContent","literalExpressionWidth","setLiteralExpressionWidth","expressionDefinition","logicType","window","beeApi","broadcastLiteralExpressionDefinition","onContentChange","updatedContent","getEditExpressionMenuArrowPlacement","document","querySelector","renderElementWithResizeHandler","element","renderLiteralExpressionHeader","getBodyContent","TextArea","defaultValue","aria-label","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","map","groupOperation","MenuGroup","group","label","items","operation","MenuList","MenuItem","isDisabled","NO_TABLE_CONTEXT_MENU_CLASS","Table","columnPrefix","editColumnLabel","onColumnsUpdate","onRowsUpdate","onRowAdding","defaultCell","rows","columns","headerHasMultipleLevels","tableRef","useRef","accessor","disableResizing","isCountColumn","hideFilter","tableColumns","setTableColumns","tableRows","setTableRows","showTableHandler","setShowTableHandler","tableHandlerTarget","setTableHandlerTarget","parseInt","toString","tableHandlerAllowedOperations","setTableHandlerAllowedOperations","lastSelectedColumnIndex","setLastSelectedColumnIndex","lastSelectedRowIndex","setLastSelectedRowIndex","insertBefore","elements","index","slice","insertAfter","deleteAt","updateColumnNameInRows","prevColumnName","newColumnName","prevTableCells","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","prevTableColumns","updatedTableColumns","onCellUpdate","rowIndex","columnId","updatedTableCells","onRowUpdate","updatedRow","updatedRows","generateNextAvailableColumnName","lastIndex","candidateName","generateNextAvailableColumn","length","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowInsertAbove","prevTableRows","RowInsertBelow","RowDelete","defaultColumn","Cell","cellRef","column","initialValue","row","React","setValue","EditableCell","contextMenuIsAvailable","targetIsContainedInCurrentTable","closest","current","contextMenuAvailableForTarget","classList","contains","tableInstance","useTable","getThProps","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","preventDefault","getTdProps","useBlockLayout","useResizeColumns","buildTableHandler","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","resizeNestedColumns","updatedWidth","updatedColumn","splice","finishedResizing","state","columnResizing","isResizingColumn","columnWidths","updatedColumnWidth","renderCountColumn","Th","getHeaderProps","data-ouia-component-type","renderResizableHeaderCell","canResize","getResizerProps","renderResizableColumn","renderColumn","renderAdditiveRow","Tr","Td","role","childIndex","style","allColumns","renderHeaderGroups","headerGroups","headerGroup","getHeaderGroupProps","headers","renderLastLevelInHeaderGroups","TableComposable","getTableProps","ref","Thead","noWrap","Tbody","getTableBodyProps","prepareRow","getRowProps","cells","cell","cellIndex","getCellProps","render","RelationExpression","relationProps","columnOperations","insertLeft","insertRight","delete","rowOperations","insertAbove","insertBelow","undefined","broadcastRelationExpressionDefinition","convertColumnsForTheTable","onSavingColumns","columnInstance","convertRowsForTheTable","tableRow","onSavingRows","push","editRelation","ContextEntryExpression","expression","expressionContainerRef","entryExpression","setEntryExpression","expressionChangedExternally","getLogicTypeSelectorRef","onLogicTypeUpdating","previousSelectedExpression","updatedExpression","onLogicTypeResetting","selectedExpression","getPlacementRef","ContextEntryExpressionCell","contextEntry","ContextEntryInfo","onContextEntryUpdate","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","editContextEntry","ContextEntryInfoCell","entryInfo","setEntryInfo","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","ContextExpression","contextEntries","result","entryInfoWidth","entryExpressionWidth","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setExpressionWidth","setColumns","setRows","expressionColumn","updatedDefinition","Context","broadcastContextExpressionDefinition","prevExpressionColumn","generateNextAvailableEntryName","LogicTypeSelector","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","addEventListener","removeEventListener","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","DecisionTable","Function","Invocation","List","getLogicTypesWithoutUndefined","renderLogicTypeItems","SimpleListItem","getLogicSelectionArrowPlacement","onLogicTypeSelect","currentItem","currentItemProps","selectedLogicType","buildLogicSelectorMenu","selectLogicType","SimpleList","executeClearAction","buildContextMenu","top","left","Button","isSmall","ButtonVariant","primary","onClick","clear","selectExpression","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","resetExpressionDefinition","BoxedExpressionEditor","defaults","boxedExpressionEditorI18nDefaults","dictionaries","boxedExpressionEditorDictionaries","initialLocale","navigator","language","ctx","BoxedExpressionEditorI18nContext","en","en_common","context","decisionTable","function","invocation","list","literalExpression","relation","locale","dictionary","Map","useContext","App","setUpdatedExpression","definition","JSON","stringify","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.307cd0f0.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./components\";\nexport * from \"./api\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className=\"popover-menu-selector\"\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      setDataType(selection);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: selection,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <Select\n              ouiaId=\"edit-expression-data-type\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={i18n.choose}\n              onToggle={onDataTypeSelectToggle}\n              onSelect={onDataTypeSelect}\n              onFilter={onDataTypeFilter}\n              isOpen={dataTypeSelectOpen}\n              selections={dataType}\n              hasInlineFilter\n              inlineFilterPlaceholderText={i18n.choose}\n            >\n              {getDataTypes()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\n\nexport interface ResizerProps {\n  width: number;\n  height: number;\n  minWidth: number;\n  minHeight: number;\n  onHorizontalResizeStop: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height,\n  minHeight,\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  const resizerHandler = useMemo(\n    () => (\n      <div className=\"pf-c-drawer\">\n        <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n          <div className=\"pf-c-drawer__splitter-handle\" />\n        </div>\n      </div>\n    ),\n    []\n  );\n\n  const onResizeStop = useCallback((e, data) => onHorizontalResizeStop(data.size.width), [onHorizontalResizeStop]);\n\n  return (\n    <ResizableBox\n      width={width}\n      height={height}\n      minConstraints={[minWidth, minHeight]}\n      axis=\"x\"\n      onResizeStop={onResizeStop}\n      handle={resizerHandler}\n    >\n      {children}\n    </ResizableBox>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  content,\n  dataType,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n  const HEADER_HEIGHT = 40;\n\n  const [expressionName, setExpressionName] = useState(name);\n  const [expressionDataType, setExpressionDataType] = useState(dataType);\n  const [literalExpressionContent, setLiteralExpressionContent] = useState(content);\n  const [literalExpressionWidth, setLiteralExpressionWidth] = useState(width || HEADER_WIDTH);\n\n  useEffect(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent,\n      ...(!isHeadless && literalExpressionWidth !== HEADER_WIDTH ? { width: literalExpressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [\n    expressionName,\n    expressionDataType,\n    literalExpressionContent,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    literalExpressionWidth,\n  ]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      onUpdatingNameAndDataType?.(name, dataType);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onContentChange = useCallback((event) => {\n    const updatedContent = event.target.value;\n    setLiteralExpressionContent(updatedContent);\n  }, []);\n\n  const getEditExpressionMenuArrowPlacement = useCallback(\n    () => document.querySelector(\".literal-expression-header\")! as HTMLElement,\n    []\n  );\n\n  const onHorizontalResizeStop = useCallback((width) => setLiteralExpressionWidth(width), []);\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth}\n        height={HEADER_HEIGHT}\n        minWidth={HEADER_WIDTH}\n        minHeight={HEADER_HEIGHT}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [literalExpressionWidth, onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <div className=\"expression-info\">\n            <p className=\"expression-name pf-u-text-truncate\">{expressionName}</p>\n            <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType})</p>\n          </div>\n        )}\n      </div>\n    );\n  }, [expressionDataType, expressionName, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <TextArea\n        defaultValue={literalExpressionContent}\n        onBlur={onContentChange}\n        aria-label=\"literal-expression-content\"\n      />\n    ),\n    [literalExpressionContent, onContentChange]\n  );\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n      <EditExpressionMenu\n        arrowPlacement={getEditExpressionMenuArrowPlacement}\n        selectedExpressionName={expressionName}\n        selectedDataType={expressionDataType}\n        onExpressionUpdate={onExpressionUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Cell,\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  HeaderGroup,\n  Row,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { CellProps, DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\n\nexport interface TableProps {\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** The prefix to be used for the column name */\n  columnPrefix?: string;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: Column[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n  /** Function to be executed when cells are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** True to have no header for this table */\n  isHeadless?: boolean;\n  /** True to support multiple levels in the header */\n  headerHasMultipleLevels?: boolean;\n}\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  children,\n  columnPrefix = \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onRowAdding = () => ({}),\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  isHeadless = false,\n  headerHasMultipleLevels = false,\n}: TableProps) => {\n  const NUMBER_OF_ROWS_COLUMN = \"#\";\n  const NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const [tableColumns, setTableColumns] = useState([\n    {\n      label: NUMBER_OF_ROWS_COLUMN,\n      accessor: NUMBER_OF_ROWS_COLUMN,\n      width: 60,\n      disableResizing: true,\n      isCountColumn: true,\n      hideFilter: true,\n      ...(headerHasMultipleLevels\n        ? {\n            columns: [\n              {\n                label: NUMBER_OF_ROWS_SUBCOLUMN,\n                accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n                width: 60,\n                disableResizing: true,\n                isCountColumn: true,\n                hideFilter: true,\n              },\n            ],\n          }\n        : {}),\n    },\n    ...columns,\n  ]);\n  const [tableRows, setTableRows] = useState(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      setTableRows((prevTableCells) => {\n        return _.map(prevTableCells, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        });\n      }),\n    []\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns[columnIndex] as ColumnInstance).accessor as string;\n        setTableColumns((prevTableColumns: ColumnInstance[]) => {\n          const updatedTableColumns = [...prevTableColumns];\n          updatedTableColumns[columnIndex].label = name;\n          updatedTableColumns[columnIndex].accessor = name;\n          updatedTableColumns[columnIndex].dataType = dataType;\n          return updatedTableColumns;\n        });\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [tableColumns, updateColumnNameInRows]\n  );\n\n  const onCellUpdate = useCallback((rowIndex: number, columnId: string, value: string) => {\n    setTableRows((prevTableCells) => {\n      const updatedTableCells = [...prevTableCells];\n      updatedTableCells[rowIndex][columnId] = value;\n      return updatedTableCells;\n    });\n  }, []);\n\n  const onRowUpdate = useCallback((rowIndex: number, updatedRow: DataRecord) => {\n    setTableRows((prevTableCells) => {\n      const updatedRows = [...prevTableCells];\n      updatedRows[rowIndex] = updatedRow;\n      return updatedRows;\n    });\n  }, []);\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      };\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          setTableColumns((prevTableColumns) =>\n            insertBefore(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          setTableColumns((prevTableColumns) =>\n            insertAfter(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          setTableColumns((prevTableColumns) => deleteAt(prevTableColumns, lastSelectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          setTableRows((prevTableRows) => insertBefore(prevTableRows, lastSelectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          setTableRows((prevTableRows) => insertAfter(prevTableRows, lastSelectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          setTableRows((prevTableRows) => deleteAt(prevTableRows, lastSelectedRowIndex));\n          break;\n      }\n      setShowTableHandler(false);\n    },\n    [generateNextAvailableColumn, lastSelectedColumnIndex, lastSelectedRowIndex, onRowAdding]\n  );\n\n  const defaultColumn = {\n    minWidth: 38,\n    width: 150,\n    Cell: useCallback(\n      (cellRef) => {\n        const column = cellRef.column as ColumnInstance;\n        if (column.isCountColumn) {\n          return cellRef.value;\n        } else {\n          return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n        }\n      },\n      [defaultCell]\n    ),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const getThProps = (column: ColumnInstance, columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n        ]);\n        setTableHandlerTarget(target);\n        setShowTableHandler(true);\n        setLastSelectedColumnIndex(columnIndex);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.length > 1 ? [TableOperation.RowDelete] : []),\n        ]);\n        setTableHandlerTarget(target);\n        setShowTableHandler(true);\n        setLastSelectedColumnIndex(columnIndex);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns,\n      data: tableRows,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  const buildTableHandler = useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [showTableHandler, handlerConfiguration, tableHandlerAllowedOperations, handlingOperation, tableHandlerTarget]\n  );\n\n  useEffect(() => {\n    onColumnsUpdate(tableColumns.slice(1)); //Removing \"# of rows\" column\n  }, [onColumnsUpdate, tableColumns]);\n\n  useEffect(() => {\n    onRowsUpdate(tableRows);\n  }, [onRowsUpdate, tableRows]);\n\n  const resizeNestedColumns = (columns: ColumnInstance[], accessor: string, updatedWidth: number) => {\n    const columnIndex = _.findIndex(columns, { accessor });\n    if (columnIndex >= 0) {\n      const updatedColumn = { ...columns[columnIndex] };\n      updatedColumn.width = updatedWidth;\n      columns.splice(columnIndex, 1, updatedColumn);\n    } else {\n      _.forEach(columns, (column) => resizeNestedColumns(column.columns, accessor, updatedWidth));\n    }\n  };\n\n  const finishedResizing =\n    tableInstance.state.columnResizing.isResizingColumn === null &&\n    !_.isEmpty(tableInstance.state.columnResizing.columnWidths);\n  useEffect(() => {\n    setTableColumns((prevTableColumns) => {\n      _.forEach(tableInstance.state.columnResizing.columnWidths, (updatedColumnWidth, accessor) =>\n        resizeNestedColumns(prevTableColumns as ColumnInstance[], accessor, updatedColumnWidth)\n      );\n      return [...prevTableColumns];\n    });\n    // Need to consider a change only when resizing is finished (no other dependencies to consider for this useEffect)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finishedResizing]);\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th {...column.getHeaderProps()} className=\"fixed-column no-clickable-cell\" key={columnIndex}>\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    []\n  );\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => (\n      <Th\n        {...column.getHeaderProps()}\n        {...tableInstance.getThProps(column, columnIndex)}\n        className={`resizable-column ${!column.dataType ? \"no-clickable-cell\" : null}`}\n        key={columnIndex}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          <div>\n            <p className=\"pf-u-text-truncate\">{column.label}</p>\n            {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n          </div>\n          <div\n            className={`pf-c-drawer ${!column.canResize ? \"resizer-disabled\" : \"\"}`}\n            {...(column.canResize ? column.getResizerProps() : {})}\n          >\n            <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n              <div className=\"pf-c-drawer__splitter-handle\" />\n            </div>\n          </div>\n        </div>\n      </Th>\n    ),\n    [tableInstance]\n  );\n\n  const renderResizableColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.dataType ? (\n        <EditExpressionMenu\n          title={editColumnLabel}\n          selectedExpressionName={column.label}\n          selectedDataType={column.dataType}\n          onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n          key={columnIndex}\n        >\n          {renderResizableHeaderCell(column, columnIndex)}\n        </EditExpressionMenu>\n      ) : (\n        renderResizableHeaderCell(column, columnIndex)\n      ),\n    [editColumnLabel, onColumnNameOrDataTypeUpdate, renderResizableHeaderCell]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableColumn(column, columnIndex),\n    [renderCountColumn, renderResizableColumn]\n  );\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td\n              role=\"cell\"\n              key={childIndex}\n              className=\"row-remainder-content\"\n              style={{\n                width: tableInstance.allColumns[childIndex + 1].width,\n                minWidth: tableInstance.allColumns[childIndex + 1].minWidth,\n              }}\n            >\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children, tableInstance.allColumns]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      tableInstance.headerGroups.map((headerGroup: HeaderGroup) => (\n        <Tr key={headerGroup.accessor} {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n        </Tr>\n      )),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  const renderLastLevelInHeaderGroups = useMemo(\n    () => (\n      <Tr>\n        {_.last(\n          tableInstance.headerGroups as HeaderGroup[]\n        )!.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  return (\n    <div className=\"table-component\">\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <Thead noWrap>{isHeadless ? renderLastLevelInHeaderGroups : renderHeaderGroups}</Thead>\n\n        <Tbody {...tableInstance.getTableBodyProps()}>\n          {tableInstance.rows.map((row: Row, rowIndex: number) => {\n            tableInstance.prepareRow(row);\n            return (\n              <Tr className=\"table-row\" {...row.getRowProps()} key={rowIndex} ouiaId={\"expression-row-\" + rowIndex}>\n                {row.cells.map((cell: Cell, cellIndex: number) => (\n                  <Td\n                    {...(cellIndex === 0 ? {} : cell.getCellProps())}\n                    {...tableInstance.getTdProps(cellIndex, rowIndex)}\n                    key={cellIndex}\n                    data-ouia-component-id={\"expression-column-\" + cellIndex}\n                    className={cellIndex === 0 ? \"counter-cell\" : \"data-cell\"}\n                  >\n                    {cellIndex === 0 ? rowIndex + 1 : cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n          {children ? renderAdditiveRow : null}\n        </Tbody>\n      </TableComposable>\n      {showTableHandler ? buildTableHandler : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { DataType, RelationProps, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [tableColumns, setTableColumns] = useState(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const [tableRows, setTableRows] = useState(relationProps.rows === undefined ? [[]] : relationProps.rows);\n\n  useEffect(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns,\n      rows: tableRows,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps, tableColumns, tableRows]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns,\n        (column) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    [tableColumns]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) =>\n      setTableColumns(\n        _.map(columns, (columnInstance: ColumnInstance) => ({\n          name: columnInstance.accessor,\n          dataType: columnInstance.dataType,\n          width: columnInstance.width,\n        }))\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows, (row) =>\n        _.reduce(\n          tableColumns,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    [tableColumns, tableRows]\n  );\n\n  const onSavingRows = useCallback(\n    (rows) =>\n      setTableRows(\n        _.map(rows, (tableRow: DataRecord) =>\n          _.reduce(\n            tableColumns,\n            (row: string[], column) => {\n              row.push((tableRow[column.name]! as string) || \"\");\n              return row;\n            },\n            []\n          )\n        )\n      ),\n    [tableColumns]\n  );\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [entryExpression, setEntryExpression] = useState(expression);\n\n  const expressionChangedExternally = expression.logicType === undefined;\n  useEffect(() => {\n    setEntryExpression(_.omit(expression, \"isHeadless\"));\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onUpdatingRecursiveExpression(_.omit(entryExpression, \"isHeadless\"));\n  }, [onUpdatingRecursiveExpression, entryExpression]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        ...previousSelectedExpression,\n        logicType: logicType,\n      };\n      return _.omit(updatedExpression, \"isHeadless\");\n    });\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => ({\n      name: previousSelectedExpression.name,\n      dataType: previousSelectedExpression.dataType,\n      logicType: LogicType.Undefined,\n    }));\n  }, []);\n\n  return (\n    <div className=\"entry-expression\" ref={expressionContainerRef}>\n      <LogicTypeSelector\n        isHeadless={true}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        selectedExpression={entryExpression}\n        onLogicTypeUpdating={onLogicTypeUpdating}\n        onLogicTypeResetting={onLogicTypeResetting}\n        getPlacementRef={getLogicTypeSelectorRef}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { CellProps, ContextEntries, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryExpression, setEntryExpression] = useState(contextEntry.entryExpression);\n\n  const expressionChangedExternally = contextEntry.entryExpression.logicType === undefined;\n  useEffect(() => {\n    setEntryExpression(contextEntry.entryExpression);\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onRowUpdate(index, { ...contextEntry, entryExpression });\n    // Purpose is to update the row every time the expression wrapped in the entry changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entryExpression]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    setEntryExpression(expression);\n  }, []);\n\n  return (\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType } from \"../../api\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  return (\n    <div className=\"entry-info\">\n      <EditExpressionMenu\n        title={i18n.editContextEntry}\n        selectedExpressionName={entryName}\n        selectedDataType={entryDataType}\n        onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n      >\n        <div className=\"entry-definition\">\n          <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n            {entryName}\n          </p>\n          <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n            ({entryDataType})\n          </p>\n        </div>\n      </EditExpressionMenu>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryInfo, setEntryInfo] = useState(contextEntry.entryInfo);\n\n  useEffect(() => {\n    setEntryInfo(contextEntry.entryInfo);\n  }, [contextEntry.entryInfo]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      onRowUpdate(index, { ...contextEntry, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.name}\n        dataType={entryInfo.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextProps,\n  DataType,\n  ExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\nconst DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nconst DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  onUpdatingNameAndDataType,\n  contextEntries,\n  result = {} as ExpressionProps,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = [\n    {\n      group: i18n.contextEntry,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n\n  const [columns, setColumns] = useState([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          label: \"Name\",\n          accessor: \"entryInfo\",\n          disableHandlerOnHeader: true,\n          width: infoWidth,\n          minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n        },\n        {\n          label: \"Value\",\n          accessor: \"entryExpression\",\n          disableHandlerOnHeader: true,\n          width: expressionWidth,\n          minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n        },\n      ],\n    },\n  ]);\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {},\n      } as DataRecord,\n    ]\n  );\n\n  useEffect(() => {\n    const [expressionColumn] = columns;\n    const updatedDefinition: ContextProps = {\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      ...(infoWidth > DEFAULT_ENTRY_INFO_MIN_WIDTH ? { entryInfoWidth: infoWidth } : {}),\n      ...(expressionWidth > DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH ? { entryExpressionWidth: expressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]))\n      : window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n  }, [columns, isHeadless, onUpdatingRecursiveExpression, rows, resultExpression, infoWidth, expressionWidth]);\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label, expressionColumn.dataType);\n      setExpressionWidth(_.find(expressionColumn.columns, { accessor: \"entryExpression\" })?.width as number);\n      setInfoWidth(_.find(expressionColumn.columns, { accessor: \"entryInfo\" })?.width as number);\n      setColumns(([prevExpressionColumn]) => [\n        {\n          ...prevExpressionColumn,\n          label: expressionColumn.label,\n          accessor: expressionColumn.accessor,\n          dataType: expressionColumn.dataType,\n        },\n      ]);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const generateNextAvailableEntryName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `ContextEntry-${lastIndex}`;\n      const entryWithCandidateName = _.find(rows, { entryInfo: { name: candidateName } });\n      return entryWithCandidateName ? generateNextAvailableEntryName(lastIndex + 1) : candidateName;\n    },\n    [rows]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(rows.length),\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {},\n    }),\n    [generateNextAvailableEntryName, rows.length]\n  );\n\n  return (\n    <div className=\"context-expression\">\n      <Table\n        headerHasMultipleLevels={true}\n        isHeadless={isHeadless}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={handlerConfiguration}\n      >\n        <div className=\"context-result\">{`<result>`}</div>\n        <ContextEntryExpression expression={resultExpression} onUpdatingRecursiveExpression={setResultExpression} />\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ContextProps, DataType, ExpressionProps, LiteralExpressionProps, LogicType, RelationProps } from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, SimpleList, SimpleListItem, SimpleListItemProps } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const expression = _.extend(selectedExpression, {\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} />;\n      case LogicType.DecisionTable:\n      case LogicType.Function:\n      case LogicType.Invocation:\n      case LogicType.List:\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypesWithoutUndefined = useCallback(\n    () => Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () => _.map(getLogicTypesWithoutUndefined(), (key) => <SimpleListItem key={key}>{key}</SimpleListItem>),\n    [getLogicTypesWithoutUndefined]\n  );\n\n  const getLogicSelectionArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (currentItem: React.RefObject<HTMLButtonElement>, currentItemProps: SimpleListItemProps) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = currentItemProps.children as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getLogicSelectionArrowPlacement}\n        body={<SimpleList onSelect={onLogicTypeSelect}>{renderLogicTypeItems()}</SimpleList>}\n      />\n    ),\n    [i18n.selectLogicType, getLogicSelectionArrowPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <span className=\"expression-title\">{selectedExpression.name}</span>\n      <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n\n      <div className=\"expression-container-box\" ref={expressionContainerRef}>\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { RecoilRoot } from \"recoil\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => (\n  <RecoilRoot>\n    <I18nDictionariesProvider\n      defaults={boxedExpressionEditorI18nDefaults}\n      dictionaries={boxedExpressionEditorDictionaries}\n      initialLocale={navigator.language}\n      ctx={BoxedExpressionEditorI18nContext}\n    >\n      <ExpressionContainer {...props.expressionDefinition} />\n    </I18nDictionariesProvider>\n  </RecoilRoot>\n);\n\nexport { BoxedExpressionEditor };\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  choose: \"Choose...\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editRelation: \"Edit Relation\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  name: \"Name\",\n  relation: \"Relation\",\n  rowOperations: {\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression, relation and context logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./DataType\";\nexport * from \"./ExpressionProps\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n"],"sourceRoot":""}
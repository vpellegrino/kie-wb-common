{"version":3,"sources":["boxed_expression_editor/index.tsx","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/index.ts","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/Resizer/Resizer.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/TableHeader.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/TableHandler.tsx","boxed_expression_editor/context/BoxedExpressionGlobalContext.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpressionCell.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfo.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfoCell.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx"],"names":["window","renderBoxedExpressionEditor","selector","definition","ReactDOM","expressionDefinition","selectedExpression","document","getElementById","DataType","LogicType","TableOperation","en","en_common","choose","clear","columnOperations","delete","insertLeft","insertRight","columns","context","contextEntry","dataType","decisionTable","editContextEntry","editExpression","editRelation","function","invocation","list","literalExpression","name","relation","rowOperations","insertAbove","insertBelow","rows","selectExpression","selectLogicType","boxedExpressionEditorI18nDefaults","locale","dictionary","boxedExpressionEditorDictionaries","Map","BoxedExpressionEditorI18nContext","React","useBoxedExpressionEditorI18n","useContext","App","Undefined","useState","updatedExpression","setUpdatedExpression","beeApi","resetExpressionDefinition","broadcastLiteralExpressionDefinition","broadcastRelationExpressionDefinition","broadcastContextExpressionDefinition","className","JSON","stringify","PopoverMenu","children","arrowPlacement","body","title","appendTo","hasAutoWidth","Popover","data-ouia-component-id","position","distance","id","reference","headerContent","bodyContent","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","selectedDataType","selectedExpressionName","onExpressionUpdate","i18n","dataTypeSelectOpen","setDataTypeSelectOpen","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","useCallback","event","target","value","type","onDataTypeSelect","selection","getDataTypes","_","Object","values","key","SelectOption","onDataTypeFilter","e","input","RegExp","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","onChange","onBlur","placeholder","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","Resizer","height","minHeight","minWidth","onHorizontalResizeStop","width","resizerHandler","useMemo","onResizeStop","data","size","minConstraints","axis","handle","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","setLiteralExpressionContent","literalExpressionWidth","setLiteralExpressionWidth","logicType","onContentChange","updatedContent","renderElementWithResizeHandler","element","renderLiteralExpressionHeader","getBodyContent","TextArea","defaultValue","aria-label","TableHeader","tableInstance","tableColumns","setTableColumns","setTableRows","editColumnLabel","getColumnKey","updateColumnNameInRows","prevColumnName","newColumnName","prevTableCells","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","accessor","prevTableColumns","updatedTableColumns","label","renderCountColumn","column","Th","getHeaderProps","data-ouia-component-type","renderHeaderCellInfo","renderResizableHeaderCell","getThProps","canResize","getResizerProps","renderColumn","isCountColumn","renderHeaderGroups","headerGroups","map","headerGroup","Tr","getHeaderGroupProps","headers","renderLastLevelInHeaderGroups","Thead","noWrap","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","groupOperation","MenuGroup","group","items","operation","MenuList","MenuItem","isDisabled","TableHandler","columnPrefix","lastSelectedColumnIndex","lastSelectedRowIndex","onRowAdding","showTableHandler","setShowTableHandler","tableHandlerTarget","tableHandlerAllowedOperations","selectedColumnIndex","setSelectedColumnIndex","selectedRowIndex","setSelectedRowIndex","insertBefore","elements","index","slice","insertAfter","deleteAt","generateNextAvailableColumnName","lastIndex","candidateName","generateNextAvailableColumn","length","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowInsertAbove","prevTableRows","RowInsertBelow","RowDelete","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","BoxedExpressionGlobalContext","NO_TABLE_CONTEXT_MENU_CLASS","Table","tableId","onColumnsUpdate","onRowsUpdate","onSingleRowUpdate","defaultCell","headerHasMultipleLevels","getRowKey","row","tableRef","useRef","globalContext","disableResizing","hideFilter","tableRows","setTableHandlerTarget","parseInt","toString","setTableHandlerAllowedOperations","setLastSelectedColumnIndex","setLastSelectedRowIndex","onCellUpdate","rowIndex","columnId","updatedTableCells","onRowUpdate","updatedRow","updatedRows","defaultColumn","Cell","cellRef","initialValue","setValue","EditableCell","contextMenuIsAvailable","targetIsContainedInCurrentTable","closest","current","contextMenuAvailableForTarget","classList","contains","tableHandlerStateUpdate","currentlyOpenedHandlerCallback","setCurrentlyOpenedHandlerCallback","useTable","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","preventDefault","getTdProps","useBlockLayout","useResizeColumns","resizeNestedColumns","updatedWidth","updatedColumn","splice","finishedResizing","state","columnResizing","isResizingColumn","columnWidths","updatedColumnWidth","renderAdditiveRow","Td","role","childIndex","style","allColumns","TableComposable","getTableProps","ref","Tbody","getTableBodyProps","prepareRow","getRowProps","cells","cell","cellIndex","getCellProps","render","RelationExpression","relationProps","undefined","convertColumnsForTheTable","onSavingColumns","columnInstance","convertRowsForTheTable","tableRow","onSavingRows","push","ContextEntryExpression","expression","onExpressionResetting","expressionContainerRef","entryExpression","setEntryExpression","expressionChangedExternally","getLogicTypeSelectorRef","onLogicTypeUpdating","previousSelectedExpression","onLogicTypeResetting","getPlacementRef","ContextEntryExpressionCell","ContextEntryInfo","onContextEntryUpdate","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","ContextEntryInfoCell","entryInfo","setEntryInfo","useDragEvents","resizerElement","mouseDownEvent","mouseUpEvent","MouseEvent","bubbles","cancelable","setResizerElement","clientX","getBoundingClientRect","left","clientY","top","initMouseDownEvent","dragItHorizontally","x","dispatchEvent","moveHorizontallyBy","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH","ContextExpression","uid","contextEntries","result","entryInfoWidth","entryExpressionWidth","setExpressionWidth","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setColumns","setRows","expressionColumn","prevExpressionColumn","generateNextAvailableEntryName","checkForOverflowingCell","Array","from","querySelectorAll","reduce","acc","td","clientWidth","scrollWidth","isOverflow","contentWidth","Math","max","checkForSpareSpace","spareSpace","querySelector","isSpareSpace","updateValueColumnWidth","shiftWidth","contextTableGetRowKey","original","updatedDefinition","Context","LogicTypeSelector","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","addEventListener","removeEventListener","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","nextId","DecisionTable","Function","Invocation","List","getLogicTypesWithoutUndefined","renderLogicTypeItems","getLogicSelectionArrowPlacement","onLogicTypeSelect","buildLogicSelectorMenu","executeClearAction","buildContextMenu","Button","isSmall","ButtonVariant","primary","onClick","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","BoxedExpressionEditor","defaults","dictionaries","initialLocale","navigator","language","ctx","Provider"],"mappings":"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","file":"static/js/main.d2800b24.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditor } from \"./components\";\nimport * as React from \"react\";\nimport { ExpressionProps } from \"./api\";\nimport * as ReactDOM from \"react-dom\";\n\nexport * from \"./components\";\nexport * from \"./api\";\n\nwindow.renderBoxedExpressionEditor = (selector: string, definition: ExpressionProps) => {\n  ReactDOM.render(\n    <BoxedExpressionEditor expressionDefinition={{ selectedExpression: definition }} />,\n    document.getElementById(selector)\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  choose: \"Choose...\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editRelation: \"Edit Relation\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  name: \"Name\",\n  relation: \"Relation\",\n  rowOperations: {\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression, relation and context logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./DataType\";\nexport * from \"./ExpressionProps\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** Additional classname to be used for the popover */\n  className?: string;\n  /** True to have width automatically computed */\n  hasAutoWidth?: boolean;\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n  className,\n  hasAutoWidth,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className={`popover-menu-selector${className ? \" \" + className : \"\"}`}\n      hasAutoWidth={hasAutoWidth}\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      setDataType(selection);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: selection,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <Select\n              ouiaId=\"edit-expression-data-type\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={i18n.choose}\n              onToggle={onDataTypeSelectToggle}\n              onSelect={onDataTypeSelect}\n              onFilter={onDataTypeFilter}\n              isOpen={dataTypeSelectOpen}\n              selections={dataType}\n              hasInlineFilter\n              inlineFilterPlaceholderText={i18n.choose}\n            >\n              {getDataTypes()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\n\nexport interface ResizerProps {\n  width: number;\n  height: number;\n  minWidth: number;\n  minHeight: number;\n  onHorizontalResizeStop: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height,\n  minHeight,\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  const resizerHandler = useMemo(\n    () => (\n      <div className=\"pf-c-drawer\">\n        <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n          <div className=\"pf-c-drawer__splitter-handle\" />\n        </div>\n      </div>\n    ),\n    []\n  );\n\n  const onResizeStop = useCallback((e, data) => onHorizontalResizeStop(data.size.width), [onHorizontalResizeStop]);\n\n  return (\n    <ResizableBox\n      width={width}\n      height={height}\n      minConstraints={[minWidth, minHeight]}\n      axis=\"x\"\n      onResizeStop={onResizeStop}\n      handle={resizerHandler}\n    >\n      {children}\n    </ResizableBox>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  content,\n  dataType,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n  const HEADER_HEIGHT = 40;\n\n  const [expressionName, setExpressionName] = useState(name);\n  const [expressionDataType, setExpressionDataType] = useState(dataType);\n  const [literalExpressionContent, setLiteralExpressionContent] = useState(content);\n  const [literalExpressionWidth, setLiteralExpressionWidth] = useState(width || HEADER_WIDTH);\n\n  useEffect(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent,\n      ...(!isHeadless && literalExpressionWidth !== HEADER_WIDTH ? { width: literalExpressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [\n    expressionName,\n    expressionDataType,\n    literalExpressionContent,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    literalExpressionWidth,\n  ]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      onUpdatingNameAndDataType?.(name, dataType);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onContentChange = useCallback((event) => {\n    const updatedContent = event.target.value;\n    setLiteralExpressionContent(updatedContent);\n  }, []);\n\n  const onHorizontalResizeStop = useCallback((width) => setLiteralExpressionWidth(width), []);\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth}\n        height={HEADER_HEIGHT}\n        minWidth={HEADER_WIDTH}\n        minHeight={HEADER_HEIGHT}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [literalExpressionWidth, onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <EditExpressionMenu\n            selectedExpressionName={expressionName}\n            selectedDataType={expressionDataType}\n            onExpressionUpdate={onExpressionUpdate}\n          >\n            <div className=\"expression-info\">\n              <p className=\"expression-name pf-u-text-truncate\">{expressionName}</p>\n              <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType})</p>\n            </div>\n          </EditExpressionMenu>\n        )}\n      </div>\n    );\n  }, [expressionDataType, expressionName, onExpressionUpdate, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <TextArea\n        defaultValue={literalExpressionContent}\n        onBlur={onContentChange}\n        aria-label=\"literal-expression-content\"\n      />\n    ),\n    [literalExpressionContent, onContentChange]\n  );\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord, HeaderGroup, TableInstance } from \"react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType } from \"../../api\";\n\nexport interface TableHeaderProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** Columns instance */\n  tableColumns: ColumnInstance[];\n  /** Function for setting table columns */\n  setTableColumns: React.Dispatch<React.SetStateAction<ColumnInstance[]>>;\n  /** Function for setting table rows */\n  setTableRows: React.Dispatch<React.SetStateAction<DataRecord[]>>;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** True to have only last level of header shown */\n  isHeadless?: boolean;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n}\n\nexport const TableHeader: React.FunctionComponent<TableHeaderProps> = ({\n  tableInstance,\n  tableColumns,\n  setTableColumns,\n  setTableRows,\n  editColumnLabel,\n  isHeadless = false,\n  getColumnKey,\n}) => {\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      setTableRows((prevTableCells) => {\n        return _.map(prevTableCells, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        });\n      }),\n    [setTableRows]\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns[columnIndex] as ColumnInstance).accessor as string;\n        setTableColumns((prevTableColumns: ColumnInstance[]) => {\n          const updatedTableColumns = [...prevTableColumns];\n          updatedTableColumns[columnIndex].label = name;\n          updatedTableColumns[columnIndex].accessor = name;\n          updatedTableColumns[columnIndex].dataType = dataType;\n          return updatedTableColumns;\n        });\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [setTableColumns, tableColumns, updateColumnNameInRows]\n  );\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th\n        {...column.getHeaderProps()}\n        className=\"fixed-column no-clickable-cell\"\n        key={`${getColumnKey(column)}-${columnIndex}`}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    [getColumnKey]\n  );\n\n  const renderHeaderCellInfo = useCallback(\n    (column) => (\n      <div className=\"header-cell-info\" data-ouia-component-type=\"expression-column-header-cell-info\">\n        <p className=\"pf-u-text-truncate\">{column.label}</p>\n        {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n      </div>\n    ),\n    []\n  );\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => (\n      <Th\n        {...column.getHeaderProps()}\n        {...tableInstance.getThProps(column, columnIndex)}\n        className={`resizable-column ${!column.dataType ? \"no-clickable-cell\" : null}`}\n        key={`${getColumnKey(column)}-${columnIndex}`}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.dataType ? (\n            <EditExpressionMenu\n              title={editColumnLabel}\n              selectedExpressionName={column.label}\n              selectedDataType={column.dataType}\n              onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n              key={`${getColumnKey(column)}-${columnIndex}`}\n            >\n              {renderHeaderCellInfo(column)}\n            </EditExpressionMenu>\n          ) : (\n            renderHeaderCellInfo(column)\n          )}\n          <div\n            className={`pf-c-drawer ${!column.canResize ? \"resizer-disabled\" : \"\"}`}\n            {...(column.canResize ? column.getResizerProps() : {})}\n          >\n            <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n              <div className=\"pf-c-drawer__splitter-handle\" />\n            </div>\n          </div>\n        </div>\n      </Th>\n    ),\n    [editColumnLabel, getColumnKey, onColumnNameOrDataTypeUpdate, renderHeaderCellInfo, tableInstance]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableHeaderCell(column, columnIndex),\n    [renderCountColumn, renderResizableHeaderCell]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      tableInstance.headerGroups.map((headerGroup: HeaderGroup) => (\n        <Tr key={headerGroup.accessor} {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n        </Tr>\n      )),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  const renderLastLevelInHeaderGroups = useMemo(\n    () => (\n      <Tr>\n        {_.last(\n          tableInstance.headerGroups as HeaderGroup[]\n        )!.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  return <Thead noWrap>{isHeadless ? renderLastLevelInHeaderGroups : renderHeaderGroups}</Thead>;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerMenuProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerMenuProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\n\nexport interface TableHandlerProps {\n  /** The prefix to be used for the column name */\n  columnPrefix: string;\n  /** Columns instance */\n  tableColumns: ColumnInstance[];\n  /** Function for setting table columns */\n  setTableColumns: React.Dispatch<React.SetStateAction<ColumnInstance[]>>;\n  /** Function for setting table rows */\n  setTableRows: React.Dispatch<React.SetStateAction<DataRecord[]>>;\n  /** Last selected column index */\n  lastSelectedColumnIndex: number;\n  /** Last selected row index */\n  lastSelectedRowIndex: number;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding: () => DataRecord;\n  /** Show/hide table handler */\n  showTableHandler: boolean;\n  /** Function to programmatically show/hide table handler */\n  setShowTableHandler: React.Dispatch<React.SetStateAction<boolean>>;\n  /** Target for showing the table handler  */\n  tableHandlerTarget: HTMLElement;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Table handler allowed operations */\n  tableHandlerAllowedOperations: TableOperation[];\n}\n\nexport const TableHandler: React.FunctionComponent<TableHandlerProps> = ({\n  columnPrefix,\n  tableColumns,\n  setTableColumns,\n  setTableRows,\n  lastSelectedColumnIndex,\n  lastSelectedRowIndex,\n  onRowAdding,\n  showTableHandler,\n  setShowTableHandler,\n  tableHandlerTarget,\n  handlerConfiguration,\n  tableHandlerAllowedOperations,\n}) => {\n  const [selectedColumnIndex, setSelectedColumnIndex] = useState(lastSelectedColumnIndex);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(lastSelectedRowIndex);\n\n  useEffect(() => {\n    setSelectedColumnIndex(lastSelectedColumnIndex);\n  }, [lastSelectedColumnIndex]);\n\n  useEffect(() => {\n    setSelectedRowIndex(lastSelectedRowIndex);\n  }, [lastSelectedRowIndex]);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      } as ColumnInstance;\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          setTableColumns((prevTableColumns) =>\n            insertBefore(prevTableColumns, selectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          setTableColumns((prevTableColumns) =>\n            insertAfter(prevTableColumns, selectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          setTableColumns((prevTableColumns) => deleteAt(prevTableColumns, selectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          setTableRows((prevTableRows) => insertBefore(prevTableRows, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          setTableRows((prevTableRows) => insertAfter(prevTableRows, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          setTableRows((prevTableRows) => deleteAt(prevTableRows, selectedRowIndex));\n          break;\n      }\n      setShowTableHandler(false);\n    },\n    [\n      setShowTableHandler,\n      setTableColumns,\n      setTableRows,\n      selectedColumnIndex,\n      generateNextAvailableColumn,\n      selectedRowIndex,\n      onRowAdding,\n    ]\n  );\n\n  return useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [\n      showTableHandler,\n      handlerConfiguration,\n      tableHandlerAllowedOperations,\n      handlingOperation,\n      setShowTableHandler,\n      tableHandlerTarget,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nexport interface BoxedExpressionGlobalContextProps {\n  currentlyOpenedHandlerCallback: React.Dispatch<React.SetStateAction<boolean>>;\n  setCurrentlyOpenedHandlerCallback: React.Dispatch<\n    React.SetStateAction<React.Dispatch<React.SetStateAction<boolean>>>\n  >;\n}\n\nexport const BoxedExpressionGlobalContext = React.createContext<BoxedExpressionGlobalContextProps>(\n  {} as BoxedExpressionGlobalContextProps\n);\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Cell,\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  Row,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable, Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { CellProps, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { TableHeader } from \"./TableHeader\";\nimport { TableHandler } from \"./TableHandler\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface TableProps {\n  /** Table identifier, useful for nested structures */\n  tableId?: string;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** The prefix to be used for the column name */\n  columnPrefix?: string;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: Column[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate?: (rows: DataRecord[]) => void;\n  /** Function to be executed when a single row gets modified */\n  onSingleRowUpdate?: (rowIndex: number, row: DataRecord) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** True to have no header for this table */\n  isHeadless?: boolean;\n  /** True to support multiple levels in the header */\n  headerHasMultipleLevels?: boolean;\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey?: (row: Row) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey?: (column: Column) => string;\n}\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  tableId,\n  children,\n  columnPrefix = \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onSingleRowUpdate,\n  onRowAdding = () => ({}),\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  isHeadless = false,\n  headerHasMultipleLevels = false,\n  getRowKey = (row) => row.id as string,\n  getColumnKey = (column) => column.id as string,\n}: TableProps) => {\n  const NUMBER_OF_ROWS_COLUMN = \"#\";\n  const NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [tableColumns, setTableColumns] = useState([\n    {\n      label: NUMBER_OF_ROWS_COLUMN,\n      accessor: NUMBER_OF_ROWS_COLUMN,\n      width: 60,\n      minWidth: 60,\n      disableResizing: true,\n      isCountColumn: true,\n      hideFilter: true,\n      ...(headerHasMultipleLevels\n        ? {\n            columns: [\n              {\n                label: NUMBER_OF_ROWS_SUBCOLUMN,\n                accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n                minWidth: 60,\n                width: 60,\n                disableResizing: true,\n                isCountColumn: true,\n                hideFilter: true,\n              },\n            ],\n          }\n        : {}),\n    },\n    ...columns,\n  ]);\n  const [tableRows, setTableRows] = useState(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  const onCellUpdate = useCallback((rowIndex: number, columnId: string, value: string) => {\n    setTableRows((prevTableCells) => {\n      const updatedTableCells = [...prevTableCells];\n      updatedTableCells[rowIndex][columnId] = value;\n      return updatedTableCells;\n    });\n  }, []);\n\n  const onRowUpdate = useCallback(\n    (rowIndex: number, updatedRow: DataRecord) => {\n      onSingleRowUpdate?.(rowIndex, updatedRow);\n      setTableRows((prevTableCells) => {\n        const updatedRows = [...prevTableCells];\n        updatedRows[rowIndex] = updatedRow;\n        return updatedRows;\n      });\n    },\n    [onSingleRowUpdate]\n  );\n\n  const defaultColumn = {\n    minWidth: 150,\n    width: 150,\n    Cell: useCallback((cellRef) => {\n      const column = cellRef.column as ColumnInstance;\n      if (column.isCountColumn) {\n        return cellRef.value;\n      } else {\n        return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n      }\n      // Table performance optimization: no need to re-render cells, since nested component themselves will re-render\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const tableHandlerStateUpdate = (target: HTMLElement, columnIndex: number) => {\n    setTableHandlerTarget(target);\n    globalContext.currentlyOpenedHandlerCallback?.(false);\n    setShowTableHandler(true);\n    globalContext.setCurrentlyOpenedHandlerCallback?.(() => setShowTableHandler);\n    setLastSelectedColumnIndex(columnIndex);\n  };\n\n  const getThProps = (column: ColumnInstance, columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.length > 1 ? [TableOperation.RowDelete] : []),\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns,\n      data: tableRows,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  useEffect(() => {\n    onColumnsUpdate(tableColumns.slice(1)); //Removing \"# of rows\" column\n  }, [onColumnsUpdate, tableColumns]);\n\n  useEffect(() => {\n    onRowsUpdate?.(tableRows);\n  }, [onRowsUpdate, tableRows]);\n\n  const resizeNestedColumns = (columns: ColumnInstance[], accessor: string, updatedWidth: number) => {\n    const columnIndex = _.findIndex(columns, { accessor });\n    if (columnIndex >= 0) {\n      const updatedColumn = { ...columns[columnIndex] };\n      updatedColumn.width = updatedWidth;\n      columns.splice(columnIndex, 1, updatedColumn);\n    } else {\n      _.forEach(columns, (column) => resizeNestedColumns(column.columns, accessor, updatedWidth));\n    }\n  };\n\n  const finishedResizing =\n    tableInstance.state.columnResizing.isResizingColumn === null &&\n    !_.isEmpty(tableInstance.state.columnResizing.columnWidths);\n  useEffect(() => {\n    if (finishedResizing) {\n      setTableColumns((prevTableColumns) => {\n        _.forEach(tableInstance.state.columnResizing.columnWidths, (updatedColumnWidth, accessor) =>\n          resizeNestedColumns(prevTableColumns as ColumnInstance[], accessor, updatedColumnWidth)\n        );\n        return [...prevTableColumns];\n      });\n    }\n    // Need to consider a change only when resizing is finished (no other dependencies to consider for this useEffect)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finishedResizing]);\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td\n              role=\"cell\"\n              key={childIndex}\n              className=\"row-remainder-content\"\n              style={{\n                width: tableInstance.allColumns[childIndex + 1].width,\n                minWidth: tableInstance.allColumns[childIndex + 1].minWidth,\n              }}\n            >\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children, tableInstance.allColumns]\n  );\n\n  return (\n    <div className={`table-component ${tableId}`}>\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <TableHeader\n          tableInstance={tableInstance}\n          editColumnLabel={editColumnLabel}\n          isHeadless={isHeadless}\n          tableColumns={tableColumns as ColumnInstance[]}\n          setTableColumns={setTableColumns}\n          setTableRows={setTableRows}\n          getColumnKey={getColumnKey}\n        />\n        <Tbody {...tableInstance.getTableBodyProps()}>\n          {tableInstance.rows.map((row: Row, rowIndex: number) => {\n            tableInstance.prepareRow(row);\n            return (\n              <Tr\n                className=\"table-row\"\n                {...row.getRowProps()}\n                key={`${getRowKey(row)}-${rowIndex}`}\n                ouiaId={\"expression-row-\" + rowIndex}\n              >\n                {row.cells.map((cell: Cell, cellIndex: number) => (\n                  <Td\n                    {...(cellIndex === 0 ? {} : cell.getCellProps())}\n                    {...tableInstance.getTdProps(cellIndex, rowIndex)}\n                    key={`${getColumnKey(cell.column)}-${cellIndex}`}\n                    data-ouia-component-id={\"expression-column-\" + cellIndex}\n                    className={cellIndex === 0 ? \"counter-cell\" : \"data-cell\"}\n                  >\n                    {cellIndex === 0 ? rowIndex + 1 : cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n          {children ? renderAdditiveRow : null}\n        </Tbody>\n      </TableComposable>\n      {showTableHandler ? (\n        <TableHandler\n          tableColumns={tableColumns as ColumnInstance[]}\n          setTableColumns={setTableColumns}\n          setTableRows={setTableRows}\n          columnPrefix={columnPrefix}\n          handlerConfiguration={handlerConfiguration}\n          lastSelectedColumnIndex={lastSelectedColumnIndex}\n          lastSelectedRowIndex={lastSelectedRowIndex}\n          onRowAdding={onRowAdding}\n          showTableHandler={showTableHandler}\n          setShowTableHandler={setShowTableHandler}\n          tableHandlerAllowedOperations={tableHandlerAllowedOperations}\n          tableHandlerTarget={tableHandlerTarget}\n        />\n      ) : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { DataType, RelationProps, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [tableColumns, setTableColumns] = useState(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const [tableRows, setTableRows] = useState(relationProps.rows === undefined ? [[]] : relationProps.rows);\n\n  useEffect(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns,\n      rows: tableRows,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps, tableColumns, tableRows]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns,\n        (column) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    [tableColumns]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) =>\n      setTableColumns(\n        _.map(columns, (columnInstance: ColumnInstance) => ({\n          name: columnInstance.accessor,\n          dataType: columnInstance.dataType,\n          width: columnInstance.width,\n        }))\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows, (row) =>\n        _.reduce(\n          tableColumns,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    [tableColumns, tableRows]\n  );\n\n  const onSavingRows = useCallback(\n    (rows) =>\n      setTableRows(\n        _.map(rows, (tableRow: DataRecord) =>\n          _.reduce(\n            tableColumns,\n            (row: string[], column) => {\n              row.push((tableRow[column.name]! as string) || \"\");\n              return row;\n            },\n            []\n          )\n        )\n      ),\n    [tableColumns]\n  );\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n  /** Function invoked when resetting expression */\n  onExpressionResetting?: () => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n  onExpressionResetting,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [entryExpression, setEntryExpression] = useState(expression);\n\n  const expressionChangedExternally = expression.logicType === undefined;\n  useEffect(() => {\n    setEntryExpression(_.omit(expression, \"isHeadless\"));\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onUpdatingRecursiveExpression(_.omit(entryExpression, \"isHeadless\"));\n  }, [onUpdatingRecursiveExpression, entryExpression]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        ...previousSelectedExpression,\n        logicType: logicType,\n      };\n      return _.omit(updatedExpression, \"isHeadless\");\n    });\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => ({\n      name: previousSelectedExpression.name,\n      dataType: previousSelectedExpression.dataType,\n      logicType: LogicType.Undefined,\n    }));\n    onExpressionResetting?.();\n  }, [onExpressionResetting]);\n\n  return (\n    <div className=\"entry-expression\" ref={expressionContainerRef}>\n      <LogicTypeSelector\n        isHeadless={true}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        selectedExpression={entryExpression}\n        onLogicTypeUpdating={onLogicTypeUpdating}\n        onLogicTypeResetting={onLogicTypeResetting}\n        getPlacementRef={getLogicTypeSelectorRef}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { CellProps, ContextEntries, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryExpression, setEntryExpression] = useState(contextEntry.entryExpression);\n\n  const expressionChangedExternally = contextEntry.entryExpression.logicType === undefined;\n  useEffect(() => {\n    setEntryExpression(contextEntry.entryExpression);\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onRowUpdate(index, { ...contextEntry, entryExpression });\n    // Purpose is to update the row every time the expression wrapped in the entry changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entryExpression]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    setEntryExpression(expression);\n  }, []);\n\n  return (\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        onExpressionResetting={contextEntry.onExpressionResetting}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType } from \"../../api\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  return (\n    <div className=\"entry-info\">\n      <EditExpressionMenu\n        title={i18n.editContextEntry}\n        selectedExpressionName={entryName}\n        selectedDataType={entryDataType}\n        onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n      >\n        <div className=\"entry-definition\">\n          <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n            {entryName}\n          </p>\n          <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n            ({entryDataType})\n          </p>\n        </div>\n      </EditExpressionMenu>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryInfo, setEntryInfo] = useState(contextEntry.entryInfo);\n\n  useEffect(() => {\n    setEntryInfo(contextEntry.entryInfo);\n  }, [contextEntry.entryInfo]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      onRowUpdate(index, { ...contextEntry, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.name}\n        dataType={entryInfo.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useDragEvents(): {\n  setResizerElement: (element: HTMLDivElement) => void;\n  dragItHorizontally: (x: number) => void;\n} {\n  let resizerElement: HTMLDivElement;\n  let mouseDownEvent: MouseEvent;\n\n  const initMouseDownEvent = (element: HTMLDivElement) => {\n    mouseDownEvent = new MouseEvent(\"mousedown\", {\n      clientX: element.getBoundingClientRect().left,\n      clientY: element.getBoundingClientRect().top,\n      bubbles: true,\n      cancelable: true,\n    });\n  };\n\n  const moveHorizontallyBy = (x: number) => {\n    resizerElement.dispatchEvent(\n      new MouseEvent(\"mousemove\", {\n        clientX: resizerElement.getBoundingClientRect().left + x,\n        clientY: resizerElement.getBoundingClientRect().top,\n        bubbles: true,\n        cancelable: true,\n      })\n    );\n  };\n\n  const mouseUpEvent = new MouseEvent(\"mouseup\", {\n    bubbles: true,\n    cancelable: true,\n  });\n\n  const setResizerElement = (element: HTMLDivElement) => {\n    resizerElement = element;\n    initMouseDownEvent(resizerElement);\n  };\n\n  const dragItHorizontally = (x: number) => {\n    resizerElement.dispatchEvent(mouseDownEvent);\n    moveHorizontallyBy(x);\n    resizerElement.dispatchEvent(mouseUpEvent);\n  };\n\n  return {\n    setResizerElement,\n    dragItHorizontally,\n  };\n}\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  ContextProps,\n  DataType,\n  ExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord, Row } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\nimport { useDragEvents } from \"../../hooks\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\nconst DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nconst DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  uid,\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  onUpdatingNameAndDataType,\n  contextEntries,\n  result = {} as ExpressionProps,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  const { setResizerElement, dragItHorizontally } = useDragEvents();\n\n  const handlerConfiguration: TableHandlerConfiguration = [\n    {\n      group: i18n.contextEntry,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const onExpressionResetting = useCallback(() => {\n    setExpressionWidth(DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH);\n  }, []);\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n\n  const [columns, setColumns] = useState([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          label: \"Name\",\n          accessor: \"entryInfo\",\n          disableHandlerOnHeader: true,\n          width: infoWidth,\n          minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n        },\n        {\n          label: \"Value\",\n          accessor: \"entryExpression\",\n          disableHandlerOnHeader: true,\n          width: expressionWidth,\n          minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n        },\n      ],\n    },\n  ]);\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {},\n        onExpressionResetting,\n      } as DataRecord,\n    ]\n  );\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label, expressionColumn.dataType);\n      setExpressionWidth(_.find(expressionColumn.columns, { accessor: \"entryExpression\" })?.width as number);\n      setInfoWidth(_.find(expressionColumn.columns, { accessor: \"entryInfo\" })?.width as number);\n      setColumns(([prevExpressionColumn]) => [\n        {\n          ...prevExpressionColumn,\n          label: expressionColumn.label,\n          accessor: expressionColumn.accessor,\n          dataType: expressionColumn.dataType,\n        },\n      ]);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const generateNextAvailableEntryName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `ContextEntry-${lastIndex}`;\n      const entryWithCandidateName = _.find(rows, { entryInfo: { name: candidateName } });\n      return entryWithCandidateName ? generateNextAvailableEntryName(lastIndex + 1) : candidateName;\n    },\n    [rows]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(rows.length),\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {},\n      onExpressionResetting,\n    }),\n    [generateNextAvailableEntryName, onExpressionResetting, rows.length]\n  );\n\n  const checkForOverflowingCell = useCallback(\n    () =>\n      Array.from(\n        document.querySelectorAll(\n          `.context-expression.${uid} > .table-component > table > tbody > tr > td:last-of-type .table-component:first-of-type`\n        )\n      ).reduce(\n        (acc, td: HTMLElement) => {\n          const { clientWidth, scrollWidth } = td;\n          return {\n            isOverflow: acc.isOverflow || scrollWidth > clientWidth,\n            contentWidth: Math.max(acc.contentWidth, scrollWidth - clientWidth),\n          };\n        },\n        { isOverflow: false, contentWidth: 0 }\n      ),\n    [uid]\n  );\n\n  const checkForSpareSpace = useCallback(() => {\n    const tableWidth = (document.querySelector(\n      `.context-expression.${uid} > .table-component > table`\n    ) as HTMLTableElement).getBoundingClientRect().width;\n    const tableHeaderWidth = (document.querySelector(\n      `.context-expression.${uid} > .table-component > table > thead`\n    ) as HTMLTableElement).getBoundingClientRect().width;\n    const spareSpace = tableWidth - tableHeaderWidth;\n    if (spareSpace > 0) {\n      return {\n        isSpareSpace: true,\n        spareSpace,\n      };\n    }\n    return {\n      isSpareSpace: false,\n      spareSpace: 0,\n    };\n  }, [uid]);\n\n  const updateValueColumnWidth = useCallback(\n    (shiftWidth: number) => {\n      setResizerElement(\n        document.querySelector(\n          `.table-component.${uid} > table > thead > tr:last-of-type > th:last-of-type div.pf-c-drawer`\n        )! as HTMLDivElement\n      );\n      dragItHorizontally(shiftWidth);\n    },\n    [dragItHorizontally, setResizerElement, uid]\n  );\n\n  const contextTableGetRowKey = useCallback((row: Row) => (row.original as ContextEntryRecord).entryInfo.name, []);\n\n  const onSingleRowUpdate = useCallback(() => {\n    const { isOverflow, contentWidth } = checkForOverflowingCell();\n    const { isSpareSpace, spareSpace } = checkForSpareSpace();\n    if (isOverflow) {\n      const contentWidthPlusPadding = contentWidth + 7;\n      updateValueColumnWidth(contentWidthPlusPadding);\n    } else if (isSpareSpace) {\n      updateValueColumnWidth(spareSpace);\n    }\n  }, [checkForOverflowingCell, checkForSpareSpace, updateValueColumnWidth]);\n\n  useEffect(() => {\n    onSingleRowUpdate();\n  }, [onSingleRowUpdate]);\n\n  useEffect(() => {\n    const [expressionColumn] = columns;\n    const updatedDefinition: ContextProps = {\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      ...(infoWidth > DEFAULT_ENTRY_INFO_MIN_WIDTH ? { entryInfoWidth: infoWidth } : {}),\n      ...(expressionWidth > DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH ? { entryExpressionWidth: expressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]))\n      : window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n  }, [columns, isHeadless, onUpdatingRecursiveExpression, rows, resultExpression, infoWidth, expressionWidth]);\n\n  return (\n    <div className={`context-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerHasMultipleLevels={true}\n        isHeadless={isHeadless}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        onSingleRowUpdate={onSingleRowUpdate}\n        handlerConfiguration={handlerConfiguration}\n        getRowKey={contextTableGetRowKey}\n      >\n        <div className=\"context-result\">{`<result>`}</div>\n        <ContextEntryExpression\n          expression={resultExpression}\n          onUpdatingRecursiveExpression={setResultExpression}\n          onExpressionResetting={onExpressionResetting}\n        />\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ContextProps, DataType, ExpressionProps, LiteralExpressionProps, LogicType, RelationProps } from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\nimport nextId from \"react-id-generator\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const expression = _.extend(selectedExpression, {\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} uid={nextId()} />;\n      case LogicType.DecisionTable:\n      case LogicType.Function:\n      case LogicType.Invocation:\n      case LogicType.List:\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypesWithoutUndefined = useCallback(\n    () => Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () =>\n      _.map(getLogicTypesWithoutUndefined(), (key) => (\n        <MenuItem key={key} itemId={key}>\n          {key}\n        </MenuItem>\n      )),\n    [getLogicTypesWithoutUndefined]\n  );\n\n  const getLogicSelectionArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (event: MouseEvent, itemId: string) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = itemId as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getLogicSelectionArrowPlacement}\n        className=\"logic-type-popover\"\n        hasAutoWidth\n        body={\n          <Menu onSelect={onLogicTypeSelect}>\n            <MenuList>{renderLogicTypeItems()}</MenuList>\n          </Menu>\n        }\n      />\n    ),\n    [i18n.selectLogicType, getLogicSelectionArrowPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <div className=\"expression-name-and-logic-type\">\n        <span className=\"expression-title\">{selectedExpression.name}</span>\n        <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n      </div>\n\n      <div\n        className=\"expression-container-box\"\n        ref={expressionContainerRef}\n        data-ouia-component-id=\"expression-container\"\n      >\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport * as _ from \"lodash\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => {\n  const [currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback] = useState(() => _.identity);\n\n  return (\n    <I18nDictionariesProvider\n      defaults={boxedExpressionEditorI18nDefaults}\n      dictionaries={boxedExpressionEditorDictionaries}\n      initialLocale={navigator.language}\n      ctx={BoxedExpressionEditorI18nContext}\n    >\n      <BoxedExpressionGlobalContext.Provider\n        value={{ currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback }}\n      >\n        <ExpressionContainer {...props.expressionDefinition} />\n      </BoxedExpressionGlobalContext.Provider>\n    </I18nDictionariesProvider>\n  );\n};\n\nexport { BoxedExpressionEditor };\n"],"sourceRoot":""}
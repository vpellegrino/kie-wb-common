{"version":3,"sources":["boxed_expression_editor/index.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/index.ts"],"names":["DataType","LogicType","TableOperation","PopoverMenu","children","arrowPlacement","body","title","appendTo","Popover","className","position","distance","id","reference","headerContent","bodyContent","EditExpressionMenu","nameField","dataTypeField","selectedDataType","Undefined","selectedExpressionName","onExpressionUpdate","i18n","useBoxedExpressionEditorI18n","editExpression","name","dataType","useState","dataTypeSelectOpen","setDataTypeSelectOpen","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","useCallback","event","target","value","type","onDataTypeSelect","selection","getDataTypes","_","Object","values","key","SelectOption","onDataTypeFilter","e","input","RegExp","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","onChange","onBlur","placeholder","Select","variant","SelectVariant","typeahead","typeAheadAriaLabel","choose","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","expressionDataType","setExpressionDataType","literalExpressionContent","setLiteralExpressionContent","window","beeApi","broadcastLiteralExpressionDefinition","logicType","onContentChange","updatedContent","getEditExpressionMenuArrowPlacement","document","querySelector","renderLiteralExpressionHeader","TextArea","defaultValue","aria-label","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","map","groupOperation","MenuGroup","group","label","items","operation","MenuList","MenuItem","isDisabled","Table","columnPrefix","onRowsUpdate","onColumnsUpdate","rows","columns","NUMBER_OF_ROWS_COLUMN","accessor","width","disableResizing","hideFilter","tableColumns","setTableColumns","tableRows","setTableRows","showTableHandler","setShowTableHandler","tableHandlerTarget","setTableHandlerTarget","parseInt","toString","tableHandlerAllowedOperations","setTableHandlerAllowedOperations","lastSelectedColumnIndex","setLastSelectedColumnIndex","lastSelectedRowIndex","setLastSelectedRowIndex","insertBefore","elements","index","element","slice","insertAfter","deleteAt","updateColumnNameInRows","prevColumnName","newColumnName","prevTableCells","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","prevTableColumns","updatedTableColumns","onCellUpdate","rowIndex","columnId","updatedTableCells","generateNextAvailableColumnName","lastIndex","candidateName","generateNextAvailableColumn","length","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowInsertAbove","prevTableRows","RowInsertBelow","RowDelete","defaultColumn","minWidth","maxWidth","Cell","cellRef","column","canResize","initialValue","row","React","setValue","EditableCell","tableInstance","useTable","data","getThProps","onContextMenu","preventDefault","getTdProps","useBlockLayout","useResizeColumns","buildTableHandler","useMemo","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","finishedResizing","state","columnResizing","isResizingColumn","columnWidths","updatedColumnWidth","updatedColumn","splice","TableComposable","getTableProps","Thead","noWrap","headers","editRelation","Th","getHeaderProps","getResizerProps","Tbody","getTableBodyProps","prepareRow","Tr","getRowProps","cells","cell","cellIndex","Td","getCellProps","render","RelationExpression","relationProps","columnOperations","insertLeft","insertRight","delete","rowOperations","insertAbove","insertBelow","undefined","broadcastRelationExpressionDefinition","convertColumnsForTheTable","onSavingColumns","columnInstance","convertRowsForTheTable","tableRow","onSavingRows","push","ExpressionContainer","selectedExpression","logicTypeSelected","setLogicTypeSelected","setSelectedExpression","wrapperRef","useRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","current","pageX","pageY","addEventListener","removeEventListener","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","onLogicTypeSelect","currentItem","currentItemProps","selectedLogicType","previousSelectedExpression","executeClearAction","updatedExpression","resetExpressionDefinition","getLogicTypesWithoutUndefined","renderLogicTypeItems","SimpleListItem","getLogicSelectionArrowPlacement","buildLogicSelectorMenu","selectLogicType","SimpleList","updateNameAndDataType","updatedName","updatedDataType","renderSelectedExpression","Relation","Context","DecisionTable","Function","Invocation","List","buildContextMenu","style","top","left","Button","isSmall","ButtonVariant","primary","onClick","clear","ref","selectExpression","BoxedExpressionEditor","defaults","boxedExpressionEditorI18nDefaults","dictionaries","boxedExpressionEditorDictionaries","initialLocale","navigator","language","ctx","BoxedExpressionEditorI18nContext","expressionDefinition","en","en_common","context","decisionTable","function","invocation","list","literalExpression","relation","locale","dictionary","Map","useContext","App","setUpdatedExpression","definition","JSON","stringify","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4af25f5d.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./components\";\nexport * from \"./api\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Relation's column name */\n  name: string;\n  /** Relation's column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n}\n\nexport type Columns = Column[];\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      className=\"popover-menu-selector\"\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={<div className=\"selector-menu-title\">{title}</div>}\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      setDataType(selection);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: selection,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder=\"Expression Name\"\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <Select\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={i18n.choose}\n              onToggle={onDataTypeSelectToggle}\n              onSelect={onDataTypeSelect}\n              onFilter={onDataTypeFilter}\n              isOpen={dataTypeSelectOpen}\n              selections={dataType}\n              hasInlineFilter\n              inlineFilterPlaceholderText={i18n.choose}\n            >\n              {getDataTypes()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  content,\n  dataType,\n  name,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n}: LiteralExpressionProps) => {\n  const [expressionName, setExpressionName] = useState(name);\n  const [expressionDataType, setExpressionDataType] = useState(dataType);\n  const [literalExpressionContent, setLiteralExpressionContent] = useState(content);\n\n  useEffect(() => {\n    window.beeApi?.broadcastLiteralExpressionDefinition?.({\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent,\n    });\n  }, [expressionName, expressionDataType, literalExpressionContent]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType, name }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      if (onUpdatingNameAndDataType) {\n        onUpdatingNameAndDataType(name, dataType);\n      }\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onContentChange = useCallback((event) => {\n    const updatedContent = event.target.value;\n    setLiteralExpressionContent(updatedContent);\n  }, []);\n\n  const getEditExpressionMenuArrowPlacement = useCallback(\n    () => document.querySelector(\".literal-expression-header\")! as HTMLElement,\n    []\n  );\n\n  const renderLiteralExpressionHeader = useCallback(\n    () => (\n      <div className=\"literal-expression-header\">\n        <p className=\"expression-name\">{expressionName}</p>\n        <p className=\"expression-data-type\">({expressionDataType})</p>\n      </div>\n    ),\n    [expressionDataType, expressionName]\n  );\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader() : null}\n      <div className=\"literal-expression-body\">\n        <TextArea\n          defaultValue={literalExpressionContent}\n          onBlur={onContentChange}\n          aria-label=\"literal-expression-content\"\n        />\n      </div>\n      <EditExpressionMenu\n        arrowPlacement={getEditExpressionMenuArrowPlacement}\n        selectedExpressionName={expressionName}\n        selectedDataType={expressionDataType}\n        onExpressionUpdate={onExpressionUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu className=\"table-handler-menu\" onSelect={(event, itemId) => onOperation(itemId)}>\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Cell,\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  Row,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { EditableCell, EditableCellProps } from \"./EditableCell\";\nimport { DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\n\nexport interface TableProps {\n  /** The prefix to be used for the column name */\n  columnPrefix: string;\n  /** Table's columns */\n  columns: Column[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n  /** Function to be executed when cells are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n}\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  columnPrefix,\n  onRowsUpdate,\n  onColumnsUpdate,\n  rows,\n  columns,\n  handlerConfiguration,\n}: TableProps) => {\n  const NUMBER_OF_ROWS_COLUMN = \"#\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [tableColumns, setTableColumns] = useState([\n    {\n      label: NUMBER_OF_ROWS_COLUMN,\n      accessor: NUMBER_OF_ROWS_COLUMN,\n      width: 60,\n      disableResizing: true,\n      hideFilter: true,\n    },\n    ...columns,\n  ]);\n  const [tableRows, setTableRows] = useState(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      setTableRows((prevTableCells) => {\n        return _.map(prevTableCells, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        });\n      }),\n    []\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns[columnIndex] as ColumnInstance).accessor as string;\n        setTableColumns((prevTableColumns: ColumnInstance[]) => {\n          const updatedTableColumns = [...prevTableColumns];\n          updatedTableColumns[columnIndex].label = name;\n          updatedTableColumns[columnIndex].accessor = name;\n          updatedTableColumns[columnIndex].dataType = dataType;\n          return updatedTableColumns;\n        });\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [tableColumns, updateColumnNameInRows]\n  );\n\n  const onCellUpdate = useCallback((rowIndex: number, columnId: string, value: string) => {\n    setTableRows((prevTableCells) => {\n      const updatedTableCells = [...prevTableCells];\n      updatedTableCells[rowIndex][columnId] = value;\n      return updatedTableCells;\n    });\n  }, []);\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      };\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          setTableColumns((prevTableColumns) =>\n            insertBefore(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          setTableColumns((prevTableColumns) =>\n            insertAfter(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          setTableColumns((prevTableColumns) => deleteAt(prevTableColumns, lastSelectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          setTableRows((prevTableRows) => insertBefore(prevTableRows, lastSelectedRowIndex, {}));\n          break;\n        case TableOperation.RowInsertBelow:\n          setTableRows((prevTableRows) => insertAfter(prevTableRows, lastSelectedRowIndex, {}));\n          break;\n        case TableOperation.RowDelete:\n          setTableRows((prevTableRows) => deleteAt(prevTableRows, lastSelectedRowIndex));\n          break;\n      }\n      setShowTableHandler(false);\n    },\n    [generateNextAvailableColumn, lastSelectedColumnIndex, lastSelectedRowIndex]\n  );\n\n  const defaultColumn = {\n    minWidth: 38,\n    width: 150,\n    maxWidth: 600,\n    Cell: useCallback((cellRef: EditableCellProps) => {\n      const column = cellRef.column as ColumnInstance;\n      return column.canResize ? EditableCell(cellRef) : cellRef.value;\n    }, []),\n  };\n\n  const getThProps = (columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      e.preventDefault();\n      setTableHandlerAllowedOperations([\n        TableOperation.ColumnInsertLeft,\n        TableOperation.ColumnInsertRight,\n        ...(tableColumns.length > 2 ? [TableOperation.ColumnDelete] : []),\n      ]);\n      setTableHandlerTarget(e.target as HTMLElement);\n      setShowTableHandler(true);\n      setLastSelectedColumnIndex(columnIndex);\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      e.preventDefault();\n      setTableHandlerAllowedOperations([\n        TableOperation.ColumnInsertLeft,\n        TableOperation.ColumnInsertRight,\n        ...(tableColumns.length > 2 ? [TableOperation.ColumnDelete] : []),\n        TableOperation.RowInsertAbove,\n        TableOperation.RowInsertBelow,\n        ...(tableRows.length > 1 ? [TableOperation.RowDelete] : []),\n      ]);\n      setTableHandlerTarget(e.target as HTMLElement);\n      setShowTableHandler(true);\n      setLastSelectedColumnIndex(columnIndex);\n      setLastSelectedRowIndex(rowIndex);\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns,\n      data: tableRows,\n      defaultColumn,\n      onCellUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  const buildTableHandler = useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [showTableHandler, handlerConfiguration, tableHandlerAllowedOperations, handlingOperation, tableHandlerTarget]\n  );\n\n  useEffect(() => {\n    onColumnsUpdate(tableColumns.slice(1)); //Removing \"# of rows\" column\n  }, [onColumnsUpdate, tableColumns]);\n\n  useEffect(() => {\n    onRowsUpdate(tableRows);\n  }, [onRowsUpdate, tableRows]);\n\n  const finishedResizing =\n    tableInstance.state.columnResizing.isResizingColumn === null &&\n    !_.isEmpty(tableInstance.state.columnResizing.columnWidths);\n  useEffect(() => {\n    setTableColumns((prevTableColumns) => {\n      _.forEach(tableInstance.state.columnResizing.columnWidths, (updatedColumnWidth, accessor) => {\n        const columnIndex = _.findIndex(prevTableColumns, { accessor });\n        const updatedColumn = { ...prevTableColumns[columnIndex] };\n        updatedColumn.width = updatedColumnWidth;\n        prevTableColumns.splice(columnIndex, 1, updatedColumn);\n      });\n      return [...prevTableColumns];\n    });\n    // Need to consider a change only when resizing is finished (no other dependencies to consider for this useEffect)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finishedResizing]);\n\n  return (\n    <div className=\"table-component\">\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()}>\n        <Thead noWrap>\n          <tr>\n            {tableInstance.headers.map((column: ColumnInstance, columnIndex: number) =>\n              column.canResize ? (\n                <EditExpressionMenu\n                  title={i18n.editRelation}\n                  selectedExpressionName={column.label}\n                  selectedDataType={column.dataType}\n                  onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n                  key={columnIndex}\n                >\n                  <Th {...column.getHeaderProps()} {...tableInstance.getThProps(columnIndex)} key={columnIndex}>\n                    <div className=\"header-cell\">\n                      <div>\n                        <p className=\"pf-u-text-truncate\">{column.label}</p>\n                        <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p>\n                      </div>\n                      <div className=\"pf-c-drawer\" {...column.getResizerProps()}>\n                        <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n                          <div className=\"pf-c-drawer__splitter-handle\" />\n                        </div>\n                      </div>\n                    </div>\n                  </Th>\n                </EditExpressionMenu>\n              ) : (\n                <Th {...column.getHeaderProps()} key={columnIndex}>\n                  <div className=\"header-cell\">{column.label}</div>\n                </Th>\n              )\n            )}\n          </tr>\n        </Thead>\n\n        <Tbody {...tableInstance.getTableBodyProps()}>\n          {tableInstance.rows.map((row: Row, rowIndex: number) => {\n            tableInstance.prepareRow(row);\n            return (\n              <Tr className=\"table-row\" {...row.getRowProps()} key={rowIndex}>\n                {row.cells.map((cell: Cell, cellIndex: number) => (\n                  <Td {...cell.getCellProps()} {...tableInstance.getTdProps(cellIndex, rowIndex)} key={cellIndex}>\n                    {cellIndex === 0 ? rowIndex + 1 : cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </TableComposable>\n      {showTableHandler ? buildTableHandler : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\n\nexport interface EditableCellProps {\n  /** Cell's value */\n  value: string;\n  /** Cell's row index */\n  row: { index: number };\n  /** Cell's column identifier */\n  column: { id: string };\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { DataType, RelationProps, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [tableColumns, setTableColumns] = useState(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const [tableRows, setTableRows] = useState(relationProps.rows === undefined ? [[]] : relationProps.rows);\n\n  useEffect(() => {\n    window.beeApi?.broadcastRelationExpressionDefinition?.({\n      ...relationProps,\n      columns: tableColumns,\n      rows: tableRows,\n    });\n  }, [relationProps, tableColumns, tableRows]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns,\n        (column) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    [tableColumns]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) =>\n      setTableColumns(\n        _.map(columns, (columnInstance: ColumnInstance) => ({\n          name: columnInstance.accessor,\n          dataType: columnInstance.dataType,\n          width: columnInstance.width,\n        }))\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows, (row) =>\n        _.reduce(\n          tableColumns,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    [tableColumns, tableRows]\n  );\n\n  const onSavingRows = useCallback(\n    (rows) =>\n      setTableRows(\n        _.map(rows, (tableRow: DataRecord) =>\n          _.reduce(\n            tableColumns,\n            (row: string[], column) => {\n              row.push(tableRow[column.name]! || \"\");\n              return row;\n            },\n            []\n          )\n        )\n      ),\n    [tableColumns]\n  );\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport * as _ from \"lodash\";\nimport \"./ExpressionContainer.css\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { Button, ButtonVariant, SimpleList, SimpleListItem, SimpleListItemProps } from \"@patternfly/react-core\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { ExpressionProps, LiteralExpressionProps, LogicType, RelationProps } from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { RelationExpression } from \"../RelationExpression\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(\n    !_.isEmpty(props.selectedExpression.logicType) || props.selectedExpression.logicType === LogicType.Undefined\n  );\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const onLogicTypeSelect = useCallback(\n    (currentItem: React.RefObject<HTMLButtonElement>, currentItemProps: SimpleListItemProps) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = currentItemProps.children as LogicType;\n      setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n        ...previousSelectedExpression,\n        logicType: selectedLogicType,\n      }));\n    },\n    []\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, [setContextMenuVisibility]);\n\n  const getLogicTypesWithoutUndefined = useCallback(() => {\n    return Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined);\n  }, []);\n\n  const renderLogicTypeItems = useCallback(() => {\n    return _.map(getLogicTypesWithoutUndefined(), (key) => <SimpleListItem key={key}>{key}</SimpleListItem>);\n  }, [getLogicTypesWithoutUndefined]);\n\n  const getLogicSelectionArrowPlacement = useCallback(\n    () => document.querySelector(\".expression-container-box\")! as HTMLElement,\n    []\n  );\n\n  const buildLogicSelectorMenu = useCallback(() => {\n    return (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getLogicSelectionArrowPlacement}\n        body={<SimpleList onSelect={onLogicTypeSelect}>{renderLogicTypeItems()}</SimpleList>}\n      />\n    );\n  }, [i18n.selectLogicType, getLogicSelectionArrowPlacement, onLogicTypeSelect, renderLogicTypeItems]);\n\n  const updateNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const renderSelectedExpression = useMemo(() => {\n    switch (selectedExpression.logicType) {\n      case LogicType.LiteralExpression:\n        return (\n          <LiteralExpression\n            onUpdatingNameAndDataType={updateNameAndDataType}\n            {...(selectedExpression as LiteralExpressionProps)}\n          />\n        );\n      case LogicType.Relation:\n        return <RelationExpression {...(selectedExpression as RelationProps)} />;\n      case LogicType.Context:\n      case LogicType.DecisionTable:\n      case LogicType.Function:\n      case LogicType.Invocation:\n      case LogicType.List:\n      default:\n        return selectedExpression.logicType;\n    }\n  }, [selectedExpression, updateNameAndDataType]);\n\n  const buildContextMenu = useCallback(() => {\n    return (\n      <div\n        className=\"context-menu-container\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    );\n  }, [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]);\n\n  return (\n    <div className=\"expression-container\">\n      <span className=\"expression-title\">{selectedExpression.name}</span>\n      <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n\n      <div\n        className={`expression-container-box ${logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"}`}\n        ref={contextMenuRef}\n      >\n        {selectedExpression.logicType ? renderSelectedExpression : i18n.selectExpression}\n      </div>\n\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => (\n  <I18nDictionariesProvider\n    defaults={boxedExpressionEditorI18nDefaults}\n    dictionaries={boxedExpressionEditorDictionaries}\n    initialLocale={navigator.language}\n    ctx={BoxedExpressionEditorI18nContext}\n  >\n    <ExpressionContainer {...props.expressionDefinition} />\n  </I18nDictionariesProvider>\n);\n\nexport { BoxedExpressionEditor };\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  choose: \"Choose...\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  editExpression: \"Edit Expression\",\n  editRelation: \"Edit Relation\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  name: \"Name\",\n  relation: \"Relation\",\n  rowOperations: {\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  BoxedExpressionEditor,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression and relation logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./DataType\";\nexport * from \"./ExpressionProps\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n"],"sourceRoot":""}
{"version":3,"sources":["boxed_expression_editor/index.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntry.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryCell.tsx","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/index.ts"],"names":["DataType","LogicType","TableOperation","PopoverMenu","children","arrowPlacement","body","title","appendTo","Popover","data-ouia-component-id","className","position","distance","id","reference","headerContent","bodyContent","EditExpressionMenu","nameField","dataTypeField","selectedDataType","Undefined","selectedExpressionName","onExpressionUpdate","i18n","useBoxedExpressionEditorI18n","editExpression","name","dataType","useState","dataTypeSelectOpen","setDataTypeSelectOpen","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","useCallback","event","target","value","type","onDataTypeSelect","selection","getDataTypes","_","Object","values","key","SelectOption","onDataTypeFilter","e","input","RegExp","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","onChange","onBlur","placeholder","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","choose","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","setLiteralExpressionContent","expressionDefinition","logicType","window","beeApi","broadcastLiteralExpressionDefinition","onContentChange","updatedContent","getEditExpressionMenuArrowPlacement","document","querySelector","renderLiteralExpressionHeader","TextArea","defaultValue","aria-label","EditableCell","initialValue","index","row","column","onCellUpdate","React","setValue","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","map","groupOperation","MenuGroup","group","label","items","operation","MenuList","MenuItem","isDisabled","NO_TABLE_CONTEXT_MENU_CLASS","Table","columnPrefix","editColumnLabel","onColumnsUpdate","onRowsUpdate","onRowAdding","defaultCell","rows","columns","NUMBER_OF_ROWS_COLUMN","tableRef","useRef","accessor","width","disableResizing","isCountColumn","hideFilter","tableColumns","setTableColumns","tableRows","setTableRows","showTableHandler","setShowTableHandler","tableHandlerTarget","setTableHandlerTarget","parseInt","toString","tableHandlerAllowedOperations","setTableHandlerAllowedOperations","lastSelectedColumnIndex","setLastSelectedColumnIndex","lastSelectedRowIndex","setLastSelectedRowIndex","insertBefore","elements","element","slice","insertAfter","deleteAt","updateColumnNameInRows","prevColumnName","newColumnName","prevTableCells","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","prevTableColumns","updatedTableColumns","rowIndex","columnId","updatedTableCells","onRowUpdate","updatedRow","updatedRows","generateNextAvailableColumnName","lastIndex","candidateName","generateNextAvailableColumn","length","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowInsertAbove","prevTableRows","RowInsertBelow","RowDelete","defaultColumn","minWidth","Cell","cellRef","contextMenuIsAvailable","targetIsContainedInCurrentTable","closest","current","contextMenuAvailableForTarget","classList","contains","tableInstance","useTable","data","getThProps","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","preventDefault","getTdProps","useBlockLayout","useResizeColumns","buildTableHandler","useMemo","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","finishedResizing","state","columnResizing","isResizingColumn","columnWidths","updatedColumnWidth","updatedColumn","splice","renderCountColumn","Th","getHeaderProps","data-ouia-component-type","renderResizableColumn","canResize","getResizerProps","renderAdditiveRow","Tr","Td","role","TableComposable","getTableProps","ref","Thead","noWrap","headers","Tbody","getTableBodyProps","prepareRow","getRowProps","cells","cell","cellIndex","getCellProps","render","RelationExpression","relationProps","columnOperations","insertLeft","insertRight","delete","rowOperations","insertAbove","insertBelow","undefined","broadcastRelationExpressionDefinition","convertColumnsForTheTable","onSavingColumns","columnInstance","convertRowsForTheTable","tableRow","onSavingRows","push","editRelation","ContextEntry","expression","entryExpression","setEntryExpression","expressionChangedExternally","expressionContainerRef","getLogicTypeSelectorRef","onLogicTypeUpdating","previousSelectedExpression","onLogicTypeResetting","selectedExpression","getPlacementRef","ContextEntryCell","contextEntry","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","editContextEntry","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","ContextExpression","contextEntries","result","setColumns","setRows","resultExpression","setResultExpression","expressionColumn","updatedDefinition","Context","broadcastContextExpressionDefinition","querySelectorAll","forEach","td","style","th","onUpdatingExpressionColumn","prevExpressionColumn","generateNextAvailableEntryName","LogicTypeSelector","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","addEventListener","removeEventListener","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","DecisionTable","Function","Invocation","List","getLogicTypesWithoutUndefined","renderLogicTypeItems","SimpleListItem","getLogicSelectionArrowPlacement","onLogicTypeSelect","currentItem","currentItemProps","selectedLogicType","buildLogicSelectorMenu","selectLogicType","SimpleList","executeClearAction","buildContextMenu","top","left","Button","isSmall","ButtonVariant","primary","onClick","clear","selectExpression","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","updatedExpression","resetExpressionDefinition","BoxedExpressionEditor","defaults","boxedExpressionEditorI18nDefaults","dictionaries","boxedExpressionEditorDictionaries","initialLocale","navigator","language","ctx","BoxedExpressionEditorI18nContext","en","en_common","context","decisionTable","function","invocation","list","literalExpression","relation","locale","dictionary","Map","useContext","App","setUpdatedExpression","definition","JSON","stringify","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9c9d5a67.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./components\";\nexport * from \"./api\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className=\"popover-menu-selector\"\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      setDataType(selection);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: selection,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder=\"Expression Name\"\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <Select\n              ouiaId=\"edit-expression-data-type\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={i18n.choose}\n              onToggle={onDataTypeSelectToggle}\n              onSelect={onDataTypeSelect}\n              onFilter={onDataTypeFilter}\n              isOpen={dataTypeSelectOpen}\n              selections={dataType}\n              hasInlineFilter\n              inlineFilterPlaceholderText={i18n.choose}\n            >\n              {getDataTypes()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  content,\n  dataType,\n  name,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}: LiteralExpressionProps) => {\n  const [expressionName, setExpressionName] = useState(name);\n  const [expressionDataType, setExpressionDataType] = useState(dataType);\n  const [literalExpressionContent, setLiteralExpressionContent] = useState(content);\n\n  useEffect(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent,\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [expressionName, expressionDataType, literalExpressionContent, isHeadless, onUpdatingRecursiveExpression]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType, name }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      if (onUpdatingNameAndDataType) {\n        onUpdatingNameAndDataType(name, dataType);\n      }\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onContentChange = useCallback((event) => {\n    const updatedContent = event.target.value;\n    setLiteralExpressionContent(updatedContent);\n  }, []);\n\n  const getEditExpressionMenuArrowPlacement = useCallback(\n    () => document.querySelector(\".literal-expression-header\")! as HTMLElement,\n    []\n  );\n\n  const renderLiteralExpressionHeader = useCallback(\n    () => (\n      <div className=\"literal-expression-header\">\n        <p className=\"expression-name\">{expressionName}</p>\n        <p className=\"expression-data-type\">({expressionDataType})</p>\n      </div>\n    ),\n    [expressionDataType, expressionName]\n  );\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader() : null}\n      <div className=\"literal-expression-body\">\n        <TextArea\n          defaultValue={literalExpressionContent}\n          onBlur={onContentChange}\n          aria-label=\"literal-expression-content\"\n        />\n      </div>\n      <EditExpressionMenu\n        arrowPlacement={getEditExpressionMenuArrowPlacement}\n        selectedExpressionName={expressionName}\n        selectedDataType={expressionDataType}\n        onExpressionUpdate={onExpressionUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Cell,\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  Row,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { CellProps, DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\n\nexport interface TableProps {\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement;\n  /** The prefix to be used for the column name */\n  columnPrefix?: string;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** Component to be used for rendering a cell */\n  defaultCell?: React.FunctionComponent<CellProps>;\n  /** Table's columns */\n  columns: Column[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n  /** Function to be executed when cells are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** True to have no header for this table */\n  isHeadless?: boolean;\n}\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  children,\n  columnPrefix = \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onRowAdding = () => ({}),\n  defaultCell = EditableCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  isHeadless = false,\n}: TableProps) => {\n  const NUMBER_OF_ROWS_COLUMN = \"#\";\n\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const [tableColumns, setTableColumns] = useState([\n    {\n      label: NUMBER_OF_ROWS_COLUMN,\n      accessor: NUMBER_OF_ROWS_COLUMN,\n      width: 60,\n      disableResizing: true,\n      isCountColumn: true,\n      hideFilter: true,\n    },\n    ...columns,\n  ]);\n  const [tableRows, setTableRows] = useState(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      setTableRows((prevTableCells) => {\n        return _.map(prevTableCells, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        });\n      }),\n    []\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns[columnIndex] as ColumnInstance).accessor as string;\n        setTableColumns((prevTableColumns: ColumnInstance[]) => {\n          const updatedTableColumns = [...prevTableColumns];\n          updatedTableColumns[columnIndex].label = name;\n          updatedTableColumns[columnIndex].accessor = name;\n          updatedTableColumns[columnIndex].dataType = dataType;\n          return updatedTableColumns;\n        });\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [tableColumns, updateColumnNameInRows]\n  );\n\n  const onCellUpdate = useCallback((rowIndex: number, columnId: string, value: string) => {\n    setTableRows((prevTableCells) => {\n      const updatedTableCells = [...prevTableCells];\n      updatedTableCells[rowIndex][columnId] = value;\n      return updatedTableCells;\n    });\n  }, []);\n\n  const onRowUpdate = useCallback((rowIndex: number, updatedRow: DataRecord) => {\n    setTableRows((prevTableCells) => {\n      const updatedRows = [...prevTableCells];\n      updatedRows[rowIndex] = updatedRow;\n      return updatedRows;\n    });\n  }, []);\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      };\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          setTableColumns((prevTableColumns) =>\n            insertBefore(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          setTableColumns((prevTableColumns) =>\n            insertAfter(prevTableColumns, lastSelectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          setTableColumns((prevTableColumns) => deleteAt(prevTableColumns, lastSelectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          setTableRows((prevTableRows) => insertBefore(prevTableRows, lastSelectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          setTableRows((prevTableRows) => insertAfter(prevTableRows, lastSelectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          setTableRows((prevTableRows) => deleteAt(prevTableRows, lastSelectedRowIndex));\n          break;\n      }\n      setShowTableHandler(false);\n    },\n    [generateNextAvailableColumn, lastSelectedColumnIndex, lastSelectedRowIndex, onRowAdding]\n  );\n\n  const defaultColumn = {\n    minWidth: 38,\n    width: 150,\n    Cell: useCallback(\n      (cellRef) => {\n        const column = cellRef.column as ColumnInstance;\n        return column.isCountColumn ? cellRef.value : defaultCell(cellRef);\n      },\n      [defaultCell]\n    ),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const getThProps = (columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !(tableColumns[columnIndex] as ColumnInstance).disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n        ]);\n        setTableHandlerTarget(target);\n        setShowTableHandler(true);\n        setLastSelectedColumnIndex(columnIndex);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.length > 1 ? [TableOperation.RowDelete] : []),\n        ]);\n        setTableHandlerTarget(target);\n        setShowTableHandler(true);\n        setLastSelectedColumnIndex(columnIndex);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns,\n      data: tableRows,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  const buildTableHandler = useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [showTableHandler, handlerConfiguration, tableHandlerAllowedOperations, handlingOperation, tableHandlerTarget]\n  );\n\n  useEffect(() => {\n    onColumnsUpdate(tableColumns.slice(1)); //Removing \"# of rows\" column\n  }, [onColumnsUpdate, tableColumns]);\n\n  useEffect(() => {\n    onRowsUpdate(tableRows);\n  }, [onRowsUpdate, tableRows]);\n\n  const finishedResizing =\n    tableInstance.state.columnResizing.isResizingColumn === null &&\n    !_.isEmpty(tableInstance.state.columnResizing.columnWidths);\n  useEffect(() => {\n    setTableColumns((prevTableColumns) => {\n      _.forEach(tableInstance.state.columnResizing.columnWidths, (updatedColumnWidth, accessor) => {\n        const columnIndex = _.findIndex(prevTableColumns, { accessor });\n        const updatedColumn = { ...prevTableColumns[columnIndex] };\n        updatedColumn.width = updatedColumnWidth;\n        prevTableColumns.splice(columnIndex, 1, updatedColumn);\n      });\n      return [...prevTableColumns];\n    });\n    // Need to consider a change only when resizing is finished (no other dependencies to consider for this useEffect)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finishedResizing]);\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th {...column.getHeaderProps()} className=\"fixed-column\" key={columnIndex}>\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    []\n  );\n\n  const renderResizableColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <EditExpressionMenu\n        title={editColumnLabel}\n        selectedExpressionName={column.label}\n        selectedDataType={column.dataType}\n        onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n        key={columnIndex}\n      >\n        <Th\n          {...column.getHeaderProps()}\n          {...tableInstance.getThProps(columnIndex)}\n          className=\"resizable-column\"\n          key={columnIndex}\n        >\n          <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n            <div>\n              <p className=\"pf-u-text-truncate\">{column.label}</p>\n              <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p>\n            </div>\n            {column.canResize ? (\n              <div className=\"pf-c-drawer\" {...column.getResizerProps()}>\n                <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n                  <div className=\"pf-c-drawer__splitter-handle\" />\n                </div>\n              </div>\n            ) : null}\n          </div>\n        </Th>\n      </EditExpressionMenu>\n    ),\n    [editColumnLabel, onColumnNameOrDataTypeUpdate, tableInstance]\n  );\n\n  const renderAdditiveRow = useMemo(() => {\n    return (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        <Td role=\"cell\" className=\"row-remainder-content\">\n          {children}\n        </Td>\n      </Tr>\n    );\n  }, [children]);\n\n  return (\n    <div className=\"table-component\">\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <Thead noWrap className={isHeadless ? \"headless-table\" : \"\"}>\n          <tr>\n            {tableInstance.headers.map((column: ColumnInstance, columnIndex: number) =>\n              column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableColumn(column, columnIndex)\n            )}\n          </tr>\n        </Thead>\n\n        <Tbody {...tableInstance.getTableBodyProps()}>\n          {tableInstance.rows.map((row: Row, rowIndex: number) => {\n            tableInstance.prepareRow(row);\n            return (\n              <Tr className=\"table-row\" {...row.getRowProps()} key={rowIndex} ouiaId={\"expression-row-\" + rowIndex}>\n                {row.cells.map((cell: Cell, cellIndex: number) => (\n                  <Td\n                    {...cell.getCellProps()}\n                    {...tableInstance.getTdProps(cellIndex, rowIndex)}\n                    key={cellIndex}\n                    data-ouia-component-id={\"expression-column-\" + cellIndex}\n                    className={cellIndex === 0 ? \"counter-cell\" : \"data-cell\"}\n                  >\n                    {cellIndex === 0 ? rowIndex + 1 : cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n          {children ? renderAdditiveRow : null}\n        </Tbody>\n      </TableComposable>\n      {showTableHandler ? buildTableHandler : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { DataType, RelationProps, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [tableColumns, setTableColumns] = useState(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const [tableRows, setTableRows] = useState(relationProps.rows === undefined ? [[]] : relationProps.rows);\n\n  useEffect(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns,\n      rows: tableRows,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps, tableColumns, tableRows]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns,\n        (column) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    [tableColumns]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) =>\n      setTableColumns(\n        _.map(columns, (columnInstance: ColumnInstance) => ({\n          name: columnInstance.accessor,\n          dataType: columnInstance.dataType,\n          width: columnInstance.width,\n        }))\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows, (row) =>\n        _.reduce(\n          tableColumns,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    [tableColumns, tableRows]\n  );\n\n  const onSavingRows = useCallback(\n    (rows) =>\n      setTableRows(\n        _.map(rows, (tableRow: DataRecord) =>\n          _.reduce(\n            tableColumns,\n            (row: string[], column) => {\n              row.push((tableRow[column.name]! as string) || \"\");\n              return row;\n            },\n            []\n          )\n        )\n      ),\n    [tableColumns]\n  );\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntry.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ContextResultProps {\n  /** Children element to be used for entry info */\n  children?: React.ReactElement;\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n}\n\nexport const ContextEntry: React.FunctionComponent<ContextResultProps> = ({\n  children,\n  expression,\n  onUpdatingRecursiveExpression,\n}) => {\n  const [entryExpression, setEntryExpression] = useState(expression);\n\n  const expressionChangedExternally = expression.logicType === undefined;\n\n  useEffect(() => {\n    setEntryExpression(expression);\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onUpdatingRecursiveExpression(entryExpression);\n  }, [onUpdatingRecursiveExpression, entryExpression]);\n\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setEntryExpression((previousSelectedExpression: ExpressionProps) => {\n      return {\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n    });\n  }, []);\n\n  return (\n    <div className=\"context-entry\">\n      <div className=\"entry-info\">{children}</div>\n\n      <div className=\"entry-expression\" ref={expressionContainerRef}>\n        <LogicTypeSelector\n          isHeadless={true}\n          onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n          selectedExpression={entryExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { CellProps, ContextEntries, ExpressionProps } from \"../../api\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntry } from \"./ContextEntry\";\n\nexport interface ContextEntryProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryCell: React.FunctionComponent<ContextEntryProps> = ({ data, row: { index }, onRowUpdate }) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const contextEntry = data[index];\n\n  const [entryName, setEntryName] = useState(contextEntry.name);\n\n  const [entryDataType, setEntryDataType] = useState(contextEntry.dataType);\n\n  const [entryExpression, setEntryExpression] = useState(contextEntry.expression);\n\n  useEffect(() => {\n    setEntryName(contextEntry.name);\n  }, [contextEntry.name]);\n\n  useEffect(() => {\n    setEntryDataType(contextEntry.dataType);\n  }, [contextEntry.dataType]);\n\n  const expressionChangedExternally = contextEntry.expression.logicType === undefined;\n  useEffect(() => {\n    setEntryExpression(contextEntry.expression);\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  useEffect(() => {\n    onRowUpdate(index, { ...contextEntry, expression: entryExpression });\n    // Purpose is to update the row every time the expression wrapped in the entry changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entryExpression]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onRowUpdate(index, { ...contextEntry, name, dataType });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    setEntryExpression(expression);\n  }, []);\n\n  return (\n    <div className=\"context-entry-cell\">\n      <ContextEntry expression={entryExpression} onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}>\n        <EditExpressionMenu\n          title={i18n.editContextEntry}\n          selectedExpressionName={entryName}\n          selectedDataType={entryDataType}\n          onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n        >\n          <div className=\"entry-definition\">\n            <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n              {entryName}\n            </p>\n            <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n              ({entryDataType})\n            </p>\n          </div>\n        </EditExpressionMenu>\n      </ContextEntry>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextProps,\n  DataType,\n  ExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryCell } from \"./ContextEntryCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntry } from \"./ContextEntry\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  onUpdatingNameAndDataType,\n  contextEntries = [\n    { name: DEFAULT_CONTEXT_ENTRY_NAME, dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE, expression: {} } as DataRecord,\n  ],\n  result = {} as ExpressionProps,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = [\n    {\n      group: i18n.contextEntry,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [columns, setColumns] = useState([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      disableResizing: true,\n    },\n  ]);\n\n  const [rows, setRows] = useState(contextEntries);\n\n  const [resultExpression, setResultExpression] = useState(result);\n\n  useEffect(() => {\n    const expressionColumn = columns[0];\n    const updatedDefinition: ContextProps = {\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: resultExpression,\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(updatedDefinition)\n      : window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n  }, [columns, isHeadless, onUpdatingRecursiveExpression, rows, resultExpression]);\n\n  /**\n   * Every time the ContextExpression component gets re-rendered, automatically calculating table cells width to fit the entire content\n   */\n  useEffect(() => {\n    document\n      .querySelectorAll(\".context-expression > .table-component > table > tbody > tr > td.data-cell\")\n      .forEach((td: HTMLElement) => (td.style.width = \"100%\"));\n    document\n      .querySelectorAll(\".context-expression > .table-component > table > tbody > tr.table-row\")\n      .forEach((td: HTMLElement) => (td.style.width = \"100%\"));\n    document\n      .querySelectorAll(\".context-expression > .table-component > table > thead > tr > th.resizable-column\")\n      .forEach((th: HTMLElement) => (th.style.width = \"calc((100% - 60px)\"));\n  });\n\n  const onUpdatingExpressionColumn = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label, expressionColumn.dataType);\n      setColumns(([prevExpressionColumn]) => [\n        {\n          ...prevExpressionColumn,\n          label: expressionColumn.label,\n          accessor: expressionColumn.accessor,\n          dataType: expressionColumn.dataType,\n          width: expressionColumn.width as number,\n        },\n      ]);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const generateNextAvailableEntryName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `ContextEntry-${lastIndex}`;\n      const entryWithCandidateName = _.find(rows, { name: candidateName });\n      return entryWithCandidateName ? generateNextAvailableEntryName(lastIndex + 1) : candidateName;\n    },\n    [rows]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      name: generateNextAvailableEntryName(rows.length),\n      dataType: DataType.Undefined,\n      expression: {},\n    }),\n    [generateNextAvailableEntryName, rows.length]\n  );\n\n  return (\n    <div className=\"context-expression\">\n      <Table\n        isHeadless={isHeadless}\n        defaultCell={ContextEntryCell}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onUpdatingExpressionColumn}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={handlerConfiguration}\n      >\n        <ContextEntry expression={resultExpression} onUpdatingRecursiveExpression={setResultExpression}>\n          <div className=\"context-result\">{`<result>`}</div>\n        </ContextEntry>\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ContextProps, DataType, ExpressionProps, LiteralExpressionProps, LogicType, RelationProps } from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, SimpleList, SimpleListItem, SimpleListItemProps } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const expression = _.extend(selectedExpression, {\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} />;\n      case LogicType.DecisionTable:\n      case LogicType.Function:\n      case LogicType.Invocation:\n      case LogicType.List:\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypesWithoutUndefined = useCallback(\n    () => Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () => _.map(getLogicTypesWithoutUndefined(), (key) => <SimpleListItem key={key}>{key}</SimpleListItem>),\n    [getLogicTypesWithoutUndefined]\n  );\n\n  const getLogicSelectionArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (currentItem: React.RefObject<HTMLButtonElement>, currentItemProps: SimpleListItemProps) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = currentItemProps.children as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getLogicSelectionArrowPlacement}\n        body={<SimpleList onSelect={onLogicTypeSelect}>{renderLogicTypeItems()}</SimpleList>}\n      />\n    ),\n    [i18n.selectLogicType, getLogicSelectionArrowPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <span className=\"expression-title\">{selectedExpression.name}</span>\n      <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n\n      <div className=\"expression-container-box\" ref={expressionContainerRef}>\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => (\n  <I18nDictionariesProvider\n    defaults={boxedExpressionEditorI18nDefaults}\n    dictionaries={boxedExpressionEditorDictionaries}\n    initialLocale={navigator.language}\n    ctx={BoxedExpressionEditorI18nContext}\n  >\n    <ExpressionContainer {...props.expressionDefinition} />\n  </I18nDictionariesProvider>\n);\n\nexport { BoxedExpressionEditor };\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  choose: \"Choose...\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editRelation: \"Edit Relation\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  name: \"Name\",\n  relation: \"Relation\",\n  rowOperations: {\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression, relation and context logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./DataType\";\nexport * from \"./ExpressionProps\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n"],"sourceRoot":""}
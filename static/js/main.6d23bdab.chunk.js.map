{"version":3,"sources":["boxed_expression_editor/index.tsx","boxed_expression_editor/api/BuiltinAggregation.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/HitPolicy.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/index.ts","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/context/BoxedExpressionGlobalContext.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/Resizer/Resizer.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/TableHeader.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/TableHandler.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpressionCell.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfo.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfoCell.tsx","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/DecisionTableExpression/DecisionTableExpression.tsx","boxed_expression_editor/components/ListExpression/ListExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx"],"names":["window","renderBoxedExpressionEditor","selector","definition","ReactDOM","expressionDefinition","selectedExpression","document","getElementById","BuiltinAggregation","DataType","HitPolicy","LogicType","TableHeaderVisibility","TableOperation","en","en_common","choose","clear","columnOperations","delete","insertLeft","insertRight","columns","context","contextEntry","dataType","decisionTable","editContextEntry","editExpression","editRelation","function","invocation","list","literalExpression","name","relation","rowOperations","insertAbove","insertBelow","rows","selectExpression","selectLogicType","boxedExpressionEditorI18nDefaults","locale","dictionary","boxedExpressionEditorDictionaries","Map","BoxedExpressionEditorI18nContext","React","useBoxedExpressionEditorI18n","useContext","App","Undefined","useState","updatedExpression","setUpdatedExpression","beeApi","resetExpressionDefinition","broadcastLiteralExpressionDefinition","broadcastRelationExpressionDefinition","broadcastContextExpressionDefinition","broadcastListExpressionDefinition","className","JSON","stringify","PopoverMenu","children","arrowPlacement","body","title","appendTo","hasAutoWidth","Popover","data-ouia-component-id","position","distance","id","reference","headerContent","bodyContent","BoxedExpressionGlobalContext","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","selectedDataType","selectedExpressionName","onExpressionUpdate","globalContext","i18n","boxedExpressionEditorRef","current","undefined","dataTypeSelectOpen","setDataTypeSelectOpen","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","useCallback","event","target","value","type","onDataTypeSelect","selection","getDataTypes","_","Object","values","key","SelectOption","onDataTypeFilter","e","input","RegExp","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","onChange","onBlur","placeholder","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","Resizer","height","minHeight","minWidth","onHorizontalResizeStop","width","targetHeight","resizerHandler","useMemo","onResizeStop","data","size","minConstraints","axis","handle","LiteralExpression","uid","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","expressionDataType","setExpressionDataType","literalExpressionContent","setLiteralExpressionContent","literalExpressionWidth","setLiteralExpressionWidth","logicType","onContentChange","updatedContent","renderElementWithResizeHandler","element","renderLiteralExpressionHeader","getBodyContent","TextArea","defaultValue","aria-label","TableHeader","tableInstance","tableColumns","setTableColumns","setTableRows","editColumnLabel","headerVisibility","Full","getColumnKey","updateColumnNameInRows","prevColumnName","newColumnName","prevTableCells","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","accessor","prevTableColumns","updatedTableColumns","label","renderCountColumn","column","Th","getHeaderProps","data-ouia-component-type","renderHeaderCellInfo","renderResizableHeaderCell","getThProps","canResize","getResizerProps","renderColumn","isCountColumn","renderHeaderGroups","headerGroups","map","headerGroup","Tr","getHeaderGroupProps","headers","renderLastLevelInHeaderGroups","None","Thead","noWrap","OnlyLastLevel","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","groupOperation","MenuGroup","group","items","operation","MenuList","MenuItem","isDisabled","TableHandler","columnPrefix","lastSelectedColumnIndex","lastSelectedRowIndex","onRowAdding","showTableHandler","setShowTableHandler","tableHandlerTarget","tableHandlerAllowedOperations","resetRowCustomFunction","selectedColumnIndex","setSelectedColumnIndex","selectedRowIndex","setSelectedRowIndex","insertBefore","elements","index","slice","insertAfter","deleteAt","generateNextAvailableColumnName","lastIndex","candidateName","generateNextAvailableColumn","length","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","RowInsertAbove","prevTableRows","RowInsertBelow","RowDelete","RowClear","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","NO_TABLE_CONTEXT_MENU_CLASS","Table","tableId","onColumnsUpdate","onRowsUpdate","onSingleRowUpdate","defaultCell","headerHasMultipleLevels","getRowKey","row","tableRef","useRef","disableResizing","hideFilter","tableRows","setTableHandlerTarget","parseInt","toString","setTableHandlerAllowedOperations","setLastSelectedColumnIndex","setLastSelectedRowIndex","onCellUpdate","rowIndex","columnId","updatedTableCells","onRowUpdate","updatedRow","updatedRows","defaultColumn","Cell","cellRef","initialValue","setValue","EditableCell","contextMenuIsAvailable","targetIsContainedInCurrentTable","closest","contextMenuAvailableForTarget","classList","contains","tableHandlerStateUpdate","currentlyOpenedHandlerCallback","setCurrentlyOpenedHandlerCallback","useTable","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","preventDefault","getTdProps","useBlockLayout","useResizeColumns","resizeNestedColumns","updatedWidth","updatedColumn","splice","finishedResizing","state","columnResizing","isResizingColumn","columnWidths","updatedColumnWidth","renderAdditiveRow","Td","role","childIndex","style","allColumns","TableComposable","getTableProps","ref","Tbody","getTableBodyProps","prepareRow","getRowProps","cells","cell","cellIndex","getCellProps","render","RelationExpression","relationProps","convertColumnsForTheTable","onSavingColumns","columnInstance","convertRowsForTheTable","tableRow","onSavingRows","push","ContextEntryExpression","expression","onExpressionResetting","expressionContainerRef","entryExpression","expressionChangedExternally","getLogicTypeSelectorRef","onLogicTypeUpdating","onLogicTypeResetting","getPlacementRef","ContextEntryExpressionCell","ContextEntryInfo","onContextEntryUpdate","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","ContextEntryInfoCell","entryInfo","setEntryInfo","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH","ContextExpression","contextEntries","result","entryInfoWidth","entryExpressionWidth","setExpressionWidth","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setColumns","setRows","expressionColumn","prevExpressionColumn","generateNextAvailableEntryName","contextTableGetRowKey","original","getHeaderVisibility","updatedDefinition","Context","DecisionTableExpression","ListExpression","generateLiteralExpression","listItems","item","listExpressionWidth","listTableGetRowKey","spreadListExpressionDefinition","List","listItem","LogicTypeSelector","nextId","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","addEventListener","removeEventListener","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","DecisionTable","Function","Invocation","getLogicTypesWithoutUndefined","renderLogicTypeItems","getArrowPlacement","getAppendToPlacement","onLogicTypeSelect","buildLogicSelectorMenu","executeClearAction","buildContextMenu","top","left","Button","isSmall","ButtonVariant","primary","onClick","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","previousSelectedExpression","BoxedExpressionEditor","defaults","dictionaries","initialLocale","navigator","language","ctx","Provider"],"mappings":"4JAAA,mKAwBAA,OAAOC,4BAA8B,SAACC,EAAkBC,GACtDC,SACE,gBAAC,IAAD,CAAuBC,qBAAsB,CAAEC,mBAAoBH,KACnEI,SAASC,eAAeN,M,uDCKrB,IAAKO,G,SAAAA,K,QAAAA,E,UAAAA,E,QAAAA,E,SAAAA,M,2DChBL,IAAKC,EAhBZ,kC,SAgBYA,K,wBAAAA,E,UAAAA,E,kBAAAA,E,kBAAAA,E,YAAAA,E,yBAAAA,E,0CAAAA,E,gBAAAA,E,gBAAAA,E,YAAAA,E,iDAAAA,M,+ECAL,IAAKC,G,SAAAA,K,gBAAAA,E,cAAAA,E,oBAAAA,E,UAAAA,E,kBAAAA,E,uBAAAA,E,4BAAAA,M,uCCAL,IAAKC,EAhBZ,kC,SAgBYA,K,wBAAAA,E,uCAAAA,E,kBAAAA,E,+BAAAA,E,oBAAAA,E,oBAAAA,E,wBAAAA,E,aAAAA,M,uCCGL,IAAKC,EAOAC,EA1BZ,oE,SAmBYD,O,eAAAA,I,iCAAAA,I,gBAAAA,M,cAOAC,O,uCAAAA,I,yCAAAA,I,+BAAAA,I,mCAAAA,I,mCAAAA,I,yBAAAA,I,wBAAAA,M,+NCPCC,EAA6B,2BACrCC,MADqC,IAExCC,OAAQ,YACRC,MAAO,QACPC,iBAAkB,CAChBC,OAAQ,SACRC,WAAY,cACZC,YAAa,gBAEfC,QAAS,UACTC,QAAS,UACTC,aAAc,gBACdC,SAAU,YACVC,cAAe,iBACfC,iBAAkB,qBAClBC,eAAgB,kBAChBC,aAAc,gBACdC,SAAU,WACVC,WAAY,aACZC,KAAM,OACNC,kBAAmB,qBACnBC,KAAM,OACNC,SAAU,WACVC,cAAe,CACbnB,MAAO,QACPE,OAAQ,SACRkB,YAAa,eACbC,YAAa,gBAEfC,KAAM,OACNC,iBAAkB,oBAClBC,gBAAiB,sBC3BNC,EAA6E,CACxFC,OAAQ,KACRC,WAAY9B,GAED+B,EAAiF,IAAIC,IAAI,CAAC,CAAC,KAAMhC,KACjGiC,EAAmCC,gBAC9C,IAGK,SAASC,IACd,OAAOC,qBAAWH,K,wHCFPI,EAA+B,WAE1C,IAAM9C,EAAsC,CAC1C6B,KAAM,kBACNT,SAAUhB,WAAS2C,WAJ2B,EAOEC,mBAAShD,GAPX,mBAOzCiD,EAPyC,KAOtBC,EAPsB,KAS1CnD,EAAiD,CAAEC,sBAWzD,OARAN,OAAOyD,OAAS,CACdC,0BAA2B,SAACvD,GAAD,OAAiCqD,EAAqBrD,IACjFwD,qCAAsC,SAACxD,GAAD,OAAwCqD,EAAqBrD,IACnGyD,sCAAuC,SAACzD,GAAD,OAA+BqD,EAAqBrD,IAC3F0D,qCAAsC,SAAC1D,GAAD,OAA8BqD,EAAqBrD,IACzF2D,kCAAmC,SAAC3D,GAAD,OAA2BqD,EAAqBrD,KAInF,uBAAK4D,UAAU,YACb,uBAAKA,UAAU,oBACb,gBAAC,wBAAD,CAAuB1D,qBAAsBA,KAE/C,uBAAK0D,UAAU,gBACb,qBAAGA,UAAU,cAAb,2GAGA,2BAAMC,KAAKC,UAAUV,EAAmB,KAAM,OAMtDnD,SAAgB,gBAACgD,EAAD,MAAS7C,SAASC,eAAe,U,wSClEjD,m1B,uHCAA,0oC,+LCqCa0D,G,OAAyD,SAAC,GAQ9C,IAPvBC,EAOsB,EAPtBA,SACAC,EAMsB,EANtBA,eACAC,EAKsB,EALtBA,KACAC,EAIsB,EAJtBA,MACAC,EAGsB,EAHtBA,SACAR,EAEsB,EAFtBA,UACAS,EACsB,EADtBA,aAEA,OACE,gBAACC,EAAA,EAAD,CACEC,yBAAuB,0BACvBX,UAAS,+BAA0BA,EAAY,IAAMA,EAAY,IACjES,aAAcA,EACdG,SAAS,SACTC,SAAU,EACVC,GAAG,gBACHC,UAAWV,EACXG,SAAUA,EACVQ,cACE,uBAAKhB,UAAU,sBAAsBW,yBAAuB,iCACzDJ,GAGLU,YAAaX,GAEZF,K,wCCrCMc,EAA+BhC,gBAC1C,ICoBWiC,EAAkB,kBAElBC,EAAuE,SAAC,GAUrD,IAAD,YAT7BhB,EAS6B,EAT7BA,SACAI,EAQ6B,EAR7BA,SACAH,EAO6B,EAP7BA,eACAE,EAM6B,EAN7BA,MACAc,EAK6B,EAL7BA,UACAC,EAI6B,EAJ7BA,cAI6B,IAH7BC,wBAG6B,MAHV5E,WAAS2C,UAGC,EAF7BkC,EAE6B,EAF7BA,uBACAC,EAC6B,EAD7BA,mBAEMC,EAAgBtC,qBAAW8B,GACzBS,EAASxC,yCAATwC,KACRpB,EAAK,UAAGA,SAAH,QAAYoB,EAAK7D,eACtBuD,EAAS,UAAGA,SAAH,QAAgBM,EAAKvD,KAC9BkD,EAAa,UAAGA,SAAH,QAAoBK,EAAKhE,SACtC6C,EAAQ,oBAAGA,SAAH,kBAAekB,EAAcE,gCAA7B,aAAe,EAAwCC,eAAvD,aAAkEC,EAN7C,MAQuBvC,oBAAS,GARhC,mBAQtBwC,EARsB,KAQFC,EARE,OASGzC,mBAASgC,GATZ,mBAStB5D,EATsB,KASZsE,EATY,OAUe1C,mBAASiC,GAVxB,mBAUtBU,EAVsB,KAUNC,EAVM,KAY7BC,qBAAU,WACRD,EAAkBX,KACjB,CAACA,IAEJY,qBAAU,WACRH,EAAYV,KACX,CAACA,IAEJ,IAAMc,EAAyBC,uBAC7B,SAACC,GACCJ,EAAkBI,EAAMC,OAAOC,OACZ,SAAfF,EAAMG,MACRjB,EAAmB,CACjBrD,KAAMmE,EAAMC,OAAOC,MACnB9E,eAIN,CAACA,EAAU8D,IAGPkB,EAAmBL,uBACvB,SAACC,EAAOK,GACNZ,GAAsB,GACtBC,EAAYW,GACZnB,EAAmB,CACjBrD,KAAM8D,EACNvE,SAAUiF,MAGd,CAACV,EAAgBT,IAGboB,EAAeP,uBAAY,WAC/B,OAAOQ,MAAMC,OAAOC,OAAOrG,aAAW,SAACsG,GAAD,OACpC,gBAACC,EAAA,EAAD,CAAcD,IAAKA,EAAKR,MAAOQ,GAC5BA,QAGJ,IAEGE,EAAmBb,uBACvB,SAACc,GACC,IAAIC,EACJ,IACEA,EAAQ,IAAIC,OAAOF,EAAEZ,OAAOC,MAAO,KACnC,MAAOc,GACP,OAAOV,IAET,MAA0B,KAAnBO,EAAEZ,OAAOC,MAAeI,IAAeW,QAAO,SAACC,GAAD,OAAWJ,EAAMK,KAAKD,EAAME,MAAMlB,UAAUI,MAEnG,CAACA,IAGGe,EAAyBtB,uBAAY,SAACuB,GAAD,OAAY7B,EAAsB6B,KAAS,IAEtF,OACE,gBAAC,EAAD,CACEtD,MAAOA,EACPF,eAAgBA,EAChBG,SAAUA,EACVF,KACE,uBAAKN,UAAU,wBACb,uBAAKA,UAAU,mBACb,6BAAQqB,GACR,yBACEqB,KAAK,OACL5B,GAAG,kBACHH,yBAAuB,uBACvB8B,MAAOP,EACP4B,SAAUzB,EACV0B,OAAQ1B,EACRrC,UAAU,iCACVgE,YAAa7C,KAGjB,uBAAKnB,UAAU,wBACb,6BAAQsB,GACR,gBAAC2C,EAAA,EAAD,CACEC,OAAO,4BACPC,QAASC,IAAcC,UACvBC,mBAAoB3C,EAAKzE,OACzBqH,SAAUX,EACVY,SAAU7B,EACV8B,SAAUtB,EACVU,OAAQ9B,EACR2C,WAAY/G,EACZgH,iBAAe,EACfC,4BAA6BjD,EAAKzE,QAEjC2F,QAMRzC,I,kBCzIMyE,EAAiD,SAAC,GAOxD,IANLzE,EAMI,EANJA,SACA0E,EAKI,EALJA,OAKI,IAJJC,iBAII,MAJQ,EAIR,EAHJC,EAGI,EAHJA,SACAC,EAEI,EAFJA,uBACAC,EACI,EADJA,MAEMC,EAA0B,SAAXL,EAAoB,EAAIA,EAEvCM,EAAiBC,mBACrB,kBACE,uBAAKrF,UAAU,eACb,uBAAKA,UAAU,uCACb,uBAAKA,UAAU,qCAIrB,IAGIsF,EAAehD,uBAAY,SAACc,EAAGmC,GAAJ,OAAaN,EAAuBM,EAAKC,KAAKN,SAAQ,CAACD,IAExF,OACE,gBAAC,eAAD,CACEjF,UAAS,UAAgB,SAAX8E,EAAoB,0BAA4B,IAC9DI,MAAOA,EACPJ,OAAQK,EACRM,eAAgB,CAACT,EAAUD,GAC3BW,KAAK,IACLJ,aAAcA,EACdK,OAAQP,GAEPhF,ICvCMwF,EAAqE,SAAC,GASpD,IAR7BC,EAQ4B,EAR5BA,IACAC,EAO4B,EAP5BA,QACAnI,EAM4B,EAN5BA,SAM4B,IAL5BS,YAK4B,MALrB+C,EAKqB,EAJ5B4E,EAI4B,EAJ5BA,0BAI4B,IAH5BC,kBAG4B,SAF5BC,EAE4B,EAF5BA,8BACAf,EAC4B,EAD5BA,MAC4B,EAIgB3F,mBAASnB,GAJzB,mBAIrB8D,EAJqB,KAILC,EAJK,OAKwB5C,mBAAS5B,GALjC,mBAKrBuI,EALqB,KAKDC,EALC,OAMoC5G,mBAASuG,GAN7C,mBAMrBM,EANqB,KAMKC,EANL,OAOgC9G,mBAAS2F,GANhD,KADO,mBAOrBoB,EAPqB,KAOGC,EAPH,KAS5BnE,qBAAU,WAAO,IAAD,IACR9F,EAA4C,aAChDuJ,MACAzH,KAAM8D,EACNvE,SAAUuI,EACVM,UAAW3J,YAAU+I,kBACrBE,QAASM,GACJJ,GAfY,MAeEM,EAA8E,GAApC,CAAEpB,MAAOoB,IAExEN,EAAU,OACNC,QADM,IACNA,KAAgC3J,GAD1B,UAENL,OAAOyD,cAFD,iBAEN,EAAeE,4CAFT,OAEN,SAAsDtD,KACzD,CACD4F,EACAgE,EACAE,EACAJ,EACAC,EACAK,EACAT,IAGF,IAAMpE,EAAqBa,uBACzB,YAAiF,IAAD,IAA7E3E,gBAA6E,MAAlEhB,WAAS2C,UAAyD,MAA9ClB,YAA8C,MAAvC+C,EAAuC,EAC9EgB,EAAkB/D,GAClB+H,EAAsBxI,GACG,OAAzBoI,QAAyB,IAAzBA,KAA4B3H,EAAMT,KAEpC,CAACoI,IAGGU,EAAkBnE,uBAAY,SAACC,GACnC,IAAMmE,EAAiBnE,EAAMC,OAAOC,MACpC4D,EAA4BK,KAC3B,IAEGzB,EAAyB3C,uBAAY,SAAC4C,GAAD,OAAWqB,EAA0BrB,KAAQ,IAElFyB,EAAiCrE,uBACrC,SAACsE,GAAD,OACE,gBAAC,EAAD,CACE1B,MAAOoB,EACPxB,OAjDgB,GAkDhBE,SAnDe,IAoDfD,UAnDgB,GAoDhBE,uBAAwBA,GAEvB2B,KAGL,CAACN,EAAwBrB,IAGrB4B,EAAgCxB,mBAAQ,WAC5C,OACE,uBAAKrF,UAAU,6BACZ2G,EACC,gBAAC,EAAD,CACEnF,uBAAwBU,EACxBX,iBAAkB2E,EAClBzE,mBAAoBA,GAEpB,uBAAKzB,UAAU,mBACb,qBAAGA,UAAU,sCAAsCkC,GACnD,qBAAGlC,UAAU,2CAAb,IAAyDkG,EAAzD,WAMT,CAACA,EAAoBhE,EAAgBT,EAAoBkF,IAEtDG,EAAiBzB,mBACrB,kBACE,gBAAC0B,EAAA,EAAD,CACEC,aAAcZ,EACdrC,OAAQ0C,EACRQ,aAAW,iCAGf,CAACb,EAA0BK,IAG7B,OACE,uBAAKzG,UAAU,sBACXgG,EAA6C,KAAhCa,EACf,uBAAK7G,UAAU,2BAA2B8G,K,8FCvFnCI,EAAyD,SAAC,GAQhE,IAPLC,EAOI,EAPJA,cACAC,EAMI,EANJA,aACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBAGI,IAFJC,wBAEI,MAFe1K,wBAAsB2K,KAErC,EADJC,EACI,EADJA,aAEMC,EAAyBrF,uBAC7B,SAACsF,EAAwBC,GAAzB,OACEP,GAAa,SAACQ,GACZ,OAAOhF,MAAMgF,GAAgB,SAACC,GAC5B,IAAMC,EAAoBD,EAAWH,GAGrC,cAFOG,EAAWH,GAClBG,EAAWF,GAAiBG,EACrBD,UAGb,CAACT,IAGGW,EAA+B3F,uBACnC,SAAC4F,GACC,OAAO,YAAmD,IAAD,IAA/C9J,YAA+C,MAAxC,GAAwC,MAApCT,gBAAoC,MAAzBhB,WAAS2C,UAAgB,EACjDsI,EAAkBR,EAAac,GAAgCC,SACrEd,GAAgB,SAACe,GACf,IAAMC,EAAmB,YAAOD,GAIhC,OAHAC,EAAoBH,GAAaI,MAAQlK,EACzCiK,EAAoBH,GAAaC,SAAW/J,EAC5CiK,EAAoBH,GAAavK,SAAWA,EACrC0K,KAELjK,IAASwJ,GACXD,EAAuBC,EAAgBxJ,MAI7C,CAACiJ,EAAiBD,EAAcO,IAG5BY,EAAoBjG,uBACxB,SAACkG,EAAwBN,GAAzB,OACE,gBAACO,EAAA,EAAD,iBACMD,EAAOE,iBADb,CAEE1I,UAAU,iCACViD,IAAG,UAAKyE,EAAac,GAAlB,YAA6BN,KAEhC,uBAAKlI,UAAU,cAAc2I,2BAAyB,4BACnDH,EAAOF,UAId,CAACZ,IAGGkB,EAAuBtG,uBAC3B,SAACkG,GAAD,OACE,uBAAKxI,UAAU,mBAAmB2I,2BAAyB,sCACzD,qBAAG3I,UAAU,sBAAsBwI,EAAOF,OACzCE,EAAO7K,SAAW,qBAAGqC,UAAU,gCAAb,IAA8CwI,EAAO7K,SAArD,KAAsE,QAG7F,IAGIkL,EAA4BvG,uBAChC,SAACkG,EAAQN,GAAT,OACE,gBAACO,EAAA,EAAD,iBACMD,EAAOE,iBACPvB,EAAc2B,WAAWN,EAAQN,GAFvC,CAGElI,UAAS,2BAAuBwI,EAAO7K,SAAiC,KAAtB,qBAClDsF,IAAG,UAAKyE,EAAac,GAAlB,YAA6BN,KAEhC,uBAAKlI,UAAU,cAAc2I,2BAAyB,4BACnDH,EAAO7K,SACN,gBAAC,EAAD,CACE4C,MAAOgH,EACP/F,uBAAwBgH,EAAOF,MAC/B/G,iBAAkBiH,EAAO7K,SACzB8D,mBAAoBwG,EAA6BC,GACjDjF,IAAG,UAAKyE,EAAac,GAAlB,YAA6BN,IAE/BU,EAAqBJ,IAGxBI,EAAqBJ,GAEvB,qCACExI,UAAS,sBAAkBwI,EAAOO,UAAiC,GAArB,qBACzCP,EAAOO,UAAYP,EAAOQ,kBAAoB,IAEnD,uBAAKhJ,UAAU,uCACb,uBAAKA,UAAU,uCAMzB,CAACuH,EAAiBG,EAAcO,EAA8BW,EAAsBzB,IAGhF8B,EAAe3G,uBACnB,SAACkG,EAAwBN,GAAzB,OACEM,EAAOU,cAAgBX,EAAkBC,EAAQN,GAAeW,EAA0BL,EAAQN,KACpG,CAACK,EAAmBM,IAGhBM,EAAqB9D,mBACzB,kBACE8B,EAAciC,aAAaC,KAAI,SAACC,GAAD,OAC7B,gBAACC,EAAA,EAAD,eAAItG,IAAKqG,EAAYnB,UAAcmB,EAAYE,uBAC5CF,EAAYG,QAAQJ,KAAI,SAACb,EAAwBN,GAAzB,OAAiDe,EAAaT,EAAQN,YAGrG,CAACe,EAAc9B,EAAciC,eAGzBM,EAAgCrE,mBACpC,kBACE,gBAACkE,EAAA,EAAD,KACGzG,OACCqE,EAAciC,cACbK,QAAQJ,KAAI,SAACb,EAAwBN,GAAzB,OAAiDe,EAAaT,EAAQN,SAGzF,CAACe,EAAc9B,EAAciC,eAG/B,OAAO5B,IAAqB1K,wBAAsB6M,KAAO,KACvD,gBAACC,EAAA,EAAD,CAAOC,QAAM,GACVrC,IAAqB1K,wBAAsBgN,cAAgBJ,EAAgCP,I,6CC7IrFY,EAAmE,SAAC,GAI1E,IAHLC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,YAEA,OACE,gBAACC,EAAA,EAAD,CACEjG,OAAO,gCACPlE,UAAU,qBACVwE,SAAU,SAACjC,EAAO6H,GAAR,OAAmBF,EAAYE,KAExCJ,EAAqBX,KAAI,SAACgB,GAAD,OACxB,gBAACC,EAAA,EAAD,CACErH,IAAKoH,EAAeE,MACpBjC,MAAO+B,EAAeE,MACtBvK,UACE8C,QAAQuH,EAAeG,OAAO,SAACC,GAAD,OAAgB3H,WAAWmH,EAAmBQ,EAAU/H,SAClF,8BACA,IAGN,gBAACgI,EAAA,EAAD,KACGL,EAAeG,MAAMnB,KAAI,SAACoB,GAAD,OACxB,gBAACE,EAAA,EAAD,CACEhK,yBAAwB,iCAAmC8J,EAAUrM,KACrE6E,IAAKwH,EAAU/H,KACf0H,OAAQK,EAAU/H,KAClBkI,YAAa9H,WAAWmH,EAAmBQ,EAAU/H,OAEpD+H,EAAUrM,gBCNdyM,EAA2D,SAAC,GAclE,IAbLC,EAaI,EAbJA,aACA1D,EAYI,EAZJA,aACAC,EAWI,EAXJA,gBACAC,EAUI,EAVJA,aACAyD,EASI,EATJA,wBACAC,EAQI,EARJA,qBACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,iBACAC,EAKI,EALJA,oBACAC,EAII,EAJJA,mBACApB,EAGI,EAHJA,qBACAqB,EAEI,EAFJA,8BAEI,IADJC,8BACI,MADqB,iBAAO,IAC5B,EACE5J,EAAgBtC,qBAAW8B,GAD7B,EAGkD3B,mBAASwL,GAH3D,mBAGGQ,EAHH,KAGwBC,EAHxB,OAI4CjM,mBAASyL,GAJrD,mBAIGS,EAJH,KAIqBC,EAJrB,KAMJtJ,qBAAU,WACRoJ,EAAuBT,KACtB,CAACA,IAEJ3I,qBAAU,WACRsJ,EAAoBV,KACnB,CAACA,IAEJ,IAAMW,EAAe,SAAoBC,EAAeC,EAAejF,GACrE,MAAM,GAAN,mBAAWgF,EAASE,MAAM,EAAGD,IAA7B,CAAqCjF,GAArC,YAAiDgF,EAASE,MAAMD,MAG5DE,EAAc,SAAoBH,EAAeC,EAAejF,GACpE,MAAM,GAAN,mBAAWgF,EAASE,MAAM,EAAGD,EAAQ,IAArC,CAAyCjF,GAAzC,YAAqDgF,EAASE,MAAMD,EAAQ,MAGxEG,EAAW,SAAoBJ,EAAeC,GAClD,MAAM,GAAN,mBAAWD,EAASE,MAAM,EAAGD,IAA7B,YAAwCD,EAASE,MAAMD,EAAQ,MAW3DI,EAAiE3J,uBACrE,SAAC4J,GACC,IAAMC,EAAa,UAAMrB,GAAN,OAAqBoB,GAExC,OADgCpJ,OAAOsE,EAAc,CAAEe,SAAUgE,IAChCF,EAAgCC,EAAY,GAAKC,IAEpF,CAACrB,EAAc1D,IAGXgF,EAA8B9J,uBAClC,SAAC9E,GACC,MAAO,CACL2K,SAAU8D,EAAgCzO,EAAQ6O,QAClD/D,MAAO2D,EAAgCzO,EAAQ6O,QAC/C1O,SAAUhB,WAAS2C,aAGvB,CAAC2M,IAGGK,EAAoBhK,uBACxB,SAACiK,GACC,OAAQA,GACN,KAAKxP,iBAAeyP,iBAClBnF,GAAgB,SAACe,GAAD,OACduD,EAAavD,EAAkBmD,EAAqBa,EAA4BhE,OAElF,MACF,KAAKrL,iBAAe0P,kBAClBpF,GAAgB,SAACe,GAAD,OACd2D,EAAY3D,EAAkBmD,EAAqBa,EAA4BhE,OAEjF,MACF,KAAKrL,iBAAe2P,aAClBrF,GAAgB,SAACe,GAAD,OAAsB4D,EAAS5D,EAAkBmD,MACjE,MACF,KAAKxO,iBAAe4P,eAClBrF,GAAa,SAACsF,GAAD,OAAmBjB,EAAaiB,EAAenB,EAAkBR,QAC9E,MACF,KAAKlO,iBAAe8P,eAClBvF,GAAa,SAACsF,GAAD,OAAmBb,EAAYa,EAAenB,EAAkBR,QAC7E,MACF,KAAKlO,iBAAe+P,UAClBxF,GAAa,SAACsF,GAAD,OAAmBZ,EAASY,EAAenB,MACxD,MACF,KAAK1O,iBAAegQ,SAClBzF,GAAa,SAACsF,GAAD,OAtDehB,EAsDYgB,EAtDGf,EAsDYJ,EArDvD,GAAN,mBACKG,EAASE,MAAM,EAAGD,IADvB,CAEEP,EAAuBM,EAASC,KAFlC,YAGKD,EAASE,MAAMD,EAAQ,KAJd,IAAoBD,EAAeC,KAwD/CV,GAAoB,KAGtB,CACEA,EACA9D,EACAC,EACAiE,EACAa,EACAX,EACAR,IAIJ,OAAO5F,mBACL,0BACE,gBAAC3E,EAAA,EAAD,CACEV,UAAU,gBACVgN,cAAY,EACZC,WAAW,EACXpM,SAAU,EACVD,SAAU,QACVsM,UAAWhC,EACXiC,YAAa,kBAAMhC,GAAoB,IACvCiC,WAAY,SAACC,GAAD,cAAkBA,QAAlB,IAAkBA,OAAlB,EAAkBA,KAC9BtM,UAAW,kBAAMqK,GACjB5K,SAAQ,oBAAEkB,EAAcE,gCAAhB,aAAE,EAAwCC,eAA1C,aAAqDC,EAC7Db,YACE,gBAAC,EAAD,CACE+I,qBAAsBA,EACtBC,kBAAmBoB,EACnBnB,YAAaoC,QAKrB,CACEpB,EACAxJ,EAAcE,yBACdoI,EACAqB,EACAiB,EACAnB,EACAC,KCpHOkC,EAA8B,wBAE9BC,EAA6C,SAAC,GAkBxC,IAjBjBC,EAiBgB,EAjBhBA,QACApN,EAgBgB,EAhBhBA,SAgBgB,IAfhB0K,oBAegB,MAfD,UAeC,EAdhBvD,EAcgB,EAdhBA,gBACAkG,EAagB,EAbhBA,gBACAC,EAYgB,EAZhBA,aACAC,EAWgB,EAXhBA,kBAWgB,IAVhB1C,mBAUgB,MAVF,iBAAO,IAUL,EAThB2C,EASgB,EAThBA,YACAnP,EAQgB,EARhBA,KACAjB,EAOgB,EAPhBA,QACAwM,EAMgB,EANhBA,qBACAxC,EAKgB,EALhBA,iBAKgB,IAJhBqG,+BAIgB,aAHhBC,iBAGgB,MAHJ,SAACC,GAAD,OAASA,EAAIjN,IAGT,MAFhB4G,oBAEgB,MAFD,SAACc,GAAD,OAAYA,EAAO1H,IAElB,EADhBwK,EACgB,EADhBA,uBAKM0C,EAAWC,iBAAyB,MAEpCvM,EAAgBtC,qBAAW8B,GANjB,EAQwB3B,mBAAS,CAAC,aAE9C+I,MAT0B,IAU1BH,SAV0B,IAW1BjD,MAAO,GACPF,SAAU,GACVkJ,iBAAiB,EACjBhF,eAAe,EACfiF,YAAY,GACRN,EACA,CACErQ,QAAS,CACP,CACE8K,MAnBmB,IAoBnBH,SApBmB,IAqBnBnD,SAAU,GACVE,MAAO,GACPgJ,iBAAiB,EACjBhF,eAAe,EACfiF,YAAY,KAIlB,KAvBwC,mBAyB3C3Q,KAjCW,mBAQT4J,EARS,KAQKC,EARL,OAmCkB9H,mBAASd,GAnC3B,mBAmCT2P,EAnCS,KAmCE9G,EAnCF,OAoCgC/H,oBAAS,GApCzC,mBAoCT2L,EApCS,KAoCSC,EApCT,OAqCoC5L,mBAAS/C,SAAS8D,MArCtD,mBAqCT8K,GArCS,KAqCWiD,GArCX,QAsC0D9O,mBACxEuD,SAAS/F,kBAAgBsM,KAAI,SAACoB,GAAD,OAAe6D,SAAS7D,EAAU8D,gBAvCjD,qBAsCTlD,GAtCS,MAsCsBmD,GAtCtB,SAyC8CjP,oBAAU,GAzCxD,qBAyCTwL,GAzCS,MAyCgB0D,GAzChB,SA0CwClP,oBAAU,GA1ClD,qBA0CTyL,GA1CS,MA0Ca0D,GA1Cb,MA4CVC,GAAerM,uBAAY,SAACsM,EAAkBC,EAAkBpM,GACpE6E,GAAa,SAACQ,GACZ,IAAMgH,EAAiB,YAAOhH,GAE9B,OADAgH,EAAkBF,GAAUC,GAAYpM,EACjCqM,OAER,IAEGC,GAAczM,uBAClB,SAACsM,EAAkBI,GACA,OAAjBrB,QAAiB,IAAjBA,KAAoBiB,EAAUI,GAC9B1H,GAAa,SAACQ,GACZ,IAAMmH,EAAW,YAAOnH,GAExB,OADAmH,EAAYL,GAAYI,EACjBC,OAGX,CAACtB,IAGGuB,GAAgB,CACpBlK,SAAU,IACVE,MAAO,IACPiK,KAAM7M,uBAAY,SAAC8M,GACjB,IAAM5G,EAAS4G,EAAQ5G,OACvB,OAAIA,EAAOU,cACFkG,EAAQ3M,MAERmL,EAAcA,EAAYpF,EAAO1H,IAAIsO,GC9IoB,SAAC,GAK/C,IAJjBC,EAIgB,EAJvB5M,MACOoJ,EAGgB,EAHvBkC,IAAOlC,MACG/K,EAEa,EAFvB0H,OAAU1H,GACV6N,EACuB,EADvBA,aACuB,EACGzP,WAAemQ,GADlB,mBAChB5M,EADgB,KACT6M,EADS,KAGvBlN,qBAAU,WACRkN,EAASD,KACR,CAACA,IAEJ,IAAMvL,EAAWxB,uBAAY,SAACc,GAC5BkM,EAASlM,EAAEZ,OAAOC,SACjB,IAEGsB,EAASzB,uBAAY,WACzBqM,EAAa9C,EAAO/K,EAAI2B,KACvB,CAAC3B,EAAI+K,EAAOpJ,EAAOkM,IAEtB,OAAO,4BAAUlM,MAAOA,GAAS,GAAIqB,SAAUA,EAAUC,OAAQA,ID0HJwL,CAAaH,KAIrE,KAGCI,GAAyB,SAAChN,GAC9B,IAAMiN,EAAkCjN,EAAOkN,QAAQ,WAAa1B,EAASnM,QACvE8N,GAAiCnN,EAAOoN,UAAUC,SAASvC,GACjE,OAAOmC,GAAmCE,GAGtCG,GAA0B,SAACtN,EAAqB0F,GAAyB,IAAD,IAC5EmG,GAAsB7L,GACtB,UAAAd,EAAcqO,sCAAd,cAAArO,GAA+C,GAC/CyJ,GAAoB,GACpB,UAAAzJ,EAAcsO,yCAAd,cAAAtO,GAAkD,kBAAMyJ,KACxDsD,GAA2BvG,IAuCvBf,GAAgB8I,mBACpB,CACEzS,QAAS4J,EACT7B,KAAM6I,EACNc,iBACAP,gBACAI,eACAjG,WA3Ce,SAACN,EAAwBN,GAAzB,MAAkD,CACnEgI,cAAe,SAAC9M,GACd,IAAMZ,EAASY,EAAEZ,OACX2N,GAA8B3H,EAAO4H,uBACvCZ,GAAuBhN,IAAW2N,IACpC/M,EAAEiN,iBACF7B,GAAiC,CAC/BzR,iBAAeyP,iBACfzP,iBAAe0P,mBAFe,mBAG1BrF,EAAaiF,OAAS,GAAKnE,EAAc,EAAI,CAACnL,iBAAe2P,cAAgB,MAEnFoD,GAAwBtN,EAAQ0F,OAiClCoI,WA5Be,SAACpI,EAAqB0G,GAAtB,MAA4C,CAC7DsB,cAAe,SAAC9M,GACd,IAAMZ,EAASY,EAAEZ,OACbgN,GAAuBhN,KACzBY,EAAEiN,iBACF7B,GAAiC,CAC/BzR,iBAAeyP,iBACfzP,iBAAe0P,mBAFe,mBAG1BrF,EAAaiF,OAAS,GAAKnE,EAAc,EAAI,CAACnL,iBAAe2P,cAAgB,IAHnD,CAI9B3P,iBAAe4P,eACf5P,iBAAe8P,gBALe,YAM1BuB,EAAU/B,OAAS,EAAI,CAACtP,iBAAe+P,WAAa,IAN1B,CAO9B/P,iBAAegQ,YAEjB+C,GAAwBtN,EAAQ0F,GAChCwG,GAAwBE,QAe5B2B,iBACAC,oBAGFpO,qBAAU,WACO,OAAfqL,QAAe,IAAfA,KAAkBrG,EAAa0E,MAAM,MACpC,CAAC2B,EAAiBrG,IAErBhF,qBAAU,WACI,OAAZsL,QAAY,IAAZA,KAAeU,KACd,CAACV,EAAcU,IAElB,IAAMqC,GAAsB,SAAtBA,EAAuBjT,EAA2B2K,EAAkBuI,GACxE,IAAMxI,EAAcpF,YAAYtF,EAAS,CAAE2K,aAC3C,GAAID,GAAe,EAAG,CACpB,IAAMyI,EAAa,eAAQnT,EAAQ0K,IACnCyI,EAAczL,MAAQwL,EACtBlT,EAAQoT,OAAO1I,EAAa,EAAGyI,QAE/B7N,UAAUtF,GAAS,SAACgL,GAAD,OAAYiI,EAAoBjI,EAAOhL,QAAS2K,EAAUuI,OAI3EG,GACoD,OAAxD1J,GAAc2J,MAAMC,eAAeC,mBAClClO,UAAUqE,GAAc2J,MAAMC,eAAeE,cAChD7O,qBAAU,WACJyO,IACFxJ,GAAgB,SAACe,GAIf,OAHAtF,UAAUqE,GAAc2J,MAAMC,eAAeE,cAAc,SAACC,EAAoB/I,GAArB,OACzDsI,GAAoBrI,EAAsCD,EAAU+I,MAE/D,YAAI9I,QAKd,CAACyI,KAEJ,IAAMM,GAAoB9L,mBACxB,kBACE,gBAACkE,EAAA,EAAD,CAAIvJ,UAAU,0BACZ,gBAACoR,EAAA,EAAD,CAAIC,KAAK,OAAOrR,UAAU,cACxB,4BAFJ,OAIGI,QAJH,IAIGA,OAJH,EAIGA,EAAUiJ,KAAI,SAAC5F,EAAO6N,GACrB,OACE,gBAACF,EAAA,EAAD,CACEC,KAAK,OACLpO,IAAKqO,EACLtR,UAAU,wBACVuR,MAAO,CACLrM,MAAOiC,GAAcqK,WAAWF,EAAa,GAAGpM,MAChDF,SAAUmC,GAAcqK,WAAWF,EAAa,GAAGtM,WAGpDvB,SAMX,CAACrD,EAAU+G,GAAcqK,aAG3B,OACE,uBAAKxR,UAAS,0BAAqBwN,IACjC,gBAACiE,EAAA,EAAD,eAAiBtN,QAAQ,WAAcgD,GAAcuK,gBAArD,CAAsEC,IAAK3D,IACzE,gBAAC,EAAD,CACE7G,cAAeA,GACfI,gBAAiBA,EACjBC,iBAAkBA,EAClBJ,aAAcA,EACdC,gBAAiBA,EACjBC,aAAcA,EACdI,aAAcA,IAEhB,gBAACkK,EAAA,EAAD,eACE5R,UAAS,UAAKwH,IAAqB1K,wBAAsB6M,KAAO,iBAAmB,KAC/ExC,GAAc0K,qBAEjB1K,GAAc1I,KAAK4K,KAAI,SAAC0E,EAAUa,GAEjC,OADAzH,GAAc2K,WAAW/D,GAEvB,gBAACxE,EAAA,EAAD,eACEvJ,UAAU,aACN+N,EAAIgE,cAFV,CAGE9O,IAAG,UAAK6K,EAAUC,GAAf,YAAuBa,GAC1B1K,OAAQ,kBAAoB0K,IAE3Bb,EAAIiE,MAAM3I,KAAI,SAAC4I,EAAYC,GAAb,OACb,gBAACd,EAAA,EAAD,iBACqB,IAAdc,EAAkB,GAAKD,EAAKE,eAC7BhL,GAAcmJ,WAAW4B,EAAWtD,GAF1C,CAGE3L,IAAG,UAAKyE,EAAauK,EAAKzJ,QAAvB,YAAkC0J,GACrCvR,yBAAwB,qBAAuBuR,EAC/ClS,UAAyB,IAAdkS,EAAkB,eAAiB,cAE/B,IAAdA,EAAkBtD,EAAW,EAAIqD,EAAKG,OAAO,gBAMvDhS,EAAW+Q,GAAoB,OAGnCjG,EACC,gBAAC,EAAD,CACE9D,aAAcA,EACdC,gBAAiBA,EACjBC,aAAcA,EACdwD,aAAcA,EACdd,qBAAsBA,EACtBe,wBAAyBA,GACzBC,qBAAsBA,GACtBC,YAAaA,EACbC,iBAAkBA,EAClBC,oBAAqBA,EACrBE,8BAA+BA,GAC/BD,mBAAoBA,GACpBE,uBAAwBA,IAExB,OE7UG+G,EAA6D,SAACC,GACzE,IACQ3Q,EAASxC,yCAATwC,KAEFqI,EAAuB,CAC3B,CACEO,MAAO5I,EAAKnE,QACZgN,MAAO,CACL,CAAEpM,KAAMuD,EAAKvE,iBAAiBE,WAAYoF,KAAM3F,iBAAeyP,kBAC/D,CAAEpO,KAAMuD,EAAKvE,iBAAiBG,YAAamF,KAAM3F,iBAAe0P,mBAChE,CAAErO,KAAMuD,EAAKvE,iBAAiBC,OAAQqF,KAAM3F,iBAAe2P,gBAG/D,CACEnC,MAAO5I,EAAKlD,KACZ+L,MAAO,CACL,CAAEpM,KAAMuD,EAAKrD,cAAcC,YAAamE,KAAM3F,iBAAe4P,gBAC7D,CAAEvO,KAAMuD,EAAKrD,cAAcE,YAAakE,KAAM3F,iBAAe8P,gBAC7D,CAAEzO,KAAMuD,EAAKrD,cAAcjB,OAAQqF,KAAM3F,iBAAe+P,cAlB4C,EAuBlEvN,wBACZuC,IAA1BwQ,EAAc9U,QACV,CAAC,CAAEY,KAxBiB,WAwBQT,SAAUhB,WAAS2C,YAC/CgT,EAAc9U,SA1BsF,mBAuBnG4J,EAvBmG,KAuBrFC,EAvBqF,OA6BxE9H,wBAAgCuC,IAAvBwQ,EAAc7T,KAAqB,CAAC,IAAM6T,EAAc7T,MA7BO,mBA6BnG2P,EA7BmG,KA6BxF9G,EA7BwF,KA+B1GlF,qBAAU,WAAO,IAAD,MACR9F,EAAoB,2BACrBgW,GADqB,IAExB9U,QAAS4J,EACT3I,KAAM2P,IAERkE,EAActM,WAAd,UACIsM,EAAcrM,qCADlB,OACI,OAAAqM,EAA8ChW,GADlD,UAEIL,OAAOyD,cAFX,iBAEI,EAAeG,6CAFnB,OAEI,SAAuDvD,KAC1D,CAACgW,EAAelL,EAAcgH,IAEjC,IAAMmE,EAA4BjQ,uBAChC,kBACEQ,MACEsE,GACA,SAACoB,GAAD,oBAEIF,MAAOE,EAAOpK,KACd+J,SAAUK,EAAOpK,KACjBT,SAAU6K,EAAO7K,UACb6K,EAAOtD,MAAQ,CAAEA,MAAOsD,EAAOtD,OAAU,SAGrD,CAACkC,IAGGoL,EAAkBlQ,uBACtB,SAAC9E,GAAD,OACE6J,EACEvE,MAAMtF,GAAS,SAACiV,GAAD,MAAqC,CAClDrU,KAAMqU,EAAetK,SACrBxK,SAAU8U,EAAe9U,SACzBuH,MAAOuN,EAAevN,aAG5B,IAGIwN,EAAyBpQ,uBAC7B,kBACEQ,MAAMsL,GAAW,SAACL,GAAD,OACfjL,SACEsE,GACA,SAACuL,EAAsBnK,EAAQN,GAE7B,OADAyK,EAASnK,EAAOpK,MAAQ2P,EAAI7F,IAAgB,GACrCyK,IAET,SAGN,CAACvL,EAAcgH,IAGXwE,EAAetQ,uBACnB,SAAC7D,GAAD,OACE6I,EACExE,MAAMrE,GAAM,SAACkU,GAAD,OACV7P,SACEsE,GACA,SAAC2G,EAAevF,GAEd,OADAuF,EAAI8E,KAAMF,EAASnK,EAAOpK,OAAqB,IACxC2P,IAET,UAIR,CAAC3G,IAGH,OACE,uBAAKpH,UAAU,uBACb,gBAAC,EAAD,CACE8K,aAAa,UACbvD,gBAAiB5F,EAAK5D,aACtBP,QAAS+U,IACT9T,KAAMiU,IACNjF,gBAAiB+E,EACjB9E,aAAckF,EACd5I,qBAAsBA,MCzGjB8I,G,cAA+E,SAAC,GAItF,IAHLC,EAGI,EAHJA,WACA9M,EAEI,EAFJA,8BACA+M,EACI,EADJA,sBAEMC,EAAyBhF,iBAAuB,MAEhDiF,EAAkBjF,iBAAO8E,GAEzBI,OAAuDrR,IAAzBiR,EAAWvM,UAC/CpE,qBAAU,WACR8Q,EAAgBrR,QAAUiB,OAAOiQ,EAAY,gBAG5C,CAACI,IAEJ,IAAMC,EAA0B9Q,uBAAY,WAC1C,OAAO2Q,EAAuBpR,UAC7B,IAEGwR,EAAsB/Q,uBAC1B,SAACkE,GACC0M,EAAgBrR,QAAQ2E,UAAYA,EACpCP,EAA8BnD,OAAOoQ,EAAgBrR,QAAS,iBAEhE,CAACoE,IAGGqN,EAAuBhR,uBAAY,WACvC4Q,EAAgBrR,QAAQ2E,UAAY3J,YAAUyC,UACzB,OAArB0T,QAAqB,IAArBA,OACA/M,EAA8BnD,OAAOoQ,EAAgBrR,QAAS,iBAC7D,CAACmR,EAAuB/M,IAE3B,OACE,uBAAKjG,UAAU,mBAAmB2R,IAAKsB,GACrC,gBAAC,EAAD,CACEjN,YAAY,EACZC,8BAA+BA,EAC/B1J,mBAAoB2W,EAAgBrR,QACpCwR,oBAAqBA,EACrBC,qBAAsBA,EACtBC,gBAAiBH,OC7CZI,EAAuF,SAAC,GAI9F,IAHLjO,EAGI,EAHJA,KACOsG,EAEH,EAFJkC,IAAOlC,MACPkD,EACI,EADJA,YAEMrR,EAAe6H,EAAKsG,GAEpBqH,EAAkBjF,iBAAO,aAC7BpI,IAAKnI,EAAawV,gBAAgBrN,KAC/BnI,EAAawV,kBAGZC,OAAyErR,IAA3CpE,EAAawV,gBAAgB1M,UACjEpE,qBAAU,WACR8Q,EAAgBrR,QAAUnE,EAAawV,gBACvCnE,EAAYlD,EAAD,YAAC,eAAYnO,GAAb,IAA2BwV,gBAAiBA,EAAgBrR,aAGtE,CAACsR,IAEJ,IAAMlN,EAAgC3D,uBAAY,SAACyQ,GACjDG,EAAgBrR,QAAUkR,EAC1BhE,EAAYlD,EAAD,YAAC,eAAYnO,GAAb,IAA2BwV,gBAAiBH,OAGtD,IAEH,OACE,uBAAK/S,UAAU,iCACb,gBAAC,EAAD,CACE+S,WAAYG,EAAgBrR,QAC5BoE,8BAA+BA,EAC/B+M,sBAAuBtV,EAAasV,0BC5B/BS,G,OAAmE,SAAC,GAI1E,IAHLrV,EAGI,EAHJA,KACAT,EAEI,EAFJA,SACA+V,EACI,EADJA,qBAEQ/R,EAASxC,yCAATwC,KADJ,EAG8BpC,mBAASnB,GAHvC,mBAGGuV,EAHH,KAGcC,EAHd,OAKsCrU,mBAAS5B,GAL/C,mBAKGkW,EALH,KAKkBC,EALlB,KAOJ1R,qBAAU,WACRwR,EAAaxV,KACZ,CAACA,IAEJgE,qBAAU,WACR0R,EAAiBnW,KAChB,CAACA,IAEJ,IAAMoW,EAA8BzR,uBAClC,YAAyB,IAAtBlE,EAAqB,EAArBA,KAAMT,EAAe,EAAfA,SACPiW,EAAaxV,GACb0V,EAAiBnW,GACjB+V,EAAqBtV,EAAMT,KAE7B,CAAC+V,IAGH,OACE,uBAAK1T,UAAU,cACb,gBAAC,EAAD,CACEO,MAAOoB,EAAK9D,iBACZ2D,uBAAwBmS,EACxBpS,iBAAkBsS,EAClBpS,mBAAoBsS,GAEpB,uBAAK/T,UAAU,oBACb,qBAAGA,UAAU,gCAAgCO,MAAOoT,GACjDA,GAEH,qBAAG3T,UAAU,qCAAqCO,MAAOsT,GAAzD,IACIA,EADJ,UC7CGG,EAA2E,SAAC,GAIlF,IAHLzO,EAGI,EAHJA,KACOsG,EAEH,EAFJkC,IAAOlC,MACPkD,EACI,EADJA,YAEMrR,EAAe6H,EAAKsG,GADtB,EAG8BtM,mBAAS7B,EAAauW,WAHpD,mBAGGA,EAHH,KAGcC,EAHd,KAKJ9R,qBAAU,WACR8R,EAAaxW,EAAauW,aACzB,CAACvW,EAAauW,YAEjB,IAAMP,EAAuBpR,uBAC3B,SAAClE,EAAMT,GACLoR,EAAYlD,EAAD,YAAC,eAAYnO,GAAb,IAA2BuW,UAAW,CAAE7V,OAAMT,iBAE3D,CAACD,EAAcmO,EAAOkD,IAGxB,OACE,uBAAK/O,UAAU,2BACb,gBAAC,EAAD,CACE5B,KAAM6V,EAAU7V,KAChBT,SAAUsW,EAAUtW,SACpB+V,qBAAsBA,MCdxBS,EAA6B,iBAC7BC,EAAkCzX,WAAS2C,UAE3C+U,EAAqC,IAE9BC,EAA2D,SAAC,GAWlE,IAVLzO,EAUI,EAVJA,IAUI,IATJzH,YASI,MATG+V,EASH,MARJxW,gBAQI,MAROyW,EAQP,EAPJrO,EAOI,EAPJA,0BACAwO,EAMI,EANJA,eAMI,IALJC,cAKI,MALK,GAKL,MAJJC,sBAII,MAd+B,IAc/B,MAHJC,4BAGI,MAHmBL,EAGnB,MAFJrO,kBAEI,SADJC,EACI,EADJA,8BAEQtE,EAASxC,yCAATwC,KAEFqI,EAAkD,CACtD,CACEO,MAAO5I,EAAKjE,aACZ8M,MAAO,CACL,CAAEpM,KAAMuD,EAAKrD,cAAcC,YAAamE,KAAM3F,iBAAe4P,gBAC7D,CAAEvO,KAAMuD,EAAKrD,cAAcE,YAAakE,KAAM3F,iBAAe8P,gBAC7D,CAAEzO,KAAMuD,EAAKrD,cAAcjB,OAAQqF,KAAM3F,iBAAe+P,WACxD,CAAE1O,KAAMuD,EAAKrD,cAAcnB,MAAOuF,KAAM3F,iBAAegQ,aAKvDiG,EAAwB1Q,uBAAY,WACxCqS,EAAmBN,KAClB,IAjBC,EAmB4C9U,mBAASiV,GAnBrD,mBAmBGI,EAnBH,KAmBqBC,EAnBrB,OAoB8BtV,mBAASkV,GApBvC,mBAoBGK,EApBH,KAoBcC,EApBd,OAqB0CxV,mBAASmV,GArBnD,mBAqBGM,EArBH,KAqBoBL,EArBpB,OAuB0BpV,mBAAS,CACrC,CACE+I,MAAOlK,EACP+J,SAAU/J,EACVT,WACAyS,wBAAwB,EACxB5S,QAAS,CACP,CACE8K,MAAO,OACPH,SAAU,YACViI,wBAAwB,EACxBlL,MAAO4P,EACP9P,SAjD2B,KAmD7B,CACEsD,MAAO,QACPH,SAAU,kBACViI,wBAAwB,EACxBlL,MAAO8P,EACPhQ,SAAUqP,OA1Cd,mBAuBG7W,EAvBH,KAuBYyX,EAvBZ,OAgDoB1V,mBACtBgV,GAAkB,CAChB,CACEN,UAAW,CACT7V,KAAM+V,EACNxW,SAAUyW,GAEZlB,gBAAiB,GACjBF,2BAxDF,mBAgDGvU,EAhDH,KAgDSyW,EAhDT,KA6DEzH,EAAkBnL,uBACtB,YAA2C,IAAD,IAAxC6S,EAAwC,oBACf,OAAzBpP,QAAyB,IAAzBA,KAA4BoP,EAAiB7M,MAAO6M,EAAiBxX,UACrEgX,EAAkB,UAAC7R,OAAOqS,EAAiB3X,QAAS,CAAE2K,SAAU,2BAA9C,aAAC,EAAmEjD,OACtF6P,EAAY,UAACjS,OAAOqS,EAAiB3X,QAAS,CAAE2K,SAAU,qBAA9C,aAAC,EAA6DjD,OAC1E+P,GAAW,gBAAEG,EAAF,0BAA4B,CAAC,2BAEjCA,GAFgC,IAGnC9M,MAAO6M,EAAiB7M,MACxBH,SAAUgN,EAAiBhN,SAC3BxK,SAAUwX,EAAiBxX,iBAIjC,CAACoI,IAGGsP,GAAgE/S,uBACpE,SAAC4J,GACC,IAAMC,EAAa,uBAAmBD,GAEtC,OAD+BpJ,OAAOrE,EAAM,CAAEwV,UAAW,CAAE7V,KAAM+N,KACjCkJ,GAA+BnJ,EAAY,GAAKC,IAElF,CAAC1N,IAGGwM,GAAc3I,uBAClB,iBAAO,CACL2R,UAAW,CACT7V,KAAMiX,GAA+B5W,EAAK4N,QAC1C1O,SAAUhB,WAAS2C,WAErB4T,gBAAiB,GACjBF,2BAEF,CAACqC,GAAgCrC,EAAuBvU,EAAK4N,SAGzDiJ,GAAwBhT,uBAAY,SAACyL,GAAD,OAAeA,EAAIwH,SAAgCtB,UAAU7V,OAAM,IAEvGoX,GAAsBlT,uBAAY,WACtC,OAAO0D,EAAalJ,wBAAsBgN,cAAgBhN,wBAAsB2K,OAC/E,CAACzB,IAEEsF,GAAyBhJ,uBAAY,SAACyL,GAC1C,MAAO,CAAEkG,UAAWlG,EAAIkG,UAAWf,gBAAiB,CAAErN,IAAMkI,EAAImF,gBAAoCrN,QACnG,IAmBH,OAjBAzD,qBAAU,WAAO,IAAD,IACP+S,EADO,YACa3X,EADb,MAERiY,EAA+B,yBACnC5P,MACAW,UAAW3J,YAAU6Y,QACrBtX,KAAM+W,EAAiBhN,SACvBxK,SAAUwX,EAAiBxX,SAC3B4W,eAAgB9V,EAChB+V,OAAQ1R,OAAO8R,EAAkB,eAC7BE,EApI2B,IAoIgB,CAAEL,eAAgBK,GAAc,IAC3EE,EAAkBX,EAAqC,CAAEK,qBAAsBM,GAAoB,IAEzGhP,EAAU,OACNC,QADM,IACNA,KAAgCnD,OAAO2S,EAAmB,CAAC,OAAQ,cAD7D,UAENxZ,OAAOyD,cAFD,iBAEN,EAAeI,4CAFT,OAEN,SAAsD2V,KACzD,CAACjY,EAASwI,EAAYC,EAA+BxH,EAAMmW,EAAkBE,EAAWE,EAAiBnP,IAG1G,uBAAK7F,UAAS,6BAAwB6F,IACpC,gBAAC,EAAD,CACE2H,QAAS3H,EACTgI,yBAAyB,EACzBrG,iBAAkBgO,KAClB5H,YAAa,CAAEqG,UAAWD,EAAsBd,gBAAiBM,GACjEhW,QAASA,EACTiB,KAAMA,EACNgP,gBAAiBA,EACjBxC,YAAaA,GACbyC,aAAcwH,EACdlL,qBAAsBA,EACtB8D,UAAWwH,GACXhK,uBAAwBA,IAExB,uBAAKtL,UAAU,kBAAf,YACA,gBAAC,EAAD,CACE+S,WAAY6B,EACZ3O,8BAA+B4O,EAC/B7B,sBAAuBA,O,8BCrLpB2C,EAAuE,WAClF,OAAO,8CCkBIC,G,OAAqD,SAAC,GAMjD,IALhB5P,EAKe,EALfA,WACAwE,EAIe,EAJfA,MACAvE,EAGe,EAHfA,8BACAJ,EAEe,EAFfA,IAEe,IADfX,aACe,MARiB,IAQjB,EACPvD,EAASxC,yCAATwC,KAEFqI,EAAkD,CACtD,CACEO,MAAO5I,EAAKlD,KACZ+L,MAAO,CACL,CAAEpM,KAAMuD,EAAKrD,cAAcC,YAAamE,KAAM3F,iBAAe4P,gBAC7D,CAAEvO,KAAMuD,EAAKrD,cAAcE,YAAakE,KAAM3F,iBAAe8P,gBAC7D,CAAEzO,KAAMuD,EAAKrD,cAAcjB,OAAQqF,KAAM3F,iBAAe+P,WACxD,CAAE1O,KAAMuD,EAAKrD,cAAcnB,MAAOuF,KAAM3F,iBAAegQ,aAKvD8I,EAA4B,iBAAO,CAAErP,UAAW3J,YAAU+I,oBAE1DkQ,EAAY7H,iBAChBnL,UAAU0H,GACN,CACE,CACE0I,gBAAiB2C,MAGrB/S,MAAM0H,GAAO,SAACuL,GAAD,MAAW,CAAE7C,gBAAiB6C,OAG3CC,EAAsB/H,iBAAO/I,GAE7B+Q,EAAqB3T,uBAAY,SAACyL,GAAD,OAAeA,EAAIwH,SAAgCrC,gBAAgBrN,MAAM,IAE1GoF,EAAc3I,uBAClB,iBAAO,CACL4Q,gBAAiB2C,OAEnB,IAGIK,EAAiC5T,uBAAY,WAAO,IAAD,IACjDmT,EAA4B,yBAChC5P,OAhD4B,MAiDxBmQ,EAAoBnU,QAAwC,CAAEqD,MAAO8Q,EAAoBnU,SAAY,IAFzE,IAGhC2E,UAAW3J,YAAUsZ,KACrB3L,MAAO1H,MAAMgT,EAAUjU,SAAS,SAACuU,GAAD,OAA0BA,EAASlD,qBAErElN,EAAU,OACNC,QADM,IACNA,KAAgCwP,GAD1B,UAENxZ,OAAOyD,cAFD,iBAEN,EAAeK,yCAFT,OAEN,SAAmD0V,KACtD,CAACzP,EAAYC,EAA+BJ,IAEzC6H,EAAepL,uBACnB,SAAC7D,GACCqX,EAAUjU,QAAUpD,EACpByX,MAEF,CAACA,IAGG5K,EAAyBhJ,uBAAY,SAACyL,GAC1C,MAAO,CAAEmF,gBAAiB,CAAErN,IAAMkI,EAAImF,gBAAoCrN,QACzE,IAEGZ,EAAyB3C,uBAC7B,SAAC4C,GACC8Q,EAAoBnU,QAAUqD,EAC9BgR,MAEF,CAACA,IAGH,OACE,uBAAKlW,UAAU,mBACb,gBAAC,EAAD,CACEkF,MAAO8Q,EAAoBnU,QAC3BiD,OAAO,OACPE,SAnF0B,IAoF1BC,uBAAwBA,GAExB,gBAAC,EAAD,CACEuI,QAAS3H,EACT2B,iBAAkB1K,wBAAsB6M,KACxCiE,YAAa,CAAE1P,KAAMsV,GACrBhW,QAAS,CAAC,CAAE2K,SAAU,OAAQjD,MAAO,SACrCzG,KAAMqX,EAAUjU,QAChB6L,aAAcA,EACdzC,YAAaA,EACbjB,qBAAsBA,EACtB8D,UAAWmI,EACX3K,uBAAwBA,QCxErB+K,EAAqE,SAAC,GAQ5E,IAPL9Z,EAOI,EAPJA,mBACA8W,EAMI,EANJA,oBACAC,EAKI,EALJA,qBACAvN,EAII,EAJJA,0BACAwN,EAGI,EAHJA,gBAGI,IAFJvN,kBAEI,SADJC,EACI,EADJA,8BAEQtE,EAASxC,yCAATwC,KAEFD,EAAgBtC,qBAAW8B,GAE3B6R,EAAajQ,SAASvG,EAAoB,CAC9CsJ,IAAKtJ,EAAmBsJ,KAAOyQ,MAC/BtQ,aACAD,4BACAE,kCAGIsQ,EAAsB,SAAC/P,GAAD,OAA4B1D,UAAU0D,IAAcA,IAAc3J,YAAUyC,WAZpG,EAc8CC,mBAASgX,EAAoBxD,EAAWvM,YAdtF,mBAcGgQ,EAdH,KAcsBC,EAdtB,KAgBJrU,qBAAU,WACRqU,EAAqBF,EAAoBha,EAAmBiK,cAC3D,CAACjK,EAAmBiK,YAlBnB,MCDC,WAOL,IAAMkQ,EAAazI,iBAAuB,MAD1C,EAGwB1O,mBAAS,OAHjC,mBAGOoX,EAHP,KAGaC,EAHb,OAIwBrX,mBAAS,OAJjC,mBAIOsX,EAJP,KAIaC,EAJb,OAKoDvX,oBAAS,GAL7D,mBAKOwX,EALP,KAK2BC,EAL3B,KAOMC,EAAkB3U,uBAAY,WAClCyU,GAAsBC,GAAsB,KAC3C,CAACD,IAEEG,EAAkB5U,uBACtB,SAACC,GACKmU,EAAW7U,SAAW6U,EAAW7U,UAAYU,EAAMC,SACrDD,EAAM8N,iBACNuG,EAAQ,GAAD,OAAIrU,EAAM4U,MAAV,OACPL,EAAQ,GAAD,OAAIvU,EAAM6U,MAAV,OACPJ,GAAsB,MAG1B,CAACJ,EAASE,IAcZ,OAXA1U,qBAAU,WAIR,OAHA5F,SAAS6a,iBAAiB,QAASJ,GACnCza,SAAS6a,iBAAiB,cAAeJ,GACzCza,SAAS6a,iBAAiB,cAAeH,GAClC,WACL1a,SAAS8a,oBAAoB,QAASL,GACtCza,SAAS8a,oBAAoB,cAAeL,GAC5Cza,SAAS8a,oBAAoB,cAAeJ,OAIzC,CACLK,eAAgBb,EAChBc,gBAAiBb,EACjBc,gBAAiBZ,EACjBa,sBAAuBX,EACvBY,yBAA0BX,GDlBxBY,GALFL,EArBE,EAqBFA,eACAC,EAtBE,EAsBFA,gBACAC,EAvBE,EAuBFA,gBACAC,EAxBE,EAwBFA,sBACAC,EAzBE,EAyBFA,yBAGIE,EAAmBxS,mBAAQ,WAC/B,OAAQ0N,EAAWvM,WACjB,KAAK3J,YAAU+I,kBACb,OAAO,gBAAC,EAAuBmN,GACjC,KAAKlW,YAAUib,SACb,OAAO,gBAAC,EAAwB/E,GAClC,KAAKlW,YAAU6Y,QACb,OAAO,gBAAC,EAAuB3C,GACjC,KAAKlW,YAAUkb,cACb,OAAO,gBAAC,EAA6BhF,GACvC,KAAKlW,YAAUmb,SACf,KAAKnb,YAAUob,WACf,KAAKpb,YAAUsZ,KACb,OAAO,gBAAC,EAAoBpD,GAC9B,QACE,OAAOA,EAAWvM,aAIrB,CAACuM,EAAWvM,YAET0R,EAAgC5V,uBACpC,kBAAMS,OAAOC,OAAOnG,aAAW2G,QAAO,SAACgD,GAAD,OAAeA,IAAc3J,YAAUyC,eAC7E,IAGI6Y,EAAuB7V,uBAC3B,kBACEQ,MAAMoV,KAAiC,SAACjV,GAAD,OACrC,gBAAC0H,EAAA,EAAD,CAAU1H,IAAKA,EAAKmH,OAAQnH,GACzBA,QAGP,CAACiV,IAGGE,EAAoB9V,uBAAY,kBAAMiR,MAAkC,CAACA,IAEzE8E,EAAuB/V,uBAAY,WAAO,IAAD,IAC7C,2BAAOZ,EAAcE,gCAArB,aAAO,EAAwCC,eAA/C,QAA0DuW,IACzD,CAACA,EAAmB1W,EAAcE,2BAE/B0W,EAAoBhW,uBACxB,SAACC,EAAmB6H,GAClBqM,GAAqB,GAErBpD,EAD0BjJ,KAG5B,CAACiJ,IAGGkF,EAAyBjW,uBAC7B,kBACE,gBAAC,EAAD,CACE/B,MAAOoB,EAAKhD,gBACZ0B,eAAgB+X,EAChB5X,SAAU6X,IACVrY,UAAU,qBACVS,cAAY,EACZH,KACE,gBAAC6J,EAAA,EAAD,CAAM3F,SAAU8T,GACd,gBAAC5N,EAAA,EAAD,KAAWyN,UAKnB,CAACxW,EAAKhD,gBAAiByZ,EAAmBC,EAAsBC,EAAmBH,IAG/EK,EAAqBlW,uBAAY,WACrCmU,GAAqB,GACrBkB,GAAyB,GACzBrE,MACC,CAACA,EAAsBqE,IAEpBc,EAAmBnW,uBACvB,kBACE,uBACEtC,UAAU,+CACVuR,MAAO,CACLmH,IAAKjB,EACLkB,KAAMnB,IAGR,gBAACoB,EAAA,EAAD,CACEhO,YAAa4L,EACbqC,SAAS,EACT1U,QAAS2U,IAAcC,QACvBC,QAASR,GAER7W,EAAKxE,UAIZ,CAACqZ,EAAmBgB,EAAiBC,EAAiBe,EAAoB7W,EAAKxE,QAGjF,OACE,uBACE6C,UAAS,8BAAyBsN,EAAzB,YACPkJ,EAAoB,sBAAwB,0BAE9C7E,IAAK4F,GAEJf,EAAoBqB,EAAmBlW,EAAKjD,iBAC3C8X,EAA+C,KAA3B+B,IACrBb,EAAwBe,IAAqB,OE/KvCQ,GAAyF,SACpGtV,GAEA,IAAMsP,EAAyBhF,iBAAuB,MADnD,EAGiD1O,mBAASoE,EAAMpH,oBAHhE,mBAGIA,EAHJ,KAGwB2c,EAHxB,KAKGC,EAAkC7W,uBAAY,SAAC8W,EAAaC,GAChEH,GAAsB,SAACI,GAAD,mBAAC,eAClBA,GADiB,IAEpBlb,KAAMgb,EACNzb,SAAU0b,SAEX,IAEGhG,EAAsB/Q,uBAAY,SAACkE,GACvC0S,GAAsB,SAACI,GAAD,mBAAC,eAClBA,GADiB,IAEpB9S,UAAWA,SAEZ,IAEG8M,EAAuBhR,uBAAY,WACvC4W,GAAsB,SAACI,GAAiD,IAAD,IAC/D9Z,EAAoB,CACxBqG,IAAKyT,EAA2BzT,IAChCzH,KAAMkb,EAA2Blb,KACjCT,SAAU2b,EAA2B3b,SACrC6I,UAAW3J,YAAUyC,WAGvB,OADA,UAAArD,OAAOyD,cAAP,mBAAeC,iCAAf,gBAA2CH,GACpCA,OAER,IAEG4T,EAA0B9Q,uBAAY,WAC1C,OAAO2Q,EAAuBpR,UAC7B,IAEH,OACE,uBAAK7B,UAAU,wBACb,uBAAKA,UAAU,kCACb,wBAAMA,UAAU,oBAAoBzD,EAAmB6B,MACvD,wBAAM4B,UAAU,mBAAhB,IAAoCzD,EAAmBiK,WAAa3J,YAAUyC,UAA9E,MAGF,uBACEU,UAAU,2BACV2R,IAAKsB,EACLtS,yBAAuB,wBAEvB,gBAAC,EAAD,CACEpE,mBAAoBA,EACpB8W,oBAAqBA,EACrBC,qBAAsBA,EACtBvN,0BAA2BoT,EAC3B5F,gBAAiBH,OC/CrBmG,GAA4E,SAChF5V,GACI,IAAD,EACyEpE,oBAAS,kBAAMuD,cADxF,mBACIiN,EADJ,KACoCC,EADpC,KAEGpO,EAA2BqM,iBAAuB,MAExD,OACE,gBAAC,2BAAD,CACEuL,SAAU5a,oCACV6a,aAAc1a,oCACd2a,cAAeC,UAAUC,SACzBC,IAAK5a,oCAEL,gBAACiC,EAA6B4Y,SAA9B,CACErX,MAAO,CAAEb,2BAA0BmO,iCAAgCC,sCAEnE,uBAAKhQ,UAAU,0BAA0B2R,IAAK/P,GAC5C,gBAAC,GAAwB+B,EAAMrH,4B","file":"static/js/main.6d23bdab.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditor } from \"./components\";\nimport * as React from \"react\";\nimport { ExpressionProps } from \"./api\";\nimport * as ReactDOM from \"react-dom\";\n\nexport * from \"./components\";\nexport * from \"./api\";\n\nwindow.renderBoxedExpressionEditor = (selector: string, definition: ExpressionProps) => {\n  ReactDOM.render(\n    <BoxedExpressionEditor expressionDefinition={{ selectedExpression: definition }} />,\n    document.getElementById(selector)\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum BuiltinAggregation {\n  Sum = \"+\",\n  Count = \"#\",\n  Min = \"<\",\n  Max = \">\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HitPolicy {\n  Unique = \"UNIQUE\",\n  First = \"FIRST\",\n  Priority = \"PRIORITY\",\n  Any = \"ANY\",\n  Collect = \"COLLECT\",\n  RuleOrder = \"RULE ORDER\",\n  OutputOrder = \"OUTPUT ORDER\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\n\n/** Possible status for the visibility of the Table's Header */\nexport enum TableHeaderVisibility {\n  Full,\n  OnlyLastLevel,\n  None,\n}\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n  RowClear,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  choose: \"Choose...\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editRelation: \"Edit Relation\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  name: \"Name\",\n  relation: \"Relation\",\n  rowOperations: {\n    clear: \"Clear\",\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  ListProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression: ExpressionProps = {\n    name: \"Expression Name\",\n    dataType: DataType.Undefined,\n  };\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n    broadcastListExpressionDefinition: (definition: ListProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div className=\"boxed-expression\">\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression, relation, context and list logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./BuiltinAggregation\";\nexport * from \"./ContextEntry\";\nexport * from \"./DataType\";\nexport * from \"./DecisionTableRule\";\nexport * from \"./ExpressionProps\";\nexport * from \"./HitPolicy\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** Additional classname to be used for the popover */\n  className?: string;\n  /** True to have width automatically computed */\n  hasAutoWidth?: boolean;\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n  className,\n  hasAutoWidth,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className={`popover-menu-selector${className ? \" \" + className : \"\"}`}\n      hasAutoWidth={hasAutoWidth}\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nexport interface BoxedExpressionGlobalContextProps {\n  boxedExpressionEditorRef: React.RefObject<HTMLDivElement>;\n  currentlyOpenedHandlerCallback: React.Dispatch<React.SetStateAction<boolean>>;\n  setCurrentlyOpenedHandlerCallback: React.Dispatch<\n    React.SetStateAction<React.Dispatch<React.SetStateAction<boolean>>>\n  >;\n}\n\nexport const BoxedExpressionGlobalContext = React.createContext<BoxedExpressionGlobalContextProps>(\n  {} as BoxedExpressionGlobalContextProps\n);\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n  appendTo = appendTo ?? globalContext.boxedExpressionEditorRef?.current ?? undefined;\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      setDataType(selection);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: selection,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <Select\n              ouiaId=\"edit-expression-data-type\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={i18n.choose}\n              onToggle={onDataTypeSelectToggle}\n              onSelect={onDataTypeSelect}\n              onFilter={onDataTypeFilter}\n              isOpen={dataTypeSelectOpen}\n              selections={dataType}\n              hasInlineFilter\n              inlineFilterPlaceholderText={i18n.choose}\n            >\n              {getDataTypes()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Resizer.css\";\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\n\nexport interface ResizerProps {\n  width: number;\n  height: number | \"100%\";\n  minWidth: number;\n  minHeight?: number;\n  onHorizontalResizeStop: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height,\n  minHeight = 0,\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  const targetHeight = height === \"100%\" ? 0 : height;\n\n  const resizerHandler = useMemo(\n    () => (\n      <div className=\"pf-c-drawer\">\n        <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n          <div className=\"pf-c-drawer__splitter-handle\" />\n        </div>\n      </div>\n    ),\n    []\n  );\n\n  const onResizeStop = useCallback((e, data) => onHorizontalResizeStop(data.size.width), [onHorizontalResizeStop]);\n\n  return (\n    <ResizableBox\n      className={`${height === \"100%\" ? \"height-based-on-content\" : \"\"}`}\n      width={width}\n      height={targetHeight}\n      minConstraints={[minWidth, minHeight]}\n      axis=\"x\"\n      onResizeStop={onResizeStop}\n      handle={resizerHandler}\n    >\n      {children}\n    </ResizableBox>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  uid,\n  content,\n  dataType,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n  const HEADER_HEIGHT = 40;\n\n  const [expressionName, setExpressionName] = useState(name);\n  const [expressionDataType, setExpressionDataType] = useState(dataType);\n  const [literalExpressionContent, setLiteralExpressionContent] = useState(content);\n  const [literalExpressionWidth, setLiteralExpressionWidth] = useState(width || HEADER_WIDTH);\n\n  useEffect(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      uid,\n      name: expressionName,\n      dataType: expressionDataType,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent,\n      ...(!isHeadless && literalExpressionWidth !== HEADER_WIDTH ? { width: literalExpressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [\n    expressionName,\n    expressionDataType,\n    literalExpressionContent,\n    isHeadless,\n    onUpdatingRecursiveExpression,\n    literalExpressionWidth,\n    uid,\n  ]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      setExpressionName(name);\n      setExpressionDataType(dataType);\n      onUpdatingNameAndDataType?.(name, dataType);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onContentChange = useCallback((event) => {\n    const updatedContent = event.target.value;\n    setLiteralExpressionContent(updatedContent);\n  }, []);\n\n  const onHorizontalResizeStop = useCallback((width) => setLiteralExpressionWidth(width), []);\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth}\n        height={HEADER_HEIGHT}\n        minWidth={HEADER_WIDTH}\n        minHeight={HEADER_HEIGHT}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [literalExpressionWidth, onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <EditExpressionMenu\n            selectedExpressionName={expressionName}\n            selectedDataType={expressionDataType}\n            onExpressionUpdate={onExpressionUpdate}\n          >\n            <div className=\"expression-info\">\n              <p className=\"expression-name pf-u-text-truncate\">{expressionName}</p>\n              <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType})</p>\n            </div>\n          </EditExpressionMenu>\n        )}\n      </div>\n    );\n  }, [expressionDataType, expressionName, onExpressionUpdate, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <TextArea\n        defaultValue={literalExpressionContent}\n        onBlur={onContentChange}\n        aria-label=\"literal-expression-content\"\n      />\n    ),\n    [literalExpressionContent, onContentChange]\n  );\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord, HeaderGroup, TableInstance } from \"react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType, TableHeaderVisibility } from \"../../api\";\n\nexport interface TableHeaderProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** Columns instance */\n  tableColumns: ColumnInstance[];\n  /** Function for setting table columns */\n  setTableColumns: React.Dispatch<React.SetStateAction<ColumnInstance[]>>;\n  /** Function for setting table rows */\n  setTableRows: React.Dispatch<React.SetStateAction<DataRecord[]>>;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n}\n\nexport const TableHeader: React.FunctionComponent<TableHeaderProps> = ({\n  tableInstance,\n  tableColumns,\n  setTableColumns,\n  setTableRows,\n  editColumnLabel,\n  headerVisibility = TableHeaderVisibility.Full,\n  getColumnKey,\n}) => {\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      setTableRows((prevTableCells) => {\n        return _.map(prevTableCells, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        });\n      }),\n    [setTableRows]\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns[columnIndex] as ColumnInstance).accessor as string;\n        setTableColumns((prevTableColumns: ColumnInstance[]) => {\n          const updatedTableColumns = [...prevTableColumns];\n          updatedTableColumns[columnIndex].label = name;\n          updatedTableColumns[columnIndex].accessor = name;\n          updatedTableColumns[columnIndex].dataType = dataType;\n          return updatedTableColumns;\n        });\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [setTableColumns, tableColumns, updateColumnNameInRows]\n  );\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th\n        {...column.getHeaderProps()}\n        className=\"fixed-column no-clickable-cell\"\n        key={`${getColumnKey(column)}-${columnIndex}`}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    [getColumnKey]\n  );\n\n  const renderHeaderCellInfo = useCallback(\n    (column) => (\n      <div className=\"header-cell-info\" data-ouia-component-type=\"expression-column-header-cell-info\">\n        <p className=\"pf-u-text-truncate\">{column.label}</p>\n        {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n      </div>\n    ),\n    []\n  );\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => (\n      <Th\n        {...column.getHeaderProps()}\n        {...tableInstance.getThProps(column, columnIndex)}\n        className={`resizable-column ${!column.dataType ? \"no-clickable-cell\" : null}`}\n        key={`${getColumnKey(column)}-${columnIndex}`}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.dataType ? (\n            <EditExpressionMenu\n              title={editColumnLabel}\n              selectedExpressionName={column.label}\n              selectedDataType={column.dataType}\n              onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n              key={`${getColumnKey(column)}-${columnIndex}`}\n            >\n              {renderHeaderCellInfo(column)}\n            </EditExpressionMenu>\n          ) : (\n            renderHeaderCellInfo(column)\n          )}\n          <div\n            className={`pf-c-drawer ${!column.canResize ? \"resizer-disabled\" : \"\"}`}\n            {...(column.canResize ? column.getResizerProps() : {})}\n          >\n            <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n              <div className=\"pf-c-drawer__splitter-handle\" />\n            </div>\n          </div>\n        </div>\n      </Th>\n    ),\n    [editColumnLabel, getColumnKey, onColumnNameOrDataTypeUpdate, renderHeaderCellInfo, tableInstance]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableHeaderCell(column, columnIndex),\n    [renderCountColumn, renderResizableHeaderCell]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      tableInstance.headerGroups.map((headerGroup: HeaderGroup) => (\n        <Tr key={headerGroup.accessor} {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n        </Tr>\n      )),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  const renderLastLevelInHeaderGroups = useMemo(\n    () => (\n      <Tr>\n        {_.last(\n          tableInstance.headerGroups as HeaderGroup[]\n        )!.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  return headerVisibility === TableHeaderVisibility.None ? null : (\n    <Thead noWrap>\n      {headerVisibility === TableHeaderVisibility.OnlyLastLevel ? renderLastLevelInHeaderGroups : renderHeaderGroups}\n    </Thead>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerMenuProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerMenuProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface TableHandlerProps {\n  /** The prefix to be used for the column name */\n  columnPrefix: string;\n  /** Columns instance */\n  tableColumns: ColumnInstance[];\n  /** Function for setting table columns */\n  setTableColumns: React.Dispatch<React.SetStateAction<ColumnInstance[]>>;\n  /** Function for setting table rows */\n  setTableRows: React.Dispatch<React.SetStateAction<DataRecord[]>>;\n  /** Last selected column index */\n  lastSelectedColumnIndex: number;\n  /** Last selected row index */\n  lastSelectedRowIndex: number;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding: () => DataRecord;\n  /** Show/hide table handler */\n  showTableHandler: boolean;\n  /** Function to programmatically show/hide table handler */\n  setShowTableHandler: React.Dispatch<React.SetStateAction<boolean>>;\n  /** Target for showing the table handler  */\n  tableHandlerTarget: HTMLElement;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Table handler allowed operations */\n  tableHandlerAllowedOperations: TableOperation[];\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n}\n\nexport const TableHandler: React.FunctionComponent<TableHandlerProps> = ({\n  columnPrefix,\n  tableColumns,\n  setTableColumns,\n  setTableRows,\n  lastSelectedColumnIndex,\n  lastSelectedRowIndex,\n  onRowAdding,\n  showTableHandler,\n  setShowTableHandler,\n  tableHandlerTarget,\n  handlerConfiguration,\n  tableHandlerAllowedOperations,\n  resetRowCustomFunction = () => ({}),\n}) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [selectedColumnIndex, setSelectedColumnIndex] = useState(lastSelectedColumnIndex);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(lastSelectedRowIndex);\n\n  useEffect(() => {\n    setSelectedColumnIndex(lastSelectedColumnIndex);\n  }, [lastSelectedColumnIndex]);\n\n  useEffect(() => {\n    setSelectedRowIndex(lastSelectedRowIndex);\n  }, [lastSelectedRowIndex]);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const clearAt = <T extends unknown>(elements: T[], index: number) => {\n    return [\n      ...elements.slice(0, index),\n      resetRowCustomFunction(elements[index] as DataRecord),\n      ...elements.slice(index + 1),\n    ];\n  };\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      } as ColumnInstance;\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          setTableColumns((prevTableColumns) =>\n            insertBefore(prevTableColumns, selectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          setTableColumns((prevTableColumns) =>\n            insertAfter(prevTableColumns, selectedColumnIndex, generateNextAvailableColumn(prevTableColumns))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          setTableColumns((prevTableColumns) => deleteAt(prevTableColumns, selectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          setTableRows((prevTableRows) => insertBefore(prevTableRows, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          setTableRows((prevTableRows) => insertAfter(prevTableRows, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          setTableRows((prevTableRows) => deleteAt(prevTableRows, selectedRowIndex));\n          break;\n        case TableOperation.RowClear:\n          setTableRows((prevTableRows) => clearAt(prevTableRows, selectedRowIndex));\n      }\n      setShowTableHandler(false);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      setShowTableHandler,\n      setTableColumns,\n      setTableRows,\n      selectedColumnIndex,\n      generateNextAvailableColumn,\n      selectedRowIndex,\n      onRowAdding,\n    ]\n  );\n\n  return useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [\n      showTableHandler,\n      globalContext.boxedExpressionEditorRef,\n      handlerConfiguration,\n      tableHandlerAllowedOperations,\n      handlingOperation,\n      setShowTableHandler,\n      tableHandlerTarget,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Cell,\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  Row,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable, Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { CellProps, TableHandlerConfiguration, TableHeaderVisibility, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { TableHeader } from \"./TableHeader\";\nimport { TableHandler } from \"./TableHandler\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface TableProps {\n  /** Table identifier, useful for nested structures */\n  tableId?: string;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** The prefix to be used for the column name */\n  columnPrefix?: string;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: Column[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: Column[]) => void;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate?: (rows: DataRecord[]) => void;\n  /** Function to be executed when a single row gets modified */\n  onSingleRowUpdate?: (rowIndex: number, row: DataRecord) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** True to support multiple levels in the header */\n  headerHasMultipleLevels?: boolean;\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey?: (row: Row) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey?: (column: Column) => string;\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n}\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  tableId,\n  children,\n  columnPrefix = \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onSingleRowUpdate,\n  onRowAdding = () => ({}),\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  headerVisibility,\n  headerHasMultipleLevels = false,\n  getRowKey = (row) => row.id as string,\n  getColumnKey = (column) => column.id as string,\n  resetRowCustomFunction,\n}: TableProps) => {\n  const NUMBER_OF_ROWS_COLUMN = \"#\";\n  const NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [tableColumns, setTableColumns] = useState([\n    {\n      label: NUMBER_OF_ROWS_COLUMN,\n      accessor: NUMBER_OF_ROWS_COLUMN,\n      width: 60,\n      minWidth: 60,\n      disableResizing: true,\n      isCountColumn: true,\n      hideFilter: true,\n      ...(headerHasMultipleLevels\n        ? {\n            columns: [\n              {\n                label: NUMBER_OF_ROWS_SUBCOLUMN,\n                accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n                minWidth: 60,\n                width: 60,\n                disableResizing: true,\n                isCountColumn: true,\n                hideFilter: true,\n              },\n            ],\n          }\n        : {}),\n    },\n    ...columns,\n  ]);\n  const [tableRows, setTableRows] = useState(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  const onCellUpdate = useCallback((rowIndex: number, columnId: string, value: string) => {\n    setTableRows((prevTableCells) => {\n      const updatedTableCells = [...prevTableCells];\n      updatedTableCells[rowIndex][columnId] = value;\n      return updatedTableCells;\n    });\n  }, []);\n\n  const onRowUpdate = useCallback(\n    (rowIndex: number, updatedRow: DataRecord) => {\n      onSingleRowUpdate?.(rowIndex, updatedRow);\n      setTableRows((prevTableCells) => {\n        const updatedRows = [...prevTableCells];\n        updatedRows[rowIndex] = updatedRow;\n        return updatedRows;\n      });\n    },\n    [onSingleRowUpdate]\n  );\n\n  const defaultColumn = {\n    minWidth: 150,\n    width: 150,\n    Cell: useCallback((cellRef) => {\n      const column = cellRef.column as ColumnInstance;\n      if (column.isCountColumn) {\n        return cellRef.value;\n      } else {\n        return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n      }\n      // Table performance optimization: no need to re-render cells, since nested component themselves will re-render\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const tableHandlerStateUpdate = (target: HTMLElement, columnIndex: number) => {\n    setTableHandlerTarget(target);\n    globalContext.currentlyOpenedHandlerCallback?.(false);\n    setShowTableHandler(true);\n    globalContext.setCurrentlyOpenedHandlerCallback?.(() => setShowTableHandler);\n    setLastSelectedColumnIndex(columnIndex);\n  };\n\n  const getThProps = (column: ColumnInstance, columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.length > 1 ? [TableOperation.RowDelete] : []),\n          TableOperation.RowClear,\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns,\n      data: tableRows,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  useEffect(() => {\n    onColumnsUpdate?.(tableColumns.slice(1)); //Removing \"# of rows\" column\n  }, [onColumnsUpdate, tableColumns]);\n\n  useEffect(() => {\n    onRowsUpdate?.(tableRows);\n  }, [onRowsUpdate, tableRows]);\n\n  const resizeNestedColumns = (columns: ColumnInstance[], accessor: string, updatedWidth: number) => {\n    const columnIndex = _.findIndex(columns, { accessor });\n    if (columnIndex >= 0) {\n      const updatedColumn = { ...columns[columnIndex] };\n      updatedColumn.width = updatedWidth;\n      columns.splice(columnIndex, 1, updatedColumn);\n    } else {\n      _.forEach(columns, (column) => resizeNestedColumns(column.columns, accessor, updatedWidth));\n    }\n  };\n\n  const finishedResizing =\n    tableInstance.state.columnResizing.isResizingColumn === null &&\n    !_.isEmpty(tableInstance.state.columnResizing.columnWidths);\n  useEffect(() => {\n    if (finishedResizing) {\n      setTableColumns((prevTableColumns) => {\n        _.forEach(tableInstance.state.columnResizing.columnWidths, (updatedColumnWidth, accessor) =>\n          resizeNestedColumns(prevTableColumns as ColumnInstance[], accessor, updatedColumnWidth)\n        );\n        return [...prevTableColumns];\n      });\n    }\n    // Need to consider a change only when resizing is finished (no other dependencies to consider for this useEffect)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finishedResizing]);\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td\n              role=\"cell\"\n              key={childIndex}\n              className=\"row-remainder-content\"\n              style={{\n                width: tableInstance.allColumns[childIndex + 1].width,\n                minWidth: tableInstance.allColumns[childIndex + 1].minWidth,\n              }}\n            >\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children, tableInstance.allColumns]\n  );\n\n  return (\n    <div className={`table-component ${tableId}`}>\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <TableHeader\n          tableInstance={tableInstance}\n          editColumnLabel={editColumnLabel}\n          headerVisibility={headerVisibility}\n          tableColumns={tableColumns as ColumnInstance[]}\n          setTableColumns={setTableColumns}\n          setTableRows={setTableRows}\n          getColumnKey={getColumnKey}\n        />\n        <Tbody\n          className={`${headerVisibility === TableHeaderVisibility.None ? \"missing-header\" : \"\"}`}\n          {...tableInstance.getTableBodyProps()}\n        >\n          {tableInstance.rows.map((row: Row, rowIndex: number) => {\n            tableInstance.prepareRow(row);\n            return (\n              <Tr\n                className=\"table-row\"\n                {...row.getRowProps()}\n                key={`${getRowKey(row)}-${rowIndex}`}\n                ouiaId={\"expression-row-\" + rowIndex}\n              >\n                {row.cells.map((cell: Cell, cellIndex: number) => (\n                  <Td\n                    {...(cellIndex === 0 ? {} : cell.getCellProps())}\n                    {...tableInstance.getTdProps(cellIndex, rowIndex)}\n                    key={`${getColumnKey(cell.column)}-${cellIndex}`}\n                    data-ouia-component-id={\"expression-column-\" + cellIndex}\n                    className={cellIndex === 0 ? \"counter-cell\" : \"data-cell\"}\n                  >\n                    {cellIndex === 0 ? rowIndex + 1 : cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n          {children ? renderAdditiveRow : null}\n        </Tbody>\n      </TableComposable>\n      {showTableHandler ? (\n        <TableHandler\n          tableColumns={tableColumns as ColumnInstance[]}\n          setTableColumns={setTableColumns}\n          setTableRows={setTableRows}\n          columnPrefix={columnPrefix}\n          handlerConfiguration={handlerConfiguration}\n          lastSelectedColumnIndex={lastSelectedColumnIndex}\n          lastSelectedRowIndex={lastSelectedRowIndex}\n          onRowAdding={onRowAdding}\n          showTableHandler={showTableHandler}\n          setShowTableHandler={setShowTableHandler}\n          tableHandlerAllowedOperations={tableHandlerAllowedOperations}\n          tableHandlerTarget={tableHandlerTarget}\n          resetRowCustomFunction={resetRowCustomFunction}\n        />\n      ) : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { DataType, RelationProps, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const [tableColumns, setTableColumns] = useState(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const [tableRows, setTableRows] = useState(relationProps.rows === undefined ? [[]] : relationProps.rows);\n\n  useEffect(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns,\n      rows: tableRows,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps, tableColumns, tableRows]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns,\n        (column) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    [tableColumns]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) =>\n      setTableColumns(\n        _.map(columns, (columnInstance: ColumnInstance) => ({\n          name: columnInstance.accessor,\n          dataType: columnInstance.dataType,\n          width: columnInstance.width,\n        }))\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows, (row) =>\n        _.reduce(\n          tableColumns,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    [tableColumns, tableRows]\n  );\n\n  const onSavingRows = useCallback(\n    (rows) =>\n      setTableRows(\n        _.map(rows, (tableRow: DataRecord) =>\n          _.reduce(\n            tableColumns,\n            (row: string[], column) => {\n              row.push((tableRow[column.name]! as string) || \"\");\n              return row;\n            },\n            []\n          )\n        )\n      ),\n    [tableColumns]\n  );\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n  /** Function invoked when resetting expression */\n  onExpressionResetting?: () => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n  onExpressionResetting,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const entryExpression = useRef(expression);\n\n  const expressionChangedExternally = expression.logicType === undefined;\n  useEffect(() => {\n    entryExpression.current = _.omit(expression, \"isHeadless\");\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback(\n    (logicType) => {\n      entryExpression.current.logicType = logicType;\n      onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n    },\n    [onUpdatingRecursiveExpression]\n  );\n\n  const onLogicTypeResetting = useCallback(() => {\n    entryExpression.current.logicType = LogicType.Undefined;\n    onExpressionResetting?.();\n    onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n  }, [onExpressionResetting, onUpdatingRecursiveExpression]);\n\n  return (\n    <div className=\"entry-expression\" ref={expressionContainerRef}>\n      <LogicTypeSelector\n        isHeadless={true}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        selectedExpression={entryExpression.current}\n        onLogicTypeUpdating={onLogicTypeUpdating}\n        onLogicTypeResetting={onLogicTypeResetting}\n        getPlacementRef={getLogicTypeSelectorRef}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryExpressionCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CellProps, ContextEntries, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const entryExpression = useRef({\n    uid: contextEntry.entryExpression.uid,\n    ...contextEntry.entryExpression,\n  } as ExpressionProps);\n\n  const expressionChangedExternally = contextEntry.entryExpression.logicType === undefined;\n  useEffect(() => {\n    entryExpression.current = contextEntry.entryExpression;\n    onRowUpdate(index, { ...contextEntry, entryExpression: entryExpression.current });\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    entryExpression.current = expression;\n    onRowUpdate(index, { ...contextEntry, entryExpression: expression });\n    // Callback should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression.current}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        onExpressionResetting={contextEntry.onExpressionResetting}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType } from \"../../api\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  return (\n    <div className=\"entry-info\">\n      <EditExpressionMenu\n        title={i18n.editContextEntry}\n        selectedExpressionName={entryName}\n        selectedDataType={entryDataType}\n        onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n      >\n        <div className=\"entry-definition\">\n          <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n            {entryName}\n          </p>\n          <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n            ({entryDataType})\n          </p>\n        </div>\n      </EditExpressionMenu>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryInfo, setEntryInfo] = useState(contextEntry.entryInfo);\n\n  useEffect(() => {\n    setEntryInfo(contextEntry.entryInfo);\n  }, [contextEntry.entryInfo]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      onRowUpdate(index, { ...contextEntry, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.name}\n        dataType={entryInfo.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextEntryRecord,\n  ContextProps,\n  DataType,\n  ExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord, Row } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\nconst DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nconst DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  uid,\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  onUpdatingNameAndDataType,\n  contextEntries,\n  result = {} as ExpressionProps,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = [\n    {\n      group: i18n.contextEntry,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n        { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n      ],\n    },\n  ];\n\n  const onExpressionResetting = useCallback(() => {\n    setExpressionWidth(DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH);\n  }, []);\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n\n  const [columns, setColumns] = useState([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          label: \"Name\",\n          accessor: \"entryInfo\",\n          disableHandlerOnHeader: true,\n          width: infoWidth,\n          minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n        },\n        {\n          label: \"Value\",\n          accessor: \"entryExpression\",\n          disableHandlerOnHeader: true,\n          width: expressionWidth,\n          minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n        },\n      ],\n    },\n  ]);\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {},\n        onExpressionResetting,\n      } as DataRecord,\n    ]\n  );\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label, expressionColumn.dataType);\n      setExpressionWidth(_.find(expressionColumn.columns, { accessor: \"entryExpression\" })?.width as number);\n      setInfoWidth(_.find(expressionColumn.columns, { accessor: \"entryInfo\" })?.width as number);\n      setColumns(([prevExpressionColumn]) => [\n        {\n          ...prevExpressionColumn,\n          label: expressionColumn.label,\n          accessor: expressionColumn.accessor,\n          dataType: expressionColumn.dataType,\n        },\n      ]);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const generateNextAvailableEntryName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `ContextEntry-${lastIndex}`;\n      const entryWithCandidateName = _.find(rows, { entryInfo: { name: candidateName } });\n      return entryWithCandidateName ? generateNextAvailableEntryName(lastIndex + 1) : candidateName;\n    },\n    [rows]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(rows.length),\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {},\n      onExpressionResetting,\n    }),\n    [generateNextAvailableEntryName, onExpressionResetting, rows.length]\n  );\n\n  const contextTableGetRowKey = useCallback((row: Row) => (row.original as ContextEntryRecord).entryInfo.name, []);\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.OnlyLastLevel : TableHeaderVisibility.Full;\n  }, [isHeadless]);\n\n  const resetRowCustomFunction = useCallback((row: DataRecord) => {\n    return { entryInfo: row.entryInfo, entryExpression: { uid: (row.entryExpression as ExpressionProps).uid } };\n  }, []);\n\n  useEffect(() => {\n    const [expressionColumn] = columns;\n    const updatedDefinition: ContextProps = {\n      uid,\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      ...(infoWidth > DEFAULT_ENTRY_INFO_MIN_WIDTH ? { entryInfoWidth: infoWidth } : {}),\n      ...(expressionWidth > DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH ? { entryExpressionWidth: expressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]))\n      : window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n  }, [columns, isHeadless, onUpdatingRecursiveExpression, rows, resultExpression, infoWidth, expressionWidth, uid]);\n\n  return (\n    <div className={`context-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerHasMultipleLevels={true}\n        headerVisibility={getHeaderVisibility()}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={handlerConfiguration}\n        getRowKey={contextTableGetRowKey}\n        resetRowCustomFunction={resetRowCustomFunction}\n      >\n        <div className=\"context-result\">{`<result>`}</div>\n        <ContextEntryExpression\n          expression={resultExpression}\n          onUpdatingRecursiveExpression={setResultExpression}\n          onExpressionResetting={onExpressionResetting}\n        />\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DecisionTableProps } from \"../../api\";\nimport * as React from \"react\";\n\nexport const DecisionTableExpression: React.FunctionComponent<DecisionTableProps> = () => {\n  return <div>Decision Table</div>;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ListExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useRef } from \"react\";\nimport {\n  ContextEntryRecord,\n  ExpressionProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord, Row } from \"react-table\";\nimport * as _ from \"lodash\";\nimport { Resizer } from \"../Resizer\";\n\nconst LIST_EXPRESSION_MIN_WIDTH = 430;\n\nexport const ListExpression: React.FunctionComponent<ListProps> = ({\n  isHeadless,\n  items,\n  onUpdatingRecursiveExpression,\n  uid,\n  width = LIST_EXPRESSION_MIN_WIDTH,\n}: ListProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = [\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n        { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n      ],\n    },\n  ];\n\n  const generateLiteralExpression = () => ({ logicType: LogicType.LiteralExpression } as LiteralExpressionProps);\n\n  const listItems = useRef(\n    _.isEmpty(items)\n      ? [\n          {\n            entryExpression: generateLiteralExpression(),\n          } as DataRecord,\n        ]\n      : _.map(items, (item) => ({ entryExpression: item } as DataRecord))\n  );\n\n  const listExpressionWidth = useRef(width);\n\n  const listTableGetRowKey = useCallback((row: Row) => (row.original as ContextEntryRecord).entryExpression.uid!, []);\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryExpression: generateLiteralExpression(),\n    }),\n    []\n  );\n\n  const spreadListExpressionDefinition = useCallback(() => {\n    const updatedDefinition: ListProps = {\n      uid,\n      ...(listExpressionWidth.current !== LIST_EXPRESSION_MIN_WIDTH ? { width: listExpressionWidth.current } : {}),\n      logicType: LogicType.List,\n      items: _.map(listItems.current, (listItem: DataRecord) => listItem.entryExpression as ExpressionProps),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(updatedDefinition)\n      : window.beeApi?.broadcastListExpressionDefinition?.(updatedDefinition);\n  }, [isHeadless, onUpdatingRecursiveExpression, uid]);\n\n  const onRowsUpdate = useCallback(\n    (rows) => {\n      listItems.current = rows;\n      spreadListExpressionDefinition();\n    },\n    [spreadListExpressionDefinition]\n  );\n\n  const resetRowCustomFunction = useCallback((row: DataRecord) => {\n    return { entryExpression: { uid: (row.entryExpression as ExpressionProps).uid } };\n  }, []);\n\n  const onHorizontalResizeStop = useCallback(\n    (width) => {\n      listExpressionWidth.current = width;\n      spreadListExpressionDefinition();\n    },\n    [spreadListExpressionDefinition]\n  );\n\n  return (\n    <div className=\"list-expression\">\n      <Resizer\n        width={listExpressionWidth.current}\n        height=\"100%\"\n        minWidth={LIST_EXPRESSION_MIN_WIDTH}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        <Table\n          tableId={uid}\n          headerVisibility={TableHeaderVisibility.None}\n          defaultCell={{ list: ContextEntryExpressionCell }}\n          columns={[{ accessor: \"list\", width: \"100%\" }]}\n          rows={listItems.current as DataRecord[]}\n          onRowsUpdate={onRowsUpdate}\n          onRowAdding={onRowAdding}\n          handlerConfiguration={handlerConfiguration}\n          getRowKey={listTableGetRowKey}\n          resetRowCustomFunction={resetRowCustomFunction}\n        />\n      </Resizer>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DecisionTableProps,\n  ExpressionProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  RelationProps,\n} from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\nimport nextId from \"react-id-generator\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DecisionTableExpression } from \"../DecisionTableExpression\";\nimport { ListExpression } from \"../ListExpression\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const expression = _.extend(selectedExpression, {\n    uid: selectedExpression.uid || nextId(),\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} />;\n      case LogicType.DecisionTable:\n        return <DecisionTableExpression {...(expression as DecisionTableProps)} />;\n      case LogicType.Function:\n      case LogicType.Invocation:\n      case LogicType.List:\n        return <ListExpression {...(expression as ListProps)} />;\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypesWithoutUndefined = useCallback(\n    () => Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () =>\n      _.map(getLogicTypesWithoutUndefined(), (key) => (\n        <MenuItem key={key} itemId={key}>\n          {key}\n        </MenuItem>\n      )),\n    [getLogicTypesWithoutUndefined]\n  );\n\n  const getArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const getAppendToPlacement = useCallback(() => {\n    return globalContext.boxedExpressionEditorRef?.current ?? getArrowPlacement;\n  }, [getArrowPlacement, globalContext.boxedExpressionEditorRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (event: MouseEvent, itemId: string) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = itemId as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getArrowPlacement}\n        appendTo={getAppendToPlacement()}\n        className=\"logic-type-popover\"\n        hasAutoWidth\n        body={\n          <Menu onSelect={onLogicTypeSelect}>\n            <MenuList>{renderLogicTypeItems()}</MenuList>\n          </Menu>\n        }\n      />\n    ),\n    [i18n.selectLogicType, getArrowPlacement, getAppendToPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useDragEvents(): {\n  setResizerElement: (element: HTMLDivElement) => void;\n  dragItHorizontally: (x: number) => void;\n} {\n  let resizerElement: HTMLDivElement;\n  let mouseDownEvent: MouseEvent;\n\n  const initMouseDownEvent = (element: HTMLDivElement) => {\n    mouseDownEvent = new MouseEvent(\"mousedown\", {\n      clientX: element.getBoundingClientRect().left,\n      clientY: element.getBoundingClientRect().top,\n      bubbles: true,\n      cancelable: true,\n    });\n  };\n\n  const moveHorizontallyBy = (x: number) => {\n    resizerElement.dispatchEvent(\n      new MouseEvent(\"mousemove\", {\n        clientX: resizerElement.getBoundingClientRect().left + x,\n        clientY: resizerElement.getBoundingClientRect().top,\n        bubbles: true,\n        cancelable: true,\n      })\n    );\n  };\n\n  const mouseUpEvent = new MouseEvent(\"mouseup\", {\n    bubbles: true,\n    cancelable: true,\n  });\n\n  const setResizerElement = (element: HTMLDivElement) => {\n    resizerElement = element;\n    initMouseDownEvent(resizerElement);\n  };\n\n  const dragItHorizontally = (x: number) => {\n    resizerElement.dispatchEvent(mouseDownEvent);\n    moveHorizontallyBy(x);\n    resizerElement.dispatchEvent(mouseUpEvent);\n  };\n\n  return {\n    setResizerElement,\n    dragItHorizontally,\n  };\n}\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        uid: previousSelectedExpression.uid,\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <div className=\"expression-name-and-logic-type\">\n        <span className=\"expression-title\">{selectedExpression.name}</span>\n        <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n      </div>\n\n      <div\n        className=\"expression-container-box\"\n        ref={expressionContainerRef}\n        data-ouia-component-id=\"expression-container\"\n      >\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useRef, useState } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base-no-reset.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport \"./BoxedExpressionEditor.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport * as _ from \"lodash\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => {\n  const [currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback] = useState(() => _.identity);\n  const boxedExpressionEditorRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <I18nDictionariesProvider\n      defaults={boxedExpressionEditorI18nDefaults}\n      dictionaries={boxedExpressionEditorDictionaries}\n      initialLocale={navigator.language}\n      ctx={BoxedExpressionEditorI18nContext}\n    >\n      <BoxedExpressionGlobalContext.Provider\n        value={{ boxedExpressionEditorRef, currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback }}\n      >\n        <div className=\"boxed-expression-editor\" ref={boxedExpressionEditorRef}>\n          <ExpressionContainer {...props.expressionDefinition} />\n        </div>\n      </BoxedExpressionGlobalContext.Provider>\n    </I18nDictionariesProvider>\n  );\n};\n\nexport { BoxedExpressionEditor };\n"],"sourceRoot":""}
{"version":3,"sources":["boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx","index.tsx","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts"],"names":["PopoverMenu","arrowPlacement","body","title","appendTo","Popover","className","position","distance","id","reference","headerContent","bodyContent","ExpressionContainer","props","i18n","useBoxedExpressionEditorI18n","useState","_","selectedExpression","logicTypeIsPresent","setLogicTypeSelected","actionDropdownIsOpen","setActionDropDownOpen","selectExpression","setSelectedExpression","onLogicTypeSelect","useCallback","currentItem","currentItemProps","children","executeClearAction","renderLogicTypeItems","literalExpression","context","decisionTable","relation","function","invocation","list","key","SimpleListItem","name","type","Dropdown","onSelect","toggle","KebabToggle","onToggle","isOpen","isPlain","dropdownItems","DropdownItem","onClick","isDisabled","clear","selectLogicType","document","getElementById","SimpleList","BoxedExpressionEditor","defaults","boxedExpressionEditorI18nDefaults","dictionaries","boxedExpressionEditorDictionaries","initialLocale","navigator","language","ctx","BoxedExpressionEditorI18nContext","expressionDefinition","ReactDOM","en","choose","editExpression","dataType","en_common","locale","dictionary","Map","React","useContext"],"mappings":"sSA+BaA,G,MAAyD,SAAC,GAK9C,IAJvBC,EAIsB,EAJtBA,eACAC,EAGsB,EAHtBA,KACAC,EAEsB,EAFtBA,MACAC,EACsB,EADtBA,SAEA,OACE,gBAACC,EAAA,EAAD,CACEC,UAAU,wBACVC,SAAS,SACTC,SAAU,EACVC,GAAG,gBACHC,UAAWT,EACXG,SAAUA,EACVO,cAAe,uBAAKL,UAAU,uBAAuBH,GACrDS,YAAaV,MCNNW,EAAwE,SACnFC,GACI,IAAD,EACKC,EAASC,yCAATD,KADL,EAGgDE,oBAAUC,UAAUJ,EAAMK,qBAH1E,mBAGIC,EAHJ,KAGwBC,EAHxB,OAImDJ,oBAAS,GAJ5D,mBAIIK,EAJJ,KAI0BC,EAJ1B,OAKiDN,mBAASH,EAAMK,oBAAsBJ,EAAKS,kBAL3F,mBAKIL,EALJ,KAKwBM,EALxB,KAOGC,EAAoBC,uBACxB,SAACC,EAAiDC,GAChDR,GAAqB,GACrBI,EAAsBI,EAAiBC,YAEzC,IAGIC,EAAqBJ,uBAAY,WACrCN,GAAqB,GACrBI,EAAsBV,EAAKS,oBAC1B,CAACT,EAAKS,mBA4BHQ,EAAuB,WAC3B,OAAOd,MACL,CACEH,EAAKkB,kBACLlB,EAAKmB,QACLnB,EAAKoB,cACLpB,EAAKqB,SACLrB,EAAKsB,SACLtB,EAAKuB,WACLvB,EAAKwB,OAEP,SAACC,GAAD,OAAS,gBAACC,EAAA,EAAD,CAAgBD,IAAKA,GAAMA,OAIxC,OACE,uBAAKlC,UAAU,wBACb,wBAAMG,GAAG,oBAAoBK,EAAM4B,MAAQ,IAC3C,wBAAMjC,GAAG,mBAAT,cAA6BK,EAAM6B,YAAnC,QAA2C,cAA3C,KACA,wBAAMlC,GAAG,sBA3CT,gBAACmC,EAAA,EAAD,CACEC,SAAU,kBAAMtB,GAAuBD,IACvCwB,OAAQ,gBAACC,EAAA,EAAD,CAAaC,SAAU,SAACC,GAAD,OAAY1B,EAAsB0B,IAASxC,GAAG,8BAC7EwC,OAAQ3B,EACR4B,SAAO,EACPC,cAAe,CACb,gBAACC,EAAA,EAAD,CAAcZ,IAAI,QAAQa,QAAStB,EAAoBuB,YAAalC,GACjEL,EAAKwC,WAsCZ,uBACE9C,GAAG,2BACHH,UAAWc,EAAqB,sBAAwB,0BAEvDD,GAGDC,EAAgD,KApClD,gBAAC,EAAD,CACEjB,MAAOY,EAAKyC,gBACZvD,eAAgB,kBAAMwD,SAASC,eAAe,6BAC9CxD,KAAM,gBAACyD,EAAA,EAAD,CAAYd,SAAUnB,GAAoBM,SCpDlD4B,EAA4E,SAChF9C,GADgF,OAGhF,gBAAC,2BAAD,CACE+C,SAAUC,oCACVC,aAAcC,oCACdC,cAAeC,UAAUC,SACzBC,IAAKC,oCAEL,gBAAC,EAAwBvD,EAAMwD,wBCjBnCC,SAAgB,gBAAC,EAAD,CAAuBD,qBAFgB,CAAC,KAAQ,qBAEsBb,SAASC,eAAe,U,gCCvB9G,i1B,8ECmBac,EAA6B,yBACxCC,OAAQ,YACRC,eAAgB,kBAChBhC,KAAM,OACNiC,SAAU,aACPC,MALqC,IAMxCpD,iBAAkB,oBAClBgC,gBAAiB,oBACjBvB,kBAAmB,qBACnBC,QAAS,UACTC,cAAe,iBACfC,SAAU,WACVC,SAAU,WACVC,WAAY,aACZC,KAAM,OACNgB,MAAO,UClCT,wIAuBO,IAAMO,EAA6E,CACxFe,OAAQ,KACRC,WAAYN,GAEDR,EAAiF,IAAIe,IAAI,CAAC,CAAC,KAAMP,KACjGH,EAAmCW,gBAC9C,IAGK,SAAShE,IACd,OAAOiE,qBAAWZ,K","file":"static/js/main.2fefd187.chunk.js","sourcesContent":["/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      className=\"popover-menu-selector\"\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={<div className=\"selector-menu-title\">{title}</div>}\n      bodyContent={body}\n    />\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport * as _ from \"lodash\";\nimport \"./ExpressionContainer.css\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport {\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  SimpleList,\n  SimpleListItem,\n  SimpleListItemProps,\n} from \"@patternfly/react-core\";\nimport { PopoverMenu } from \"../PopoverMenu\";\n\nexport interface ExpressionContainerProps {\n  /** The name of the expression */\n  name: string;\n  /** The type of the expression */\n  type?: string;\n  /** Selected expression is already present */\n  selectedExpression?: string;\n}\n\nexport const ExpressionContainer: (props: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [logicTypeIsPresent, setLogicTypeSelected] = useState(!_.isEmpty(props.selectedExpression));\n  const [actionDropdownIsOpen, setActionDropDownOpen] = useState(false);\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression || i18n.selectExpression);\n\n  const onLogicTypeSelect = useCallback(\n    (currentItem: React.RefObject<HTMLButtonElement>, currentItemProps: SimpleListItemProps) => {\n      setLogicTypeSelected(true);\n      setSelectedExpression(currentItemProps.children as string);\n    },\n    []\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setSelectedExpression(i18n.selectExpression);\n  }, [i18n.selectExpression]);\n\n  const renderExpressionActionsDropdown = () => {\n    return (\n      <Dropdown\n        onSelect={() => setActionDropDownOpen(!actionDropdownIsOpen)}\n        toggle={<KebabToggle onToggle={(isOpen) => setActionDropDownOpen(isOpen)} id=\"expression-actions-toggle\" />}\n        isOpen={actionDropdownIsOpen}\n        isPlain\n        dropdownItems={[\n          <DropdownItem key=\"clear\" onClick={executeClearAction} isDisabled={!logicTypeIsPresent}>\n            {i18n.clear}\n          </DropdownItem>,\n        ]}\n      />\n    );\n  };\n\n  const buildLogicSelectorMenu = () => {\n    return (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={() => document.getElementById(\"expression-container-box\")!}\n        body={<SimpleList onSelect={onLogicTypeSelect}>{renderLogicTypeItems()}</SimpleList>}\n      />\n    );\n  };\n\n  const renderLogicTypeItems = () => {\n    return _.map(\n      [\n        i18n.literalExpression,\n        i18n.context,\n        i18n.decisionTable,\n        i18n.relation,\n        i18n.function,\n        i18n.invocation,\n        i18n.list,\n      ],\n      (key) => <SimpleListItem key={key}>{key}</SimpleListItem>\n    );\n  };\n\n  return (\n    <div className=\"expression-container\">\n      <span id=\"expression-title\">{props.name || \"\"}</span>\n      <span id=\"expression-type\">({props.type ?? \"<Undefined>\"})</span>\n      <span id=\"expression-actions\">{renderExpressionActionsDropdown()}</span>\n\n      <div\n        id=\"expression-container-box\"\n        className={logicTypeIsPresent ? \"logic-type-selected\" : \"logic-type-not-present\"}\n      >\n        {selectedExpression}\n      </div>\n\n      {!logicTypeIsPresent ? buildLogicSelectorMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => (\n  <I18nDictionariesProvider\n    defaults={boxedExpressionEditorI18nDefaults}\n    dictionaries={boxedExpressionEditorDictionaries}\n    initialLocale={navigator.language}\n    ctx={BoxedExpressionEditorI18nContext}\n  >\n    <ExpressionContainer {...props.expressionDefinition} />\n  </I18nDictionariesProvider>\n);\n\nexport { BoxedExpressionEditor };\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport './index.css';\nimport {BoxedExpressionEditor, ExpressionContainerProps} from \"./boxed_expression_editor\";\n\nconst expressionDefinition: ExpressionContainerProps = {'name': 'Expression Name'};\n\nReactDOM.render(<BoxedExpressionEditor expressionDefinition={expressionDefinition}/>, document.getElementById('root'));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  choose: \"Choose...\",\n  editExpression: \"Edit Expression\",\n  name: \"Name\",\n  dataType: \"Data Type\",\n  ...en_common,\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n  literalExpression: \"Literal expression\",\n  context: \"Context\",\n  decisionTable: \"Decision Table\",\n  relation: \"Relation\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  clear: \"Clear\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n"],"sourceRoot":""}